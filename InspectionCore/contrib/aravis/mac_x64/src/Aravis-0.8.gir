<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="aravis"/>
  <namespace name="Aravis"
             version="0.8"
             shared-library="libaravis-0.8.0.dylib"
             c:identifier-prefixes="Arv"
             c:symbol-prefixes="arv_">
    <alias name="PixelFormat" c:type="ArvPixelFormat">
      <doc xml:space="preserve"
           filename="../src/arvenums.h"
           line="90">A datatype to hold a pixel format.</doc>
      <source-position filename="../src/arvenums.h" line="96"/>
      <type name="guint32" c:type="guint32"/>
    </alias>
    <enumeration name="AcquisitionMode"
                 glib:type-name="ArvAcquisitionMode"
                 glib:get-type="arv_acquisition_mode_get_type"
                 c:type="ArvAcquisitionMode">
      <member name="continuous"
              value="0"
              c:identifier="ARV_ACQUISITION_MODE_CONTINUOUS"
              glib:nick="continuous">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="52">frames are captured continuously until stopped with the AcquisitionStop command.</doc>
      </member>
      <member name="single_frame"
              value="1"
              c:identifier="ARV_ACQUISITION_MODE_SINGLE_FRAME"
              glib:nick="single-frame">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="53">only one frame will be acquired</doc>
      </member>
      <member name="multi_frame"
              value="2"
              c:identifier="ARV_ACQUISITION_MODE_MULTI_FRAME"
              glib:nick="multi-frame">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="54">the number of frames specified by AcquisitionFrameCount is captured.</doc>
      </member>
      <function name="from_string"
                c:identifier="arv_acquisition_mode_from_string">
        <source-position filename="../src/arvenums.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="arv_acquisition_mode_to_string">
        <source-position filename="../src/arvenums.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <enumeration name="Auto"
                 glib:type-name="ArvAuto"
                 glib:get-type="arv_auto_get_type"
                 c:type="ArvAuto">
      <member name="off" value="0" c:identifier="ARV_AUTO_OFF" glib:nick="off">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="36">manual setting</doc>
      </member>
      <member name="once"
              value="1"
              c:identifier="ARV_AUTO_ONCE"
              glib:nick="once">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="37">automatic setting done once, then returns to manual</doc>
      </member>
      <member name="continuous"
              value="2"
              c:identifier="ARV_AUTO_CONTINUOUS"
              glib:nick="continuous">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="38">setting is adjusted continuously</doc>
      </member>
      <function name="from_string" c:identifier="arv_auto_from_string">
        <source-position filename="../src/arvenums.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="arv_auto_to_string">
        <source-position filename="../src/arvenums.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="ArvBuffer"
           parent="GObject.Object"
           glib:type-name="ArvBuffer"
           glib:get-type="arv_buffer_get_type"
           glib:type-struct="BufferClass">
      <doc xml:space="preserve"
           filename="../src/arvbuffer.c"
           line="23">#ArvBuffer provides a class for the instantiation of buffers used for the
storage of the separate images of the video stream. The actual data space
may either be allocated by #ArvBuffer during an object instatiation, of
preallocated. #ArvBuffer also allows the transmission of image metadata,
such as offsets and size of the transmitted region of interrest, pixel
format and time stamp.</doc>
      <source-position filename="../src/arvbuffer.h" line="89"/>
      <constructor name="new" c:identifier="arv_buffer_new" version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="97">Creates a new buffer for the storage of the video stream images.
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.</doc>
        <source-position filename="../src/arvbuffer.h" line="94"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="107">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="99">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="100">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_allocate"
                   c:identifier="arv_buffer_new_allocate"
                   version="0.2.3">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="118">Creates a new buffer for the storage of the video stream images.
The data space is allocated by this function, and will
be freed when the buffer is destroyed.</doc>
        <source-position filename="../src/arvbuffer.h" line="93"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="126">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="120">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="arv_buffer_new_full"
                   version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="54">Creates a new buffer for the storage of the video stream images.
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.

If @user_data_destroy_func is non NULL, it will be called in order to destroy
user_data when the buffer is destroyed.</doc>
        <source-position filename="../src/arvbuffer.h" line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="69">a new #ArvBuffer object</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="56">payload size</doc>
            <type name="gsize" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="57">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="58">a pointer to user data associated to this buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data_destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="59">an optional user data destroy callback</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_chunk_data"
              c:identifier="arv_buffer_get_chunk_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="182">Chunk data accessor.</doc>
        <source-position filename="../src/arvbuffer.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="190">a pointer to the chunk data.</doc>
          <array length="1" zero-terminated="0" c:type="void*">
            <type name="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="184">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="chunk_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="185">chunk id</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="186">location to store chunk data size, or %NULL</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_data"
              c:identifier="arv_buffer_get_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="137">Buffer data accessor.</doc>
        <source-position filename="../src/arvbuffer.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="144">a pointer to the buffer data.</doc>
          <array length="0" zero-terminated="0" c:type="void*">
            <type name="guint8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="139">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="140">location to store data size, or %NULL</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_id"
              c:identifier="arv_buffer_get_frame_id"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="382">Gets the buffer frame id. For GigEVision devices, 0 is an invalid value.</doc>
        <source-position filename="../src/arvbuffer.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="388">frame id, 0 on error.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="384">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_height"
              c:identifier="arv_buffer_get_image_height"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="468">Gets the image width. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="474">image height, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="470">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_pixel_format"
              c:identifier="arv_buffer_get_image_pixel_format"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="528">Gets the image pixel format. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="534">image pixel format.</doc>
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="530">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_region"
              c:identifier="arv_buffer_get_image_region"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="419">Gets the image region. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="421">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="422">image x offset placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="423">image y offset placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="424">image width placholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="425">image height placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_image_width"
              c:identifier="arv_buffer_get_image_width"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="448">Gets the image width. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="454">image width, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="450">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_x"
              c:identifier="arv_buffer_get_image_x"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="488">Gets the image x offset. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="494">image x offset, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="490">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_image_y"
              c:identifier="arv_buffer_get_image_y"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="508">Gets the image y offset. This function must only be called on buffer containing a @ARV_BUFFER_PAYLOAD_TYPE_IMAGE payload.</doc>
        <source-position filename="../src/arvbuffer.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="514">image y offset, in pixels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="510">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload_type"
              c:identifier="arv_buffer_get_payload_type"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="282">Gets the buffer payload type.</doc>
        <source-position filename="../src/arvbuffer.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="288">payload type.</doc>
          <type name="BufferPayloadType" c:type="ArvBufferPayloadType"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="284">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="arv_buffer_get_status"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="263">Gets the buffer acquisition status.</doc>
        <source-position filename="../src/arvbuffer.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="269">buffer acquisition status.</doc>
          <type name="BufferStatus" c:type="ArvBufferStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="265">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_system_timestamp"
              c:identifier="arv_buffer_get_system_timestamp"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="342">Gets the system timestamp for when the frame was received. Expressed in
nanoseconds.</doc>
        <source-position filename="../src/arvbuffer.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="349">buffer system timestamp, in nanoseconds.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="344">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp"
              c:identifier="arv_buffer_get_timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="301">Gets the buffer camera timestamp, expressed as nanoseconds. Not all devices
provide reliable timestamp, which means sometimes its better to rely on the
buffer completion host local time, or to use
arv_buffer_get_system_timestamp().</doc>
        <source-position filename="../src/arvbuffer.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="310">buffer timestamp, in nanoseconds.</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="303">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_data"
              c:identifier="arv_buffer_get_user_data"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="244">Gets a pointer to user data set by arv_buffer_new_full.</doc>
        <source-position filename="../src/arvbuffer.h" line="100"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="250">user data, or NULL if not set.</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="246">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_chunks"
              c:identifier="arv_buffer_has_chunks"
              version="0.8.0">
        <source-position filename="../src/arvbuffer.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvbuffer.c"
               line="169">%TRUE if @buffer has a payload type that contains chunk data.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="167">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_frame_id"
              c:identifier="arv_buffer_set_frame_id"
              version="0.8.3">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="401">Sets the buffer frame id.  For GigEVision devices, 0 is an invalid value.</doc>
        <source-position filename="../src/arvbuffer.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="403">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="frame_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="404">a #guint64</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_system_timestamp"
              c:identifier="arv_buffer_set_system_timestamp"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="362">Sets the system timestamp for when the frame was received. Expressed in
nanoseconds.</doc>
        <source-position filename="../src/arvbuffer.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="364">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="timestamp_ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="365">a timestamp, expressed as nanoseconds</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timestamp"
              c:identifier="arv_buffer_set_timestamp"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.c"
             line="323">Sets the buffer timestamp, which allows to override the timpestamp set by
the camera, which in some case is incorrect.</doc>
        <source-position filename="../src/arvbuffer.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="325">a #ArvBuffer</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </instance-parameter>
          <parameter name="timestamp_ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvbuffer.c"
                 line="326">a timestamp, expressed as nanoseconds</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="BufferClass"
            c:type="ArvBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <source-position filename="../src/arvbuffer.h" line="89"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="BufferPayloadType"
                 glib:type-name="ArvBufferPayloadType"
                 glib:get-type="arv_buffer_payload_type_get_type"
                 c:type="ArvBufferPayloadType">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="61">unknown payload type</doc>
      </member>
      <member name="image"
              value="1"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_IMAGE"
              glib:nick="image">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="62">image data</doc>
      </member>
      <member name="rawdata"
              value="2"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_RAWDATA"
              glib:nick="rawdata">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="63">raw data</doc>
      </member>
      <member name="file"
              value="3"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_FILE"
              glib:nick="file">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="64">file</doc>
      </member>
      <member name="chunk_data"
              value="4"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA"
              glib:nick="chunk-data">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="65">chunk data</doc>
      </member>
      <member name="extended_chunk_data"
              value="5"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_EXTENDED_CHUNK_DATA"
              glib:nick="extended-chunk-data">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="66">extended chunk data</doc>
      </member>
      <member name="jpeg"
              value="6"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_JPEG"
              glib:nick="jpeg">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="67">JPEG data</doc>
      </member>
      <member name="jpeg2000"
              value="7"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_JPEG2000"
              glib:nick="jpeg2000">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="68">JPEG2000 data</doc>
      </member>
      <member name="h264"
              value="8"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_H264"
              glib:nick="h264">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="69">h264 data</doc>
      </member>
      <member name="multizone_image"
              value="9"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_MULTIZONE_IMAGE"
              glib:nick="multizone-image">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="70">multizone image</doc>
      </member>
      <member name="image_extended_chunk"
              value="16385"
              c:identifier="ARV_BUFFER_PAYLOAD_TYPE_IMAGE_EXTENDED_CHUNK"
              glib:nick="image-extended-chunk">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="71">image and chunk data</doc>
      </member>
    </enumeration>
    <enumeration name="BufferStatus"
                 glib:type-name="ArvBufferStatus"
                 glib:get-type="arv_buffer_status_get_type"
                 c:type="ArvBufferStatus">
      <member name="unknown"
              value="-1"
              c:identifier="ARV_BUFFER_STATUS_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="36">unknown status</doc>
      </member>
      <member name="success"
              value="0"
              c:identifier="ARV_BUFFER_STATUS_SUCCESS"
              glib:nick="success">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="37">the buffer contains a valid image</doc>
      </member>
      <member name="cleared"
              value="1"
              c:identifier="ARV_BUFFER_STATUS_CLEARED"
              glib:nick="cleared">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="38">the buffer is cleared</doc>
      </member>
      <member name="timeout"
              value="2"
              c:identifier="ARV_BUFFER_STATUS_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="39">timeout was reached before all packets are received</doc>
      </member>
      <member name="missing_packets"
              value="3"
              c:identifier="ARV_BUFFER_STATUS_MISSING_PACKETS"
              glib:nick="missing-packets">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="40">stream has missing packets</doc>
      </member>
      <member name="wrong_packet_id"
              value="4"
              c:identifier="ARV_BUFFER_STATUS_WRONG_PACKET_ID"
              glib:nick="wrong-packet-id">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="41">stream has packet with wrong id</doc>
      </member>
      <member name="size_mismatch"
              value="5"
              c:identifier="ARV_BUFFER_STATUS_SIZE_MISMATCH"
              glib:nick="size-mismatch">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="42">the received image didn't fit in the buffer data space</doc>
      </member>
      <member name="filling"
              value="6"
              c:identifier="ARV_BUFFER_STATUS_FILLING"
              glib:nick="filling">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="43">the image is currently being filled</doc>
      </member>
      <member name="aborted"
              value="7"
              c:identifier="ARV_BUFFER_STATUS_ABORTED"
              glib:nick="aborted">
        <doc xml:space="preserve"
             filename="../src/arvbuffer.h"
             line="44">the filling was aborted before completion</doc>
      </member>
    </enumeration>
    <class name="Camera"
           c:symbol-prefix="camera"
           c:type="ArvCamera"
           parent="GObject.Object"
           glib:type-name="ArvCamera"
           glib:get-type="arv_camera_get_type"
           glib:type-struct="CameraClass">
      <doc xml:space="preserve"
           filename="../src/arvcamera.c"
           line="23">#ArvCamera is a class for the generic control of cameras. It hides the
complexity of the genicam interface by providing a simple API, with the
drawback of not exposing all the available features. See #ArvDevice and
#ArvGc for a more advanced use of the Aravis library.

&lt;example id="arv-example"&gt;&lt;title&gt;Example use of the ArvCamera API&lt;/title&gt;
&lt;programlisting&gt;
&lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="../../../../tests/arvexample.c"&gt;
  &lt;xi:fallback&gt;FIXME: MISSING XINCLUDE CONTENT&lt;/xi:fallback&gt;
&lt;/xi:include&gt;
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
      <source-position filename="../src/arvcamera.h" line="42"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="arv_camera_new"
                   version="0.8.0"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2897">Creates a new #ArvCamera. If @name is null, it will instantiate the
first available camera.

If the camera is a GigEVision, @name can be either:

- &amp;lt;vendor&amp;gt;-&amp;lt;model&amp;gt;-&amp;lt;serial&amp;gt;
- &amp;lt;vendor_alias&amp;gt;-&amp;lt;serial&amp;gt;
- &amp;lt;vendor&amp;gt;-&amp;lt;serial&amp;gt;
- &amp;lt;user_id&amp;gt;
- &amp;lt;ip_address&amp;gt;
- &amp;lt;mac_address&amp;gt;

For example:

- The Imaging Source Europe GmbH-DFK 33GX265-39020369
- The Imaging Source Europe GmbH-39020369
- TIS-39020369
- 192.168.0.2
- 00:07:48:af:a2:61

If the camera is a USB3Vision device, @name is either:

- &amp;lt;vendor_alias&amp;gt;-&amp;lt;serial&amp;gt;
- &amp;lt;vendor&amp;gt;-&amp;lt;serial&amp;gt;</doc>
        <source-position filename="../src/arvcamera.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2927">a new #ArvCamera.</doc>
          <type name="Camera" c:type="ArvCamera*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2899">name of the camera.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_device"
                   c:identifier="arv_camera_new_with_device"
                   version="0.8.6"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2943">Creates a new #ArvCamera, using @device as its internal device object.</doc>
        <source-position filename="../src/arvcamera.h" line="45"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2950">a new #ArvCamera.</doc>
          <type name="Camera" c:type="ArvCamera*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2945">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="abort_acquisition"
              c:identifier="arv_camera_abort_acquisition"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="735">Aborts video stream acquisition.</doc>
        <source-position filename="../src/arvcamera.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="737">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="acquisition"
              c:identifier="arv_camera_acquisition"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="751">Acquire one image buffer.</doc>
        <source-position filename="../src/arvcamera.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="759">A new #ArvBuffer, NULL on error. The returned buffer must be freed using g_object_unref().</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="753">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="754">acquisition timeout in µs. Zero means no timeout.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_triggers"
              c:identifier="arv_camera_clear_triggers"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1306">Disables all triggers.</doc>
        <source-position filename="../src/arvcamera.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1308">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_chunk_parser"
              c:identifier="arv_camera_create_chunk_parser"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2876">Creates a new #ArvChunkParser object, used for the extraction of chunk data from #ArvBuffer.</doc>
        <source-position filename="../src/arvcamera.h" line="202"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2882">a new #ArvChunkParser.</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2878">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_stream"
              c:identifier="arv_camera_create_stream"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="135">Creates a new #ArvStream for video stream handling. See
#ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="../src/arvcamera.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="145">a new #ArvStream, to be freed after use with g_object_unref().</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="137">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="138">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="139">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumerations"
              c:identifier="arv_camera_dup_available_enumerations"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2230">Get all the available values of @feature, as 64 bit integers.</doc>
        <source-position filename="../src/arvcamera.h" line="160"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2239">a newly created array of integers, which must freed after use using g_free, or
NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2232">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2233">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2234">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumerations_as_display_names"
              c:identifier="arv_camera_dup_available_enumerations_as_display_names"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2286">Get display names of all the available entries of @feature.</doc>
        <source-position filename="../src/arvcamera.h" line="164"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2295">a newly created array of const strings, to be freed after use using g_free, or
%NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2288">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2289">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2290">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumerations_as_strings"
              c:identifier="arv_camera_dup_available_enumerations_as_strings"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2258">Get all the available values of @feature, as strings.</doc>
        <source-position filename="../src/arvcamera.h" line="162"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2267">a newly created array of const strings, which must freed after use using g_free,
or %NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2260">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2261">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2262">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_pixel_formats"
              c:identifier="arv_camera_dup_available_pixel_formats"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="638">Retrieves the list of all available pixel formats.</doc>
        <source-position filename="../src/arvcamera.h" line="82"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="646">a newly allocated array of #ArvPixelFormat, to be freed after use with
g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="640">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="641">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_pixel_formats_as_display_names"
              c:identifier="arv_camera_dup_available_pixel_formats_as_display_names"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="680">Retrieves the list of all available pixel formats as display names.
In general, these human-readable strings cannot be used as settings.</doc>
        <source-position filename="../src/arvcamera.h" line="84"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="689">a newly allocated array of string constants, to be freed after use with
g_free().</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="682">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="683">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_pixel_formats_as_strings"
              c:identifier="arv_camera_dup_available_pixel_formats_as_strings"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="658">Retrieves the list of all available pixel formats as strings.</doc>
        <source-position filename="../src/arvcamera.h" line="83"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="666">a newly allocated array of strings, to be freed after use with
g_free().</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="660">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="661">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_trigger_sources"
              c:identifier="arv_camera_dup_available_trigger_sources"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1268">Gets the list of all available trigger sources.</doc>
        <source-position filename="../src/arvcamera.h" line="109"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1276">a newly allocated array of strings, which must be freed using g_free().</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1270">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_sources"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1271">number of sources</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_triggers"
              c:identifier="arv_camera_dup_available_triggers"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1287">Gets a list of all available triggers: FrameStart, ExposureActive, etc...</doc>
        <source-position filename="../src/arvcamera.h" line="110"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1295">a newly allocated array of strings, which must be freed using g_free().</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1289">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="n_triggers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1290">number of available triggers</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute_command"
              c:identifier="arv_camera_execute_command"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1863">Execute a Genicam command.</doc>
        <source-position filename="../src/arvcamera.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1865">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1866">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_mode"
              c:identifier="arv_camera_get_acquisition_mode"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="822">acquisition mode.</doc>
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="819">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_binning"
              c:identifier="arv_camera_get_binning"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="476">Retrieves binning in both directions.</doc>
        <source-position filename="../src/arvcamera.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="478">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="dx"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="479">horizontal binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="480">vertical binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean"
              c:identifier="arv_camera_get_boolean"
              shadowed-by="get_boolean_gi"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1912">the boolean feature value, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1908">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1909">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean_gi"
              c:identifier="arv_camera_get_boolean_gi"
              shadows="get_boolean"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1929">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1930">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1931">output value</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_chunk_mode"
              c:identifier="arv_camera_get_chunk_mode"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2735">Check wether chunk data mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="../src/arvcamera.h" line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2742">%TRUE if chunk data mode is active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2737">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_chunk_state"
              c:identifier="arv_camera_get_chunk_state"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2784">Gets state of chunk data. Chunk data are be embedded in #ArvBuffer only
if chunk mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="../src/arvcamera.h" line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2793">%TRUE if @chunk is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2786">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2787">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="arv_camera_get_device"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1687">Retrieves the #ArvDevice object for more complete access to camera features.</doc>
        <source-position filename="../src/arvcamera.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1693">underlying device object.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1689">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="arv_camera_get_device_id"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="199">the camera device ID.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="196">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time"
              c:identifier="arv_camera_get_exposure_time"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1415">current exposure time, in µs.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1412">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time_auto"
              c:identifier="arv_camera_get_exposure_time_auto"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1511">auto exposure mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1508">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_exposure_time_bounds"
              c:identifier="arv_camera_get_exposure_time_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1440">Retrieves exposure time bounds, in µs.</doc>
        <source-position filename="../src/arvcamera.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1442">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1443">minimum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1444">maximum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float"
              c:identifier="arv_camera_get_float"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2187">the float feature value, 0.0 on error.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2183">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2184">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_bounds"
              c:identifier="arv_camera_get_float_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2202">Retrieves float feature bounds.</doc>
        <source-position filename="../src/arvcamera.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2204">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2205">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2206">minimum feature value</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2207">maximum feature value</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_count"
              c:identifier="arv_camera_get_frame_count"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="881">number of frames to capture in MultiFrame mode.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="878">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frame_count_bounds"
              c:identifier="arv_camera_get_frame_count_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="892">Retrieves allowed range for frame count.</doc>
        <source-position filename="../src/arvcamera.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="894">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="895">minimal possible frame count</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="896">maximum possible frame count</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_rate"
              c:identifier="arv_camera_get_frame_rate"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1057">actual frame rate, in Hz.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1054">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frame_rate_bounds"
              c:identifier="arv_camera_get_frame_rate_bounds"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1104">Retrieves allowed range for framerate.

Since 0.8.0</doc>
        <source-position filename="../src/arvcamera.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1106">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1107">minimal possible framerate</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1108">maximum possible framerate</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gain"
              c:identifier="arv_camera_get_gain"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1579">the current gain setting.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1576">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gain_auto"
              c:identifier="arv_camera_get_gain_auto"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1653">auto gain mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1650">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gain_bounds"
              c:identifier="arv_camera_get_gain_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1599">Retrieves gain bounds.</doc>
        <source-position filename="../src/arvcamera.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1601">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1602">minimum gain</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1603">maximum gain</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height_bounds"
              c:identifier="arv_camera_get_height_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="413">Retrieves the valid range for image height.</doc>
        <source-position filename="../src/arvcamera.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="415">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="416">minimum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="417">maximum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height_increment"
              c:identifier="arv_camera_get_height_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="436">height value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="433">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_integer"
              c:identifier="arv_camera_get_integer"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2016">the integer feature value, 0 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2012">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2013">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_bounds"
              c:identifier="arv_camera_get_integer_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2031">Retrieves integer feature bounds.</doc>
        <source-position filename="../src/arvcamera.h" line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2033">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2034">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2035">minimum feature value</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2036">maximum feature value</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_increment"
              c:identifier="arv_camera_get_integer_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2065">@feature value increment, or 1 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2061">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2062">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model_name"
              c:identifier="arv_camera_get_model_name"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="183">the camera model name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="180">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload"
              c:identifier="arv_camera_get_payload"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1668">Retrieves the size needed for the storage of an image. This value is used
for the creation of the stream buffers.</doc>
        <source-position filename="../src/arvcamera.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1676">frame storage size, in bytes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1670">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel_format"
              c:identifier="arv_camera_get_pixel_format"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="611">pixel format.</doc>
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="608">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixel_format_as_string"
              c:identifier="arv_camera_get_pixel_format_as_string"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="622">Retuns: pixel format as string, NULL on error.</doc>
        <source-position filename="../src/arvcamera.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="624">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_region"
              c:identifier="arv_camera_get_region"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="277">Retrieves the current region of interest.</doc>
        <source-position filename="../src/arvcamera.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="279">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="280">x offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="281">y_offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="282">region width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="283">region height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sensor_size"
              c:identifier="arv_camera_get_sensor_size"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="214">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="215">camera sensor width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="216">camera sensor height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="arv_camera_get_string"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1973">the string feature value, %NULL on error.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1969">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1970">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_trigger_source"
              c:identifier="arv_camera_get_trigger_source"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1249">Gets the trigger source. This function doesn't check if the camera is configured
to actually use this source as a trigger.</doc>
        <source-position filename="../src/arvcamera.h" line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1257">a string containing the trigger source name, NULL on error.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1251">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_name"
              c:identifier="arv_camera_get_vendor_name"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="167">the camera vendor name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="164">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width_bounds"
              c:identifier="arv_camera_get_width_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="379">Retrieves the valid range for image width.</doc>
        <source-position filename="../src/arvcamera.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="381">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="382">minimum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="383">maximum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_width_increment"
              c:identifier="arv_camera_get_width_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="402">width value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="399">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x_binning_bounds"
              c:identifier="arv_camera_get_x_binning_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="504">Retrieves the valid range for image horizontal binning.</doc>
        <source-position filename="../src/arvcamera.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="506">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="507">minimum binning</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="508">maximum binning</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_x_binning_increment"
              c:identifier="arv_camera_get_x_binning_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="527">horizontal binning value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="524">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x_offset_bounds"
              c:identifier="arv_camera_get_x_offset_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="311">Retrieves the valid range for image horizontal offset.</doc>
        <source-position filename="../src/arvcamera.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="313">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="314">minimum offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="315">maximum offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_x_offset_increment"
              c:identifier="arv_camera_get_x_offset_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="334">horizontal offset value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="331">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y_binning_bounds"
              c:identifier="arv_camera_get_y_binning_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="538">Retrieves the valid range for image vertical binning.</doc>
        <source-position filename="../src/arvcamera.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="540">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="541">minimum binning</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="542">maximum binning</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_y_binning_increment"
              c:identifier="arv_camera_get_y_binning_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="561">vertical binning value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="558">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y_offset_bounds"
              c:identifier="arv_camera_get_y_offset_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="345">Retrieves the valid range for image vertical offset.</doc>
        <source-position filename="../src/arvcamera.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="347">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="348">minimum offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="349">maximum offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_y_offset_increment"
              c:identifier="arv_camera_get_y_offset_increment"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="368">vertical offset value increment.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="365">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_auto_packet_size"
              c:identifier="arv_camera_gv_auto_packet_size"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2535">Automatically determine the biggest packet size that can be used data
streaming, and set GevSCPSPacketSize value accordingly. This function relies
on the GevSCPSFireTestPacket feature. If this feature is not available, the
packet size will be set to a default value (1500 bytes).</doc>
        <source-position filename="../src/arvcamera.h" line="181"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2545">The packet size, in bytes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2537">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_current_stream_channel"
              c:identifier="arv_camera_gv_get_current_stream_channel"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="175"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2399">The current stream channel id.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2396">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_n_stream_channels"
              c:identifier="arv_camera_gv_get_n_stream_channels"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2359">the number of supported stream channels.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2356">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_packet_delay"
              c:identifier="arv_camera_gv_get_packet_delay"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2455">The inter packet delay, in nanoseconds.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2452">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_get_packet_size"
              c:identifier="arv_camera_gv_get_packet_size"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2520">The stream packet size, in bytes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2517">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="gv_select_stream_channel"
              c:identifier="arv_camera_gv_select_stream_channel"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2372">Select the current stream channel.</doc>
        <source-position filename="../src/arvcamera.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2374">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="channel_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2375">id of the channel to select</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_packet_delay"
              c:identifier="arv_camera_gv_set_packet_delay"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2412">Configure the inter packet delay to insert between each packet for the current stream
channel. This can be used as a crude flow-control mechanism if the application or the network
infrastructure cannot keep up with the packets coming from the device.</doc>
        <source-position filename="../src/arvcamera.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2414">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="delay_ns" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2415">inter packet delay, in nanoseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_packet_size"
              c:identifier="arv_camera_gv_set_packet_size"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2487">Specifies the stream packet size, in bytes, to send on the selected channel for a GVSP transmitter
or specifies the maximum packet size supported by a GVSP receiver.

This does not include data leader and data trailer and the last data packet which might be of
smaller size (since packet size is not necessarily a multiple of block size for stream channel).</doc>
        <source-position filename="../src/arvcamera.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2489">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2490">packet size, in bytes</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_packet_size_adjustment"
              c:identifier="arv_camera_gv_set_packet_size_adjustment"
              version="0.8.3">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2581">Sets the option for packet size adjustment that happens at stream object creation.</doc>
        <source-position filename="../src/arvcamera.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2583">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="adjustment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2584">a #ArvGvPacketSizeAdjustment option</doc>
            <type name="GvPacketSizeAdjustment"
                  c:type="ArvGvPacketSizeAdjustment"/>
          </parameter>
        </parameters>
      </method>
      <method name="gv_set_stream_options"
              c:identifier="arv_camera_gv_set_stream_options"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2560">Sets the options used during stream object creation. These options mus be
set before the call to arv_camera_create_stream().</doc>
        <source-position filename="../src/arvcamera.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2562">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2563">option for stream creation</doc>
            <type name="GvStreamOption" c:type="ArvGvStreamOption"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_binning_available"
              c:identifier="arv_camera_is_binning_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1837">%TRUE if Binning feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1834">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_exposure_auto_available"
              c:identifier="arv_camera_is_exposure_auto_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1779">%TRUE if Exposure Auto feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1776">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_exposure_time_available"
              c:identifier="arv_camera_is_exposure_time_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1750">%TRUE if Exposure Time feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1747">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_feature_available"
              c:identifier="arv_camera_is_feature_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2320">%TRUE if feature is available, %FALSE if not or on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2316">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2317">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_frame_rate_available"
              c:identifier="arv_camera_is_frame_rate_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1713">%TRUE if FrameRate feature is available</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1710">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gain_auto_available"
              c:identifier="arv_camera_is_gain_auto_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1821">%TRUE if Gain feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1818">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gain_available"
              c:identifier="arv_camera_is_gain_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="1795">%TRUE if Gain feature is available.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1792">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_gv_device"
              c:identifier="arv_camera_is_gv_device"
              version="0.4.0">
        <source-position filename="../src/arvcamera.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2339">%TRUE if @camera is a GigEVision device.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2337">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_uv_device"
              c:identifier="arv_camera_is_uv_device"
              version="0.6.0">
        <source-position filename="../src/arvcamera.h" line="189"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2605">%TRUE if @camera is a USB3Vision device.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2603">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_acquisition_mode"
              c:identifier="arv_camera_set_acquisition_mode"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_binning"
              c:identifier="arv_camera_set_binning"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="447">Defines binning in both directions. Not all cameras support this
feature.</doc>
        <source-position filename="../src/arvcamera.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="449">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="450">horizontal binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="451">vertical binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_boolean"
              c:identifier="arv_camera_set_boolean"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1884">Set a boolean feature value.</doc>
        <source-position filename="../src/arvcamera.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1886">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1887">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1888">new feature value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunk_mode"
              c:identifier="arv_camera_set_chunk_mode"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2714">Controls wether chunk data mode is active. When active, chunk data
are appended to image data in #ArvBuffer. A #ArvChunkParser must be used in
order to extract chunk data.</doc>
        <source-position filename="../src/arvcamera.h" line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2716">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="is_active" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2717">wether to enable chunk data mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunk_state"
              c:identifier="arv_camera_set_chunk_state"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2755">Sets state of a chunk data. Chunk data are be embedded in #ArvBuffer only
if chunk mode is active. Please see arv_camera_set_chunk_mode().</doc>
        <source-position filename="../src/arvcamera.h" line="199"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2757">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2758">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="is_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2759">wether to enable this chunk</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_chunks"
              c:identifier="arv_camera_set_chunks"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2815">Convenience function for enabling a set of chunk data. Chunk mode is activated, or deactivated
if @chunk_list is %NULL or empty. All chunk data not listed are disabled.</doc>
        <source-position filename="../src/arvcamera.h" line="201"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2817">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="chunk_list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2818">chunk data names, as a comma or space separated list</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_mode"
              c:identifier="arv_camera_set_exposure_mode"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="ExposureMode" c:type="ArvExposureMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time"
              c:identifier="arv_camera_set_exposure_time"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1357">Sets exposure time. User should take care to set a value compatible with
the desired frame rate.</doc>
        <source-position filename="../src/arvcamera.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1359">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="exposure_time_us" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1360">exposure time, in µs</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time_auto"
              c:identifier="arv_camera_set_exposure_time_auto"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1489">Configures automatic exposure feature.</doc>
        <source-position filename="../src/arvcamera.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1491">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1492">auto exposure mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_float"
              c:identifier="arv_camera_set_float"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="2159">Set a float feature value.</doc>
        <source-position filename="../src/arvcamera.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2161">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2162">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2163">new feature value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_frame_count"
              c:identifier="arv_camera_set_frame_count"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="839">Sets the number of frames to capture in MultiFrame mode.</doc>
        <source-position filename="../src/arvcamera.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="841">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="frame_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="842">number of frames to capture in MultiFrame mode</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_frame_rate"
              c:identifier="arv_camera_set_frame_rate"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="910">Configures a fixed frame rate mode. Once acquisition start is triggered, the video stream will be acquired with the given frame rate. A
negative or zero @frame_rate value disables the frame rate limit.</doc>
        <source-position filename="../src/arvcamera.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="912">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="frame_rate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="913">frame rate, in Hz</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain"
              c:identifier="arv_camera_set_gain"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1543">Sets the gain of the ADC converter.</doc>
        <source-position filename="../src/arvcamera.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1545">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="gain" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1546">gain value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain_auto"
              c:identifier="arv_camera_set_gain_auto"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1631">Configures automatic gain feature.</doc>
        <source-position filename="../src/arvcamera.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1633">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1634">auto gain mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_integer"
              c:identifier="arv_camera_set_integer"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1988">Set an integer feature value.</doc>
        <source-position filename="../src/arvcamera.h" line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1990">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1991">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1992">new feature value</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_format"
              c:identifier="arv_camera_set_pixel_format"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="572">Defines pixel format.</doc>
        <source-position filename="../src/arvcamera.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="574">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="575">pixel format</doc>
            <type name="PixelFormat" c:type="ArvPixelFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_format_from_string"
              c:identifier="arv_camera_set_pixel_format_from_string"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="589">Defines pixel format described by a string.</doc>
        <source-position filename="../src/arvcamera.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="591">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="592">pixel format</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_region"
              c:identifier="arv_camera_set_region"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="238">Defines the region of interest which will be transmitted in the video
stream.</doc>
        <source-position filename="../src/arvcamera.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="240">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="241">x offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="242">y_offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="243">region width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="244">region height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string"
              c:identifier="arv_camera_set_string"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1945">Set an string feature value.</doc>
        <source-position filename="../src/arvcamera.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1947">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1948">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1949">new feature value</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger"
              c:identifier="arv_camera_set_trigger"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1181">Configures the camera in trigger mode. Typical values for source are "Line1"
or "Line2". See the camera documentation for the allowed values.
Activation is set to rising edge. It can be changed by accessing the
underlying device object.

Source can also be "Software". In this case, an acquisition is triggered
by a call to arv_camera_software_trigger().</doc>
        <source-position filename="../src/arvcamera.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1183">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1184">trigger source as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger_source"
              c:identifier="arv_camera_set_trigger_source"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1231">Sets the trigger source. This function doesn't check if the camera is configured
to actually use this source as a trigger.</doc>
        <source-position filename="../src/arvcamera.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1233">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1234">source name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="software_trigger"
              c:identifier="arv_camera_software_trigger"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="1340">Sends a software trigger command to @camera. The camera must be previously
configured to use a software trigger, using @arv_camera_set_trigger().</doc>
        <source-position filename="../src/arvcamera.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="1342">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="start_acquisition"
              c:identifier="arv_camera_start_acquisition"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="703">Starts video stream acquisition.</doc>
        <source-position filename="../src/arvcamera.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="705">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop_acquisition"
              c:identifier="arv_camera_stop_acquisition"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="719">Stops video stream acquisition.</doc>
        <source-position filename="../src/arvcamera.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="721">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uv_get_bandwidth"
              c:identifier="arv_camera_uv_get_bandwidth"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2685">the current bandwidth limit</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2682">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uv_get_bandwidth_bounds"
              c:identifier="arv_camera_uv_get_bandwidth_bounds"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="193"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2700">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2701">minimum bandwidth</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2702">maximum bandwidth</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uv_is_bandwidth_control_available"
              c:identifier="arv_camera_uv_is_bandwidth_control_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvcamera.c"
               line="2631">wether bandwidth limits are available on this camera</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2628">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="uv_set_bandwidth"
              c:identifier="arv_camera_uv_set_bandwidth"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvcamera.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2654">a #ArvCamera</doc>
            <type name="Camera" c:type="ArvCamera*"/>
          </instance-parameter>
          <parameter name="bandwidth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvcamera.c"
                 line="2655">Desired bandwith limit in megabits/sec. Set to 0 to disable limit mode.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="device"
                stability="Private"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="3134">Internal device object</doc>
        <type name="Device"/>
      </property>
      <property name="name"
                stability="Private"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvcamera.c"
             line="3117">Internal device name for object construction</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="CameraClass"
            c:type="ArvCameraClass"
            glib:is-gtype-struct-for="Camera">
      <source-position filename="../src/arvcamera.h" line="42"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ChunkParser"
           c:symbol-prefix="chunk_parser"
           c:type="ArvChunkParser"
           parent="GObject.Object"
           glib:type-name="ArvChunkParser"
           glib:get-type="arv_chunk_parser_get_type"
           glib:type-struct="ChunkParserClass">
      <doc xml:space="preserve"
           filename="../src/arvchunkparser.c"
           line="23">#ArvChunkParser provides a class for the instantiation of chunk parsers used
for the extraction of chunk data stored in the stream payload.

Chunks are tagged blocks of data stored in a #ArvBuffer containing
a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload. The tags allow a chunk
parser to dissect the data payload into its elements and to identify the content.

Chunk data are enabled using either arv_camera_set_chunks() or
arv_camera_set_chunk_mode(). Both functions are simple convenience wrappers
that handle the setting of ChunkModeActive, ChunkSelector and ChunkEnable
GENICAM features.

&lt;example id="arv-chunk-parser-test"&gt;&lt;title&gt;Example use of the ArvChunkParser API&lt;/title&gt;
&lt;programlisting&gt;
&lt;xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="../../../../tests/arvchunkparsertest.c"&gt;
  &lt;xi:fallback&gt;FIXME: MISSING XINCLUDE CONTENT&lt;/xi:fallback&gt;
&lt;/xi:include&gt;
&lt;/programlisting&gt;
&lt;/example&gt;</doc>
      <source-position filename="../src/arvchunkparser.h" line="53"/>
      <constructor name="new"
                   c:identifier="arv_chunk_parser_new"
                   version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvchunkparser.c"
             line="240">Creates a new chunk_parser.</doc>
        <source-position filename="../src/arvchunkparser.h" line="55"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvchunkparser.c"
               line="247">a new #ArvChunkParser object</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <parameter name="xml" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="242">XML genicam data</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="243">genicam data size, -1 if NULL terminated</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_boolean_value"
              c:identifier="arv_chunk_parser_get_boolean_value"
              throws="1">
        <source-position filename="../src/arvchunkparser.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvchunkparser.c"
               line="91">the boolean chunk data value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="86">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="87">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="88">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_value"
              c:identifier="arv_chunk_parser_get_float_value"
              throws="1">
        <source-position filename="../src/arvchunkparser.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvchunkparser.c"
               line="208">the float chunk data value.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="203">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="204">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="205">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_value"
              c:identifier="arv_chunk_parser_get_integer_value"
              throws="1">
        <source-position filename="../src/arvchunkparser.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvchunkparser.c"
               line="169">the integer chunk data integer.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="164">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="165">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="166">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_value"
              c:identifier="arv_chunk_parser_get_string_value"
              throws="1">
        <source-position filename="../src/arvchunkparser.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvchunkparser.c"
               line="130">the string chunk data value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="125">a #ArvChunkParser</doc>
            <type name="ChunkParser" c:type="ArvChunkParser*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="126">a #ArvBuffer with a #ARV_BUFFER_PAYLOAD_TYPE_CHUNK_DATA payload</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="chunk" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvchunkparser.c"
                 line="127">chunk data name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="genicam"
                stability="Private"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvchunkparser.c"
             line="327">Internal Genicam object</doc>
        <type name="Gc"/>
      </property>
    </class>
    <record name="ChunkParserClass"
            c:type="ArvChunkParserClass"
            glib:is-gtype-struct-for="ChunkParser">
      <source-position filename="../src/arvchunkparser.h" line="53"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ChunkParserError"
                 glib:type-name="ArvChunkParserError"
                 glib:get-type="arv_chunk_parser_error_get_type"
                 c:type="ArvChunkParserError"
                 glib:error-domain="arv-chunk-parser-error-quark">
      <member name="invalid_feature_type"
              value="0"
              c:identifier="ARV_CHUNK_PARSER_ERROR_INVALID_FEATURE_TYPE"
              glib:nick="invalid-feature-type">
        <doc xml:space="preserve"
             filename="../src/arvchunkparser.h"
             line="41">invalid feature type</doc>
      </member>
      <member name="buffer_not_found"
              value="1"
              c:identifier="ARV_CHUNK_PARSER_ERROR_BUFFER_NOT_FOUND"
              glib:nick="buffer-not-found">
        <doc xml:space="preserve"
             filename="../src/arvchunkparser.h"
             line="42">a buffer is not attached to the chunk parser</doc>
      </member>
      <member name="chunk_not_found"
              value="2"
              c:identifier="ARV_CHUNK_PARSER_ERROR_CHUNK_NOT_FOUND"
              glib:nick="chunk-not-found">
        <doc xml:space="preserve"
             filename="../src/arvchunkparser.h"
             line="43">the requested chunk is not found in the buffer data</doc>
      </member>
      <function name="quark" c:identifier="arv_chunk_parser_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="ArvDevice"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDevice"
           glib:get-type="arv_device_get_type"
           glib:type-struct="DeviceClass">
      <doc xml:space="preserve"
           filename="../src/arvdevice.c"
           line="23">#ArvDevice is an abstract base class for the control of cameras. It provides
an easy access to the camera settings, and to its genicam interface for  more
advanced uses.</doc>
      <source-position filename="../src/arvdevice.h" line="89"/>
      <implements name="Gio.Initable"/>
      <virtual-method name="control_lost">
        <source-position filename="../src/arvdevice.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_stream"
                      invoker="create_stream"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="67">Creates a new #ArvStream for video stream handling. See
@ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="../src/arvdevice.h" line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="77">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="69">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="70">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="71">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_genicam" invoker="get_genicam" version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="189">Retrieves the genicam interface of the given device.</doc>
        <source-position filename="../src/arvdevice.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="195">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="191">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_genicam_xml"
                      invoker="get_genicam_xml"
                      version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="208">Gets the Genicam XML data stored in the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="215">a pointer to the Genicam XML data, owned by the device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="210">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="211">placeholder for the returned data size (bytes)</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_memory"
                      invoker="read_memory"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="90">Reads @size bytes from the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="82"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="100">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="92">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="93">memory address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="94">number of bytes to read</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="95">a buffer for the storage of the read data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_register"
                      invoker="read_register"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="142">Reads the value of a device register.</doc>
        <source-position filename="../src/arvdevice.h" line="84"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="151">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="144">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="145">register address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="146">a placeholder for the read value</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_memory"
                      invoker="write_memory"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="116">Writes @size bytes to the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="83"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="126">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="118">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="119">memory address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="120">size of the returned buffer</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="121">the buffer read from memory</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_register"
                      invoker="write_register"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="166">Writes @value to a device register.</doc>
        <source-position filename="../src/arvdevice.h" line="85"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="175">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="168">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="169">the register address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="170">value to write</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_chunk_parser"
              c:identifier="arv_device_create_chunk_parser"
              version="0.4.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="234">Create a #ArvChunkParser object, to be used for chunk data extraction from #ArvBuffer.</doc>
        <source-position filename="../src/arvdevice.h" line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="240">a new #ArvChunkParser object, NULL on error.</doc>
          <type name="ChunkParser" c:type="ArvChunkParser*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="236">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_stream"
              c:identifier="arv_device_create_stream"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="67">Creates a new #ArvStream for video stream handling. See
@ArvStreamCallback for details regarding the callback function.</doc>
        <source-position filename="../src/arvdevice.h" line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="77">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="69">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="70">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="71">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumeration_feature_values"
              c:identifier="arv_device_dup_available_enumeration_feature_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="695">Get all the available values of @feature, as integers.</doc>
        <source-position filename="../src/arvdevice.h" line="124"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="704">a newly created array of 64 bit integers, which must freed after use using g_free,
or NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="697">an #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="698">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="699">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumeration_feature_values_as_display_names"
              c:identifier="arv_device_dup_available_enumeration_feature_values_as_display_names"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="755">Get display names of all the available entries of @feature.</doc>
        <source-position filename="../src/arvdevice.h" line="128"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="764">a newly created array of const strings, to be freed after use using g_free, or
%NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="757">an #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="758">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="759">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_enumeration_feature_values_as_strings"
              c:identifier="arv_device_dup_available_enumeration_feature_values_as_strings"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="725">Get all the available values of @feature, as strings.</doc>
        <source-position filename="../src/arvdevice.h" line="126"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="734">a newly created array of const strings, which must freed after use using g_free,
or NULL on error.</doc>
          <array length="1" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="727">an #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="728">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="729">placeholder for the number of returned values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="execute_command"
              c:identifier="arv_device_execute_command"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="327">Execute a genicam command.</doc>
        <source-position filename="../src/arvdevice.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="329">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="330">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean_feature_value"
              c:identifier="arv_device_get_boolean_feature_value"
              shadowed-by="get_boolean_feature_value_gi"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvdevice.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="376">the feature value, %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="372">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="373">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean_feature_value_gi"
              c:identifier="arv_device_get_boolean_feature_value_gi"
              shadows="get_boolean_feature_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="393">Get the feature value, or %FALSE on error.</doc>
        <source-position filename="../src/arvdevice.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="395">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="396">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="397">feature value</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature"
              c:identifier="arv_device_get_feature"
              version="0.2.0">
        <source-position filename="../src/arvdevice.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="263">the genicam node corresponding to the feature name, NULL if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="260">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="261">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_bounds"
              c:identifier="arv_device_get_float_feature_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="640">Retrieves feature bounds.</doc>
        <source-position filename="../src/arvdevice.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="642">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="643">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="644">minimum feature value</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="645">maximum feature value</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_value"
              c:identifier="arv_device_get_float_feature_value"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvdevice.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="623">the float feature value, 0.0 on error.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="619">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="620">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_genicam"
              c:identifier="arv_device_get_genicam"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="189">Retrieves the genicam interface of the given device.</doc>
        <source-position filename="../src/arvdevice.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="195">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="191">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_genicam_xml"
              c:identifier="arv_device_get_genicam_xml"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="208">Gets the Genicam XML data stored in the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="215">a pointer to the Genicam XML data, owned by the device.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="210">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="211">placeholder for the returned data size (bytes)</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_bounds"
              c:identifier="arv_device_get_integer_feature_bounds"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="503">Retrieves feature bounds.</doc>
        <source-position filename="../src/arvdevice.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="505">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="506">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="507">minimum feature value</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="508">maximum feature value</doc>
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_increment"
              c:identifier="arv_device_get_integer_feature_increment"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="558">Not all integer features have evenly distributed allowed values, which means the returned increment may not reflect the allowed value
set.</doc>
        <source-position filename="../src/arvdevice.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="567">feature value increment, or 1 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="560">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="561">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_value"
              c:identifier="arv_device_get_integer_feature_value"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvdevice.h" line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="486">the integer feature value, 0 on error.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="482">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="483">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_feature_value"
              c:identifier="arv_device_get_string_feature_value"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvdevice.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="441">the string feature value, %NULL on error.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="437">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="438">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_feature_available"
              c:identifier="arv_device_is_feature_available"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvdevice.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="285">%TRUE if feature is available, %FALSE if not or on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="281">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="282">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_memory"
              c:identifier="arv_device_read_memory"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="90">Reads @size bytes from the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="93"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="100">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="92">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="93">memory address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="94">number of bytes to read</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="95">a buffer for the storage of the read data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register"
              c:identifier="arv_device_read_register"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="142">Reads the value of a device register.</doc>
        <source-position filename="../src/arvdevice.h" line="95"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="151">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="144">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="145">register address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="146">a placeholder for the read value</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_boolean_feature_value"
              c:identifier="arv_device_set_boolean_feature_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="348">Set the value of a boolean feature.</doc>
        <source-position filename="../src/arvdevice.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="350">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="351">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="352">feature value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_features_from_string"
              c:identifier="arv_device_set_features_from_string"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="785">Set features from a string containing a list of space separated feature assignments or command names. For example:

|[&lt;!-- language="C" --&gt;
arv_device_set_features_from_string (device, "Width=256 Height=256 PixelFormat='Mono8' TriggerStart", &amp;error);
]|</doc>
        <source-position filename="../src/arvdevice.h" line="132"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="787">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="788">a space separated list of features assignments</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_float_feature_value"
              c:identifier="arv_device_set_float_feature_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="595">Set the float feature value.</doc>
        <source-position filename="../src/arvdevice.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="597">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="598">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="599">new feature value</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_integer_feature_value"
              c:identifier="arv_device_set_integer_feature_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="458">Set the integer feature value.</doc>
        <source-position filename="../src/arvdevice.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="460">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="461">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="462">new feature value</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_range_check_policy"
              c:identifier="arv_device_set_range_check_policy"
              version="0.8.6">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="876">Sets the range check policy. When enabled, before being set, the value of all nodes with an #ArvGcFloat or
#ArvGcInteger interface will be checked against their Min and Max properties.

&lt;warning&gt;&lt;para&gt;Be aware that some camera may have wrong definition of Min and Max, as this check is defined as not
mandatory in the Genicam specification. If this is the case, it will not possible to set the value of the features
with faulty Min or Max definition. Range check is disabled by default.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvdevice.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="878">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="879">range check policy</doc>
            <type name="RangeCheckPolicy" c:type="ArvRangeCheckPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_register_cache_policy"
              c:identifier="arv_device_set_register_cache_policy"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="850">Sets the register cache policy.

&lt;warning&gt;&lt;para&gt;Be aware that some camera may have wrong Cachable properties defined in their Genicam metadata, which may
lead to incorrect readouts. Using the debug cache policy, and activating genicam debug output (export ARV_DEBUG=genicam), can help you to
check the cache validity. In this mode, every time the cache content is not in sync with the actual register value, a debug message is
printed on the console.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvdevice.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="852">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="853">cache policy</doc>
            <type name="RegisterCachePolicy" c:type="ArvRegisterCachePolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_feature_value"
              c:identifier="arv_device_set_string_feature_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="413">Set the string feature value.</doc>
        <source-position filename="../src/arvdevice.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="415">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="416">feature name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="417">new feature value</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_memory"
              c:identifier="arv_device_write_memory"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="116">Writes @size bytes to the device memory.</doc>
        <source-position filename="../src/arvdevice.h" line="94"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="126">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="118">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="119">memory address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="120">size of the returned buffer</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="121">the buffer read from memory</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register"
              c:identifier="arv_device_write_register"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="166">Writes @value to a device register.</doc>
        <source-position filename="../src/arvdevice.h" line="96"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="../src/arvdevice.c"
               line="175">TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="168">a #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="169">the register address</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="170">value to write</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="control-lost" when="last" version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvdevice.c"
             line="942">Signal that the control of the device is lost.

This signal may be emited from a thread different than the main one,
so please take care to shared data access from the callback.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="DeviceClass"
            c:type="ArvDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="../src/arvdevice.h" line="89"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_stream">
        <callback name="create_stream" throws="1">
          <source-position filename="../src/arvdevice.h" line="77"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="77">a new #ArvStream.</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="69">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       scope="call"
                       closure="2">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="70">a frame processing callback</doc>
              <type name="StreamCallback" c:type="ArvStreamCallback"/>
            </parameter>
            <parameter name="user_data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1"
                       closure="2">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="71">user data for @callback</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam_xml">
        <callback name="get_genicam_xml">
          <source-position filename="../src/arvdevice.h" line="79"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="215">a pointer to the Genicam XML data, owned by the device.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="210">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="size"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="211">placeholder for the returned data size (bytes)</doc>
              <type name="gsize" c:type="size_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam">
        <callback name="get_genicam">
          <source-position filename="../src/arvdevice.h" line="80"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="195">the genicam interface.</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="191">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_memory">
        <callback name="read_memory" throws="1">
          <source-position filename="../src/arvdevice.h" line="82"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="100">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="92">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="93">memory address</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="94">number of bytes to read</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="95">a buffer for the storage of the read data</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_memory">
        <callback name="write_memory" throws="1">
          <source-position filename="../src/arvdevice.h" line="83"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="126">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="118">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="119">memory address</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="120">size of the returned buffer</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="full"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="121">the buffer read from memory</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_register">
        <callback name="read_register" throws="1">
          <source-position filename="../src/arvdevice.h" line="84"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="151">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="144">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="145">register address</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
            <parameter name="value"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="146">a placeholder for the read value</doc>
              <type name="guint32" c:type="guint32*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_register">
        <callback name="write_register" throws="1">
          <source-position filename="../src/arvdevice.h" line="85"/>
          <return-value transfer-ownership="none" skip="1">
            <doc xml:space="preserve"
                 filename="../src/arvdevice.c"
                 line="175">TRUE on success.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="168">a #ArvDevice</doc>
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="169">the register address</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdevice.c"
                   line="170">value to write</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="control_lost">
        <callback name="control_lost">
          <source-position filename="../src/arvdevice.h" line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="DeviceError"
                 glib:type-name="ArvDeviceError"
                 glib:get-type="arv_device_error_get_type"
                 c:type="ArvDeviceError"
                 glib:error-domain="arv-device-error-quark">
      <member name="wrong_feature"
              value="0"
              c:identifier="ARV_DEVICE_ERROR_WRONG_FEATURE"
              glib:nick="wrong-feature">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="42">Wrong feature type</doc>
      </member>
      <member name="feature_not_found"
              value="1"
              c:identifier="ARV_DEVICE_ERROR_FEATURE_NOT_FOUND"
              glib:nick="feature-not-found">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="43">Feature node not found</doc>
      </member>
      <member name="not_connected"
              value="2"
              c:identifier="ARV_DEVICE_ERROR_NOT_CONNECTED"
              glib:nick="not-connected">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="44">Device is not connected</doc>
      </member>
      <member name="protocol_error"
              value="3"
              c:identifier="ARV_DEVICE_ERROR_PROTOCOL_ERROR"
              glib:nick="protocol-error">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="45">Protocol error</doc>
      </member>
      <member name="transfer_error"
              value="4"
              c:identifier="ARV_DEVICE_ERROR_TRANSFER_ERROR"
              glib:nick="transfer-error">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="46">Transfer error</doc>
      </member>
      <member name="timeout"
              value="5"
              c:identifier="ARV_DEVICE_ERROR_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="47">Timeout detected</doc>
      </member>
      <member name="not_found"
              value="6"
              c:identifier="ARV_DEVICE_ERROR_NOT_FOUND"
              glib:nick="not-found">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="48">Device not found</doc>
      </member>
      <member name="invalid_parameter"
              value="7"
              c:identifier="ARV_DEVICE_ERROR_INVALID_PARAMETER"
              glib:nick="invalid-parameter">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="49">Invalid construction parameter</doc>
      </member>
      <member name="genicam_not_found"
              value="8"
              c:identifier="ARV_DEVICE_ERROR_GENICAM_NOT_FOUND"
              glib:nick="genicam-not-found">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="50">Missing Genicam data</doc>
      </member>
      <member name="no_stream_channel"
              value="9"
              c:identifier="ARV_DEVICE_ERROR_NO_STREAM_CHANNEL"
              glib:nick="no-stream-channel">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="51">No stream channel found</doc>
      </member>
      <member name="not_controller"
              value="10"
              c:identifier="ARV_DEVICE_ERROR_NOT_CONTROLLER"
              glib:nick="not-controller">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="52">Controller privilege required</doc>
      </member>
      <member name="unknown"
              value="11"
              c:identifier="ARV_DEVICE_ERROR_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../src/arvdevice.h"
             line="53">Unknown error</doc>
      </member>
      <function name="quark" c:identifier="arv_device_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="DomCharacterData"
           c:symbol-prefix="dom_character_data"
           c:type="ArvDomCharacterData"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomCharacterData"
           glib:get-type="arv_dom_character_data_get_type"
           glib:type-struct="DomCharacterDataClass">
      <source-position filename="../src/arvdomcharacterdata.h" line="40"/>
      <method name="get_data" c:identifier="arv_dom_character_data_get_data">
        <source-position filename="../src/arvdomcharacterdata.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomCharacterData" c:type="ArvDomCharacterData*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_data" c:identifier="arv_dom_character_data_set_data">
        <source-position filename="../src/arvdomcharacterdata.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomCharacterData" c:type="ArvDomCharacterData*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomCharacterDataClass"
            c:type="ArvDomCharacterDataClass"
            glib:is-gtype-struct-for="DomCharacterData">
      <source-position filename="../src/arvdomcharacterdata.h" line="40"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
    </record>
    <class name="DomDocument"
           c:symbol-prefix="dom_document"
           c:type="ArvDomDocument"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomDocument"
           glib:get-type="arv_dom_document_get_type"
           glib:type-struct="DomDocumentClass">
      <source-position filename="../src/arvdomdocument.h" line="45"/>
      <constructor name="new_from_memory"
                   c:identifier="arv_dom_document_new_from_memory"
                   throws="1">
        <source-position filename="../src/arvdomparser.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_path"
                   c:identifier="arv_dom_document_new_from_path"
                   throws="1">
        <source-position filename="../src/arvdomparser.h" line="40"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_url"
                   c:identifier="arv_dom_document_new_from_url"
                   throws="1">
        <source-position filename="../src/arvdomparser.h" line="41"/>
        <return-value transfer-ownership="full">
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="create_element" invoker="create_element">
        <doc xml:space="preserve"
             filename="../src/arvdomdocument.c"
             line="75">Create a new element.</doc>
        <source-position filename="../src/arvdomdocument.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="82">a new orphan #ArvDomElement, NULL on error.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="77">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="78">node name of the element to create</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_text_node" invoker="create_text_node">
        <doc xml:space="preserve"
             filename="../src/arvdomdocument.c"
             line="105">Create a new text element.</doc>
        <source-position filename="../src/arvdomdocument.h" line="44"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="112">a new orphan #ArvDomText, NULL on error.</doc>
          <type name="DomText" c:type="ArvDomText*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="107">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="108">initial content</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_document_element"
                      invoker="get_document_element">
        <source-position filename="../src/arvdomdocument.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="64">the top element of @self.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="62">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="append_from_memory"
              c:identifier="arv_dom_document_append_from_memory"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvdomparser.c"
             line="251">Append a chunk of xml tree to an existing document. The resulting nodes will be appended to
@node, or to @document if @node == NULL.

Size set to a negative value indicated an unknow xml data size.</doc>
        <source-position filename="../src/arvdomparser.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="document" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomparser.c"
                 line="253">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomparser.c"
                 line="254">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvdomparser.c"
                 line="255">a memory buffer holding xml data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomparser.c"
                 line="256">size of the xml data, in bytes</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_element"
              c:identifier="arv_dom_document_create_element">
        <doc xml:space="preserve"
             filename="../src/arvdomdocument.c"
             line="75">Create a new element.</doc>
        <source-position filename="../src/arvdomdocument.h" line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="82">a new orphan #ArvDomElement, NULL on error.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="77">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="tag_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="78">node name of the element to create</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_text_node"
              c:identifier="arv_dom_document_create_text_node">
        <doc xml:space="preserve"
             filename="../src/arvdomdocument.c"
             line="105">Create a new text element.</doc>
        <source-position filename="../src/arvdomdocument.h" line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="112">a new orphan #ArvDomText, NULL on error.</doc>
          <type name="DomText" c:type="ArvDomText*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="107">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="108">initial content</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_document_element"
              c:identifier="arv_dom_document_get_document_element">
        <source-position filename="../src/arvdomdocument.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="64">the top element of @self.</doc>
          <type name="DomElement" c:type="ArvDomElement*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="62">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_href_data"
              c:identifier="arv_dom_document_get_href_data">
        <doc xml:space="preserve"
             filename="../src/arvdomdocument.c"
             line="162">Load the content referenced by @href.</doc>
        <source-position filename="../src/arvdomdocument.h" line="55"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="../src/arvdomdocument.c"
               line="170">a newly allocated data buffer.</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="164">a #ArvDomDocument</doc>
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="href" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="165">document reference</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="166">data size placeholder</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="arv_dom_document_get_url">
        <source-position filename="../src/arvdomdocument.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_path" c:identifier="arv_dom_document_set_path">
        <source-position filename="../src/arvdomdocument.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="arv_dom_document_set_url">
        <source-position filename="../src/arvdomdocument.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomDocument" c:type="ArvDomDocument*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomDocumentClass"
            c:type="ArvDomDocumentClass"
            glib:is-gtype-struct-for="DomDocument">
      <source-position filename="../src/arvdomdocument.h" line="45"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
      <field name="get_document_element">
        <callback name="get_document_element">
          <source-position filename="../src/arvdomdocument.h" line="42"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="64">the top element of @self.</doc>
            <type name="DomElement" c:type="ArvDomElement*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomdocument.c"
                   line="62">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_element">
        <callback name="create_element">
          <source-position filename="../src/arvdomdocument.h" line="43"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="82">a new orphan #ArvDomElement, NULL on error.</doc>
            <type name="DomElement" c:type="ArvDomElement*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomdocument.c"
                   line="77">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
            <parameter name="tag_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomdocument.c"
                   line="78">node name of the element to create</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_text_node">
        <callback name="create_text_node">
          <source-position filename="../src/arvdomdocument.h" line="44"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdomdocument.c"
                 line="112">a new orphan #ArvDomText, NULL on error.</doc>
            <type name="DomText" c:type="ArvDomText*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomdocument.c"
                   line="107">a #ArvDomDocument</doc>
              <type name="DomDocument" c:type="ArvDomDocument*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomdocument.c"
                   line="108">initial content</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="DomDocumentCreateFunction"
              c:type="ArvDomDocumentCreateFunction"
              introspectable="0">
      <source-position filename="../src/arvdomimplementation.h" line="36"/>
      <return-value>
        <type name="DomDocument" c:type="ArvDomDocument*"/>
      </return-value>
    </callback>
    <class name="DomDocumentFragment"
           c:symbol-prefix="dom_document_fragment"
           c:type="ArvDomDocumentFragment"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomDocumentFragment"
           glib:get-type="arv_dom_document_fragment_get_type"
           glib:type-struct="DomDocumentFragmentClass">
      <source-position filename="../src/arvdomdocumentfragment.h" line="41"/>
      <constructor name="new" c:identifier="arv_dom_document_fragment_new">
        <source-position filename="../src/arvdomdocumentfragment.h" line="43"/>
        <return-value transfer-ownership="full">
          <type name="DomDocumentFragment" c:type="ArvDomDocumentFragment*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomDocumentFragmentClass"
            c:type="ArvDomDocumentFragmentClass"
            glib:is-gtype-struct-for="DomDocumentFragment">
      <source-position filename="../src/arvdomdocumentfragment.h" line="41"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
    </record>
    <class name="DomElement"
           c:symbol-prefix="dom_element"
           c:type="ArvDomElement"
           parent="DomNode"
           abstract="1"
           glib:type-name="ArvDomElement"
           glib:get-type="arv_dom_element_get_type"
           glib:type-struct="DomElementClass">
      <source-position filename="../src/arvdomelement.h" line="43"/>
      <virtual-method name="get_attribute" invoker="get_attribute">
        <source-position filename="../src/arvdomelement.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attribute" invoker="set_attribute">
        <source-position filename="../src/arvdomelement.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_attribute"
              c:identifier="arv_dom_element_get_attribute">
        <source-position filename="../src/arvdomelement.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag_name" c:identifier="arv_dom_element_get_tag_name">
        <source-position filename="../src/arvdomelement.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_attribute"
              c:identifier="arv_dom_element_set_attribute">
        <source-position filename="../src/arvdomelement.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomElement" c:type="ArvDomElement*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="attribute_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DomNode" c:type="ArvDomNode"/>
      </field>
    </class>
    <record name="DomElementClass"
            c:type="ArvDomElementClass"
            glib:is-gtype-struct-for="DomElement">
      <source-position filename="../src/arvdomelement.h" line="43"/>
      <field name="parent_class">
        <type name="DomNodeClass" c:type="ArvDomNodeClass"/>
      </field>
      <field name="get_attribute">
        <callback name="get_attribute">
          <source-position filename="../src/arvdomelement.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomElement" c:type="ArvDomElement*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attribute">
        <callback name="set_attribute">
          <source-position filename="../src/arvdomelement.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomElement" c:type="ArvDomElement*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="attribute_value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNamedNodeMap"
           c:symbol-prefix="dom_named_node_map"
           c:type="ArvDomNamedNodeMap"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNamedNodeMap"
           glib:get-type="arv_dom_named_node_map_get_type"
           glib:type-struct="DomNamedNodeMapClass">
      <source-position filename="../src/arvdomnamednodemap.h" line="46"/>
      <virtual-method name="get" introspectable="0">
        <source-position filename="../src/arvdomnamednodemap.h" line="41"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_item" invoker="get_item">
        <source-position filename="../src/arvdomnamednodemap.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnamednodemap.c"
               line="84">the @ArvDomNode corresponding to @index.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="81">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="82">an index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length">
        <source-position filename="../src/arvdomnamednodemap.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove" introspectable="0">
        <source-position filename="../src/arvdomnamednodemap.h" line="43"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set" introspectable="0">
        <source-position filename="../src/arvdomnamednodemap.h" line="42"/>
        <return-value>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_item" c:identifier="arv_dom_named_node_map_get_item">
        <source-position filename="../src/arvdomnamednodemap.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnamednodemap.c"
               line="84">the @ArvDomNode corresponding to @index.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="81">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="82">an index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="arv_dom_named_node_map_get_length">
        <source-position filename="../src/arvdomnamednodemap.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_named_item"
              c:identifier="arv_dom_named_node_map_get_named_item">
        <source-position filename="../src/arvdomnamednodemap.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnamednodemap.c"
               line="36">a #ArvDomElement.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="33">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="34">name of the element to look for.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_named_item"
              c:identifier="arv_dom_named_node_map_remove_named_item">
        <source-position filename="../src/arvdomnamednodemap.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnamednodemap.c"
               line="68">the removed node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="65">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="66">name of the node to remove</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_named_item"
              c:identifier="arv_dom_named_node_map_set_named_item">
        <source-position filename="../src/arvdomnamednodemap.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnamednodemap.c"
               line="52">same as @node on success.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="map" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="49">a #ArvDomNamedNodeMap</doc>
            <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
          </instance-parameter>
          <parameter name="item" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="50">a node to insert</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DomNamedNodeMapClass"
            c:type="ArvDomNamedNodeMapClass"
            glib:is-gtype-struct-for="DomNamedNodeMap">
      <source-position filename="../src/arvdomnamednodemap.h" line="46"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get" introspectable="0">
        <callback name="get" introspectable="0">
          <source-position filename="../src/arvdomnamednodemap.h" line="41"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set" introspectable="0">
        <callback name="set" introspectable="0">
          <source-position filename="../src/arvdomnamednodemap.h" line="42"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove" introspectable="0">
        <callback name="remove" introspectable="0">
          <source-position filename="../src/arvdomnamednodemap.h" line="43"/>
          <return-value>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_item">
        <callback name="get_item">
          <source-position filename="../src/arvdomnamednodemap.h" line="44"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnamednodemap.c"
                 line="84">the @ArvDomNode corresponding to @index.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnamednodemap.c"
                   line="81">a #ArvDomNamedNodeMap</doc>
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnamednodemap.c"
                   line="82">an index</doc>
              <type name="guint" c:type="unsigned int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length">
          <source-position filename="../src/arvdomnamednodemap.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="guint" c:type="unsigned int"/>
          </return-value>
          <parameters>
            <parameter name="map" transfer-ownership="none">
              <type name="DomNamedNodeMap" c:type="ArvDomNamedNodeMap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNode"
           c:symbol-prefix="dom_node"
           c:type="ArvDomNode"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNode"
           glib:get-type="arv_dom_node_get_type"
           glib:type-struct="DomNodeClass">
      <source-position filename="../src/arvdomnode.h" line="74"/>
      <virtual-method name="can_append_child">
        <source-position filename="../src/arvdomnode.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed" invoker="changed">
        <source-position filename="../src/arvdomnode.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_changed">
        <source-position filename="../src/arvdomnode.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_name" invoker="get_node_name">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="49">Gets the node name.</doc>
        <source-position filename="../src/arvdomnode.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="55">the node name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="51">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_type" invoker="get_node_type">
        <source-position filename="../src/arvdomnode.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="DomNodeType" c:type="ArvDomNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_value" invoker="get_node_value">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="71">Gets the node value.</doc>
        <source-position filename="../src/arvdomnode.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="77">the node value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="73">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_new_child">
        <source-position filename="../src/arvdomnode.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pre_remove_child">
        <source-position filename="../src/arvdomnode.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_node_value" invoker="set_node_value">
        <source-position filename="../src/arvdomnode.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="append_child" c:identifier="arv_dom_node_append_child">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="486">Adds the node @new_child to the end of the list of children of this node.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="../src/arvdomnode.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="494">the added node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="488">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="489">node to append</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="changed" c:identifier="arv_dom_node_changed">
        <source-position filename="../src/arvdomnode.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_nodes"
              c:identifier="arv_dom_node_get_child_nodes">
        <source-position filename="../src/arvdomnode.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="140">a #ArvDomNodeList, NULL on error.</doc>
          <type name="DomNodeList" c:type="ArvDomNodeList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="138">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_first_child"
              c:identifier="arv_dom_node_get_first_child">
        <source-position filename="../src/arvdomnode.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="164">@self first child.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="162">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_child" c:identifier="arv_dom_node_get_last_child">
        <source-position filename="../src/arvdomnode.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="181">@self last child.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="179">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_sibling"
              c:identifier="arv_dom_node_get_next_sibling">
        <source-position filename="../src/arvdomnode.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="215">@self next sibling.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="213">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_name" c:identifier="arv_dom_node_get_node_name">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="49">Gets the node name.</doc>
        <source-position filename="../src/arvdomnode.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="55">the node name.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="51">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_type" c:identifier="arv_dom_node_get_node_type">
        <source-position filename="../src/arvdomnode.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="DomNodeType" c:type="ArvDomNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_value" c:identifier="arv_dom_node_get_node_value">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="71">Gets the node value.</doc>
        <source-position filename="../src/arvdomnode.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="77">the node value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="73">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_owner_document"
              c:identifier="arv_dom_node_get_owner_document">
        <source-position filename="../src/arvdomnode.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="239">@self owner document.</doc>
          <type name="DomDocument" c:type="ArvDomDocument*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="237">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent_node"
              c:identifier="arv_dom_node_get_parent_node">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="117">Get the parent node of @self.</doc>
        <source-position filename="../src/arvdomnode.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="123">@self parent.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="119">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_previous_sibling"
              c:identifier="arv_dom_node_get_previous_sibling">
        <source-position filename="../src/arvdomnode.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="198">@self previous sibling.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="196">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_child_nodes"
              c:identifier="arv_dom_node_has_child_nodes">
        <source-position filename="../src/arvdomnode.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_before" c:identifier="arv_dom_node_insert_before">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="257">Inserts the node @new_child before the existing child node @ref_child. If
@ref_child is null, insert @new_child at the end of the list of children.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="../src/arvdomnode.h" line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="267">the inserted node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="259">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="260">node to insert</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="ref_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="261">reference node, i.e., the node before which the new node must be inserted.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_child" c:identifier="arv_dom_node_remove_child">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="424">Removes the child node indicated by @old_child from the list of children, and returns it.</doc>
        <source-position filename="../src/arvdomnode.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="431">the removed node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="426">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="old_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="427">node to remove.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_child" c:identifier="arv_dom_node_replace_child">
        <doc xml:space="preserve"
             filename="../src/arvdomnode.c"
             line="344">Replaces the child node @old_child with @new_child in the list of children,
and returns the @old_child node.
If the @new_child is already in the tree, it is first removed.</doc>
        <source-position filename="../src/arvdomnode.h" line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvdomnode.c"
               line="354">the replaced node.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="346">a #ArvDomNode</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_child" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="347">a replacement node</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
          <parameter name="old_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="348">node to replace</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_node_value" c:identifier="arv_dom_node_set_node_value">
        <source-position filename="../src/arvdomnode.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </instance-parameter>
          <parameter name="new_value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <class name="DomNodeChildList"
           c:symbol-prefix="dom_node_child_list"
           c:type="ArvDomNodeChildList"
           parent="DomNodeList"
           glib:type-name="ArvDomNodeChildList"
           glib:get-type="arv_dom_node_child_list_get_type"
           glib:type-struct="DomNodeChildListClass">
      <source-position filename="../src/arvdomnodechildlist.h" line="36"/>
      <constructor name="new" c:identifier="arv_dom_node_child_list_new">
        <source-position filename="../src/arvdomnodechildlist.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="DomNodeList" c:type="ArvDomNodeList*"/>
        </return-value>
        <parameters>
          <parameter name="parent_node" transfer-ownership="none">
            <type name="DomNode" c:type="ArvDomNode*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="DomNodeChildListClass"
            c:type="ArvDomNodeChildListClass"
            glib:is-gtype-struct-for="DomNodeChildList">
      <source-position filename="../src/arvdomnodechildlist.h" line="36"/>
      <field name="parent_class">
        <type name="DomNodeListClass" c:type="ArvDomNodeListClass"/>
      </field>
    </record>
    <record name="DomNodeClass"
            c:type="ArvDomNodeClass"
            glib:is-gtype-struct-for="DomNode">
      <source-position filename="../src/arvdomnode.h" line="74"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_node_name">
        <callback name="get_node_name">
          <source-position filename="../src/arvdomnode.h" line="59"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="55">the node name.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnode.c"
                   line="51">a #ArvDomNode</doc>
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_node_value">
        <callback name="get_node_value">
          <source-position filename="../src/arvdomnode.h" line="60"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnode.c"
                 line="77">the node value.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnode.c"
                   line="73">a #ArvDomNode</doc>
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_node_value">
        <callback name="set_node_value">
          <source-position filename="../src/arvdomnode.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="new_value" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_node_type">
        <callback name="get_node_type">
          <source-position filename="../src/arvdomnode.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="DomNodeType" c:type="ArvDomNodeType"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_append_child">
        <callback name="can_append_child">
          <source-position filename="../src/arvdomnode.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="new_child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="post_new_child">
        <callback name="post_new_child">
          <source-position filename="../src/arvdomnode.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pre_remove_child">
        <callback name="pre_remove_child">
          <source-position filename="../src/arvdomnode.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="../src/arvdomnode.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_changed">
        <callback name="child_changed">
          <source-position filename="../src/arvdomnode.h" line="73"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="DomNode" c:type="ArvDomNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DomNodeList"
           c:symbol-prefix="dom_node_list"
           c:type="ArvDomNodeList"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDomNodeList"
           glib:get-type="arv_dom_node_list_get_type"
           glib:type-struct="DomNodeListClass">
      <source-position filename="../src/arvdomnodelist.h" line="43"/>
      <virtual-method name="get_item" invoker="get_item">
        <doc xml:space="preserve"
             filename="../src/arvdomnodelist.c"
             line="31">Get one of the item of @list.</doc>
        <source-position filename="../src/arvdomnodelist.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnodelist.c"
               line="38">item corresponding to index, NULL on error.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnodelist.c"
                 line="33">a #ArvDomNodeList</doc>
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnodelist.c"
                 line="34">item index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length">
        <source-position filename="../src/arvdomnodelist.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_item" c:identifier="arv_dom_node_list_get_item">
        <doc xml:space="preserve"
             filename="../src/arvdomnodelist.c"
             line="31">Get one of the item of @list.</doc>
        <source-position filename="../src/arvdomnodelist.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomnodelist.c"
               line="38">item corresponding to index, NULL on error.</doc>
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnodelist.c"
                 line="33">a #ArvDomNodeList</doc>
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnodelist.c"
                 line="34">item index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="arv_dom_node_list_get_length">
        <source-position filename="../src/arvdomnodelist.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="list" transfer-ownership="none">
            <type name="DomNodeList" c:type="ArvDomNodeList*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DomNodeListClass"
            c:type="ArvDomNodeListClass"
            glib:is-gtype-struct-for="DomNodeList">
      <source-position filename="../src/arvdomnodelist.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_item">
        <callback name="get_item">
          <source-position filename="../src/arvdomnodelist.h" line="41"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvdomnodelist.c"
                 line="38">item corresponding to index, NULL on error.</doc>
            <type name="DomNode" c:type="ArvDomNode*"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnodelist.c"
                   line="33">a #ArvDomNodeList</doc>
              <type name="DomNodeList" c:type="ArvDomNodeList*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvdomnodelist.c"
                   line="34">item index</doc>
              <type name="guint" c:type="unsigned int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length">
          <source-position filename="../src/arvdomnodelist.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="guint" c:type="unsigned int"/>
          </return-value>
          <parameters>
            <parameter name="list" transfer-ownership="none">
              <type name="DomNodeList" c:type="ArvDomNodeList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="DomNodeType"
                 glib:type-name="ArvDomNodeType"
                 glib:get-type="arv_dom_node_type_get_type"
                 c:type="ArvDomNodeType">
      <member name="element_node"
              value="1"
              c:identifier="ARV_DOM_NODE_TYPE_ELEMENT_NODE"
              glib:nick="element-node">
      </member>
      <member name="attribute_node"
              value="2"
              c:identifier="ARV_DOM_NODE_TYPE_ATTRIBUTE_NODE"
              glib:nick="attribute-node">
      </member>
      <member name="text_node"
              value="3"
              c:identifier="ARV_DOM_NODE_TYPE_TEXT_NODE"
              glib:nick="text-node">
      </member>
      <member name="cdata_section_node"
              value="4"
              c:identifier="ARV_DOM_NODE_TYPE_CDATA_SECTION_NODE"
              glib:nick="cdata-section-node">
      </member>
      <member name="entity_reference_node"
              value="5"
              c:identifier="ARV_DOM_NODE_TYPE_ENTITY_REFERENCE_NODE"
              glib:nick="entity-reference-node">
      </member>
      <member name="entity_node"
              value="6"
              c:identifier="ARV_DOM_NODE_TYPE_ENTITY_NODE"
              glib:nick="entity-node">
      </member>
      <member name="processing_instruction_node"
              value="7"
              c:identifier="ARV_DOM_NODE_TYPE_PROCESSING_INSTRUCTION_NODE"
              glib:nick="processing-instruction-node">
      </member>
      <member name="comment_node"
              value="8"
              c:identifier="ARV_DOM_NODE_TYPE_COMMENT_NODE"
              glib:nick="comment-node">
      </member>
      <member name="document_node"
              value="9"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_NODE"
              glib:nick="document-node">
      </member>
      <member name="document_type_node"
              value="10"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_TYPE_NODE"
              glib:nick="document-type-node">
      </member>
      <member name="document_fragment_node"
              value="11"
              c:identifier="ARV_DOM_NODE_TYPE_DOCUMENT_FRAGMENT_NODE"
              glib:nick="document-fragment-node">
      </member>
      <member name="notation_node"
              value="12"
              c:identifier="ARV_DOM_NODE_TYPE_NOTATION_NODE"
              glib:nick="notation-node">
      </member>
    </enumeration>
    <class name="DomText"
           c:symbol-prefix="dom_text"
           c:type="ArvDomText"
           parent="DomCharacterData"
           glib:type-name="ArvDomText"
           glib:get-type="arv_dom_text_get_type"
           glib:type-struct="DomTextClass">
      <source-position filename="../src/arvdomtext.h" line="40"/>
      <constructor name="new" c:identifier="arv_dom_text_new">
        <source-position filename="../src/arvdomtext.h" line="42"/>
        <return-value transfer-ownership="full">
          <type name="DomNode" c:type="ArvDomNode*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="DomCharacterData" c:type="ArvDomCharacterData"/>
      </field>
    </class>
    <record name="DomTextClass"
            c:type="ArvDomTextClass"
            glib:is-gtype-struct-for="DomText">
      <source-position filename="../src/arvdomtext.h" line="40"/>
      <field name="parent_class">
        <type name="DomCharacterDataClass" c:type="ArvDomCharacterDataClass"/>
      </field>
    </record>
    <class name="Evaluator"
           c:symbol-prefix="evaluator"
           c:type="ArvEvaluator"
           parent="GObject.Object"
           glib:type-name="ArvEvaluator"
           glib:get-type="arv_evaluator_get_type"
           glib:type-struct="EvaluatorClass">
      <source-position filename="../src/arvevaluator.h" line="35"/>
      <constructor name="new" c:identifier="arv_evaluator_new">
        <doc xml:space="preserve"
             filename="../src/arvevaluator.c"
             line="1457">Creates a new #ArvEvaluator object. The syntax is described in the genicam standard specification.</doc>
        <source-position filename="../src/arvevaluator.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvevaluator.c"
               line="1463">a new #ArvEvaluator object.</doc>
          <type name="Evaluator" c:type="ArvEvaluator*"/>
        </return-value>
        <parameters>
          <parameter name="expression"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1459">an evaluator expression</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="evaluate_as_double"
              c:identifier="arv_evaluator_evaluate_as_double"
              throws="1">
        <source-position filename="../src/arvevaluator.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="evaluate_as_int64"
              c:identifier="arv_evaluator_evaluate_as_int64"
              throws="1">
        <source-position filename="../src/arvevaluator.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_constant"
              c:identifier="arv_evaluator_get_constant"
              version="0.6.0">
        <source-position filename="../src/arvevaluator.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvevaluator.c"
               line="1402">The formula of the constant corresponding to @name, %NULL if not defined.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1399">a #ArvEvaluator</doc>
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1400">constant name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_expression"
              c:identifier="arv_evaluator_get_expression">
        <source-position filename="../src/arvevaluator.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sub_expression"
              c:identifier="arv_evaluator_get_sub_expression"
              version="0.6.0">
        <source-position filename="../src/arvevaluator.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvevaluator.c"
               line="1346">The formula of the sub-expression corresponding to @name, %NULL if not defined.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1343">a #ArvEvaluator</doc>
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1344">sub-expression name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_constant"
              c:identifier="arv_evaluator_set_constant"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvevaluator.c"
             line="1362">Assign a string to a constant. If @constant == %NULL, the constant previously assigned to @name will be removed.</doc>
        <source-position filename="../src/arvevaluator.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1364">a #ArvEvaluator</doc>
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1365">constant name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="constant"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1366">constant as a string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double_variable"
              c:identifier="arv_evaluator_set_double_variable">
        <source-position filename="../src/arvevaluator.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expression"
              c:identifier="arv_evaluator_set_expression">
        <source-position filename="../src/arvevaluator.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="expression" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64_variable"
              c:identifier="arv_evaluator_set_int64_variable">
        <source-position filename="../src/arvevaluator.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sub_expression"
              c:identifier="arv_evaluator_set_sub_expression"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvevaluator.c"
             line="1305">Assign a formula to a sub-expression. If @expression == %NULL, the sub-expression previously assigned to @name will be removed.
A sub-expression may not reference another sub-expression.</doc>
        <source-position filename="../src/arvevaluator.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="evaluator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1307">a #ArvEvaluator</doc>
            <type name="Evaluator" c:type="ArvEvaluator*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1308">sub-expression name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="expression"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvevaluator.c"
                 line="1309">sub-pexression formula</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="EvaluatorClass"
            c:type="ArvEvaluatorClass"
            glib:is-gtype-struct-for="Evaluator">
      <source-position filename="../src/arvevaluator.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ExposureMode"
                 glib:type-name="ArvExposureMode"
                 glib:get-type="arv_exposure_mode_get_type"
                 c:type="ArvExposureMode">
      <member name="off"
              value="0"
              c:identifier="ARV_EXPOSURE_MODE_OFF"
              glib:nick="off">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="68">disables the Exposure and let the shutter open.</doc>
      </member>
      <member name="timed"
              value="1"
              c:identifier="ARV_EXPOSURE_MODE_TIMED"
              glib:nick="timed">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="69">timed exposure. The exposure duration time is set using the ExposureTime or ExposureAuto
features and the exposure starts with the FrameStart or LineStart.</doc>
      </member>
      <member name="trigger_width"
              value="2"
              c:identifier="ARV_EXPOSURE_MODE_TRIGGER_WIDTH"
              glib:nick="trigger-width">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="71">uses the width of the current Frame or Line trigger signal(s) pulse to control the
exposure duration. Note that if the Frame or Line TriggerActivation is RisingEdge or LevelHigh, the exposure duration
will be the time the trigger stays High. If TriggerActivation is FallingEdge or LevelLow, the exposure time will last
as long as the trigger stays Low.</doc>
      </member>
      <member name="trigger_controlled"
              value="3"
              c:identifier="ARV_EXPOSURE_MODE_TRIGGER_CONTROLLED"
              glib:nick="trigger-controlled">
        <doc xml:space="preserve"
             filename="../src/arvenums.h"
             line="75">uses one or more trigger signal(s) to control the exposure duration
independently from the current Frame or Line triggers. See ExposureStart, ExposureEnd and ExposureActive of
the TriggerSelector feature.</doc>
      </member>
      <function name="from_string"
                c:identifier="arv_exposure_mode_from_string">
        <source-position filename="../src/arvenums.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="ExposureMode" c:type="ArvExposureMode"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="arv_exposure_mode_to_string">
        <source-position filename="../src/arvenums.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="ExposureMode" c:type="ArvExposureMode"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <constant name="FAKE_CAMERA_ACQUISITION_FRAME_RATE_DEFAULT"
              value="25.000000"
              c:type="ARV_FAKE_CAMERA_ACQUISITION_FRAME_RATE_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="79"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_HORIZONTAL_DEFAULT"
              value="1"
              c:type="ARV_FAKE_CAMERA_BINNING_HORIZONTAL_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="58"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_VERTICAL_DEFAULT"
              value="1"
              c:type="ARV_FAKE_CAMERA_BINNING_VERTICAL_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_EXPOSURE_TIME_US_DEFAULT"
              value="10000.000000"
              c:type="ARV_FAKE_CAMERA_EXPOSURE_TIME_US_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="80"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="FAKE_CAMERA_HEIGHT_DEFAULT"
              value="512"
              c:type="ARV_FAKE_CAMERA_HEIGHT_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="57"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_MEMORY_SIZE"
              value="65536"
              c:type="ARV_FAKE_CAMERA_MEMORY_SIZE">
      <source-position filename="../src/arvfakecamera.h" line="37"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION"
              value="292"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION">
      <source-position filename="../src/arvfakecamera.h" line="76"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_FRAME_PERIOD_US"
              value="312"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_FRAME_PERIOD_US">
      <source-position filename="../src/arvfakecamera.h" line="67"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_MODE"
              value="300"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_MODE">
      <source-position filename="../src/arvfakecamera.h" line="65"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_START_OFFSET"
              value="32"
              c:type="ARV_FAKE_CAMERA_REGISTER_ACQUISITION_START_OFFSET">
      <source-position filename="../src/arvfakecamera.h" line="70"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_HORIZONTAL"
              value="264"
              c:type="ARV_FAKE_CAMERA_REGISTER_BINNING_HORIZONTAL">
      <source-position filename="../src/arvfakecamera.h" line="49"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_VERTICAL"
              value="268"
              c:type="ARV_FAKE_CAMERA_REGISTER_BINNING_VERTICAL">
      <source-position filename="../src/arvfakecamera.h" line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_EXPOSURE_TIME_US"
              value="288"
              c:type="ARV_FAKE_CAMERA_REGISTER_EXPOSURE_TIME_US">
      <source-position filename="../src/arvfakecamera.h" line="77"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_FRAME_START_OFFSET"
              value="0"
              c:type="ARV_FAKE_CAMERA_REGISTER_FRAME_START_OFFSET">
      <source-position filename="../src/arvfakecamera.h" line="69"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_MODE"
              value="276"
              c:type="ARV_FAKE_CAMERA_REGISTER_GAIN_MODE">
      <source-position filename="../src/arvfakecamera.h" line="85"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_RAW"
              value="272"
              c:type="ARV_FAKE_CAMERA_REGISTER_GAIN_RAW">
      <source-position filename="../src/arvfakecamera.h" line="84"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_HEIGHT"
              value="260"
              c:type="ARV_FAKE_CAMERA_REGISTER_HEIGHT">
      <source-position filename="../src/arvfakecamera.h" line="46"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_PIXEL_FORMAT"
              value="296"
              c:type="ARV_FAKE_CAMERA_REGISTER_PIXEL_FORMAT">
      <source-position filename="../src/arvfakecamera.h" line="51"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_HEIGHT"
              value="280"
              c:type="ARV_FAKE_CAMERA_REGISTER_SENSOR_HEIGHT">
      <source-position filename="../src/arvfakecamera.h" line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_WIDTH"
              value="284"
              c:type="ARV_FAKE_CAMERA_REGISTER_SENSOR_WIDTH">
      <source-position filename="../src/arvfakecamera.h" line="43"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TEST"
              value="496"
              c:type="ARV_FAKE_CAMERA_REGISTER_TEST">
      <source-position filename="../src/arvfakecamera.h" line="52"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_ACTIVATION"
              value="776"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_ACTIVATION">
      <source-position filename="../src/arvfakecamera.h" line="74"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_MODE"
              value="768"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_MODE">
      <source-position filename="../src/arvfakecamera.h" line="72"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_SOURCE"
              value="772"
              c:type="ARV_FAKE_CAMERA_REGISTER_TRIGGER_SOURCE">
      <source-position filename="../src/arvfakecamera.h" line="73"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_WIDTH"
              value="256"
              c:type="ARV_FAKE_CAMERA_REGISTER_WIDTH">
      <source-position filename="../src/arvfakecamera.h" line="45"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_X_OFFSET"
              value="304"
              c:type="ARV_FAKE_CAMERA_REGISTER_X_OFFSET">
      <source-position filename="../src/arvfakecamera.h" line="47"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_Y_OFFSET"
              value="308"
              c:type="ARV_FAKE_CAMERA_REGISTER_Y_OFFSET">
      <source-position filename="../src/arvfakecamera.h" line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_HEIGHT"
              value="2048"
              c:type="ARV_FAKE_CAMERA_SENSOR_HEIGHT">
      <source-position filename="../src/arvfakecamera.h" line="55"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_WIDTH"
              value="2048"
              c:type="ARV_FAKE_CAMERA_SENSOR_WIDTH">
      <source-position filename="../src/arvfakecamera.h" line="54"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_TEST_REGISTER_DEFAULT"
              value="305419896"
              c:type="ARV_FAKE_CAMERA_TEST_REGISTER_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="61"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_WIDTH_DEFAULT"
              value="512"
              c:type="ARV_FAKE_CAMERA_WIDTH_DEFAULT">
      <source-position filename="../src/arvfakecamera.h" line="56"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="FakeCamera"
           c:symbol-prefix="fake_camera"
           c:type="ArvFakeCamera"
           parent="GObject.Object"
           glib:type-name="ArvFakeCamera"
           glib:get-type="arv_fake_camera_get_type"
           glib:type-struct="FakeCameraClass">
      <doc xml:space="preserve"
           filename="../src/arvfakecamera.c"
           line="23">#ArvFakeCamera is a class that simulate a real camera, which provides
methods for the implementation of #ArvFakeDevice and #ArvFakeStream.

arv-fake-gv-camera is a GV camera simulator based on this class.</doc>
      <source-position filename="../src/arvfakecamera.h" line="88"/>
      <constructor name="new" c:identifier="arv_fake_camera_new">
        <source-position filename="../src/arvfakecamera.h" line="94"/>
        <return-value transfer-ownership="full">
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="arv_fake_camera_new_full">
        <source-position filename="../src/arvfakecamera.h" line="95"/>
        <return-value transfer-ownership="full">
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="genicam_filename" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="fill_buffer" c:identifier="arv_fake_camera_fill_buffer">
        <doc xml:space="preserve"
             filename="../src/arvfakecamera.c"
             line="737">Fill a buffer with data from the fake camera.</doc>
        <source-position filename="../src/arvfakecamera.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="739">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="740">the #ArvBuffer to fill</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="packet_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="741">the packet size</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_status"
              c:identifier="arv_fake_camera_get_acquisition_status">
        <source-position filename="../src/arvfakecamera.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_control_channel_privilege"
              c:identifier="arv_fake_camera_get_control_channel_privilege">
        <source-position filename="../src/arvfakecamera.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_genicam_xml"
              c:identifier="arv_fake_camera_get_genicam_xml">
        <source-position filename="../src/arvfakecamera.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvfakecamera.c"
               line="893">the genicam XML description of the camera</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="890">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="891">the size of the returned XML string</doc>
            <type name="gsize" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_heartbeat_timeout"
              c:identifier="arv_fake_camera_get_heartbeat_timeout">
        <source-position filename="../src/arvfakecamera.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_payload" c:identifier="arv_fake_camera_get_payload">
        <source-position filename="../src/arvfakecamera.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="size_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sleep_time_for_next_frame"
              c:identifier="arv_fake_camera_get_sleep_time_for_next_frame">
        <source-position filename="../src/arvfakecamera.h" line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvfakecamera.c"
               line="209">the sleep time for the next frame</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="206">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="next_timestamp_us"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="207">the timestamp for the next frame in microseconds</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_stream_address"
              c:identifier="arv_fake_camera_get_stream_address">
        <source-position filename="../src/arvfakecamera.h" line="109"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvfakecamera.c"
               line="829">the data stream #GSocketAddress for this camera</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="827">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_memory" c:identifier="arv_fake_camera_read_memory">
        <source-position filename="../src/arvfakecamera.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register"
              c:identifier="arv_fake_camera_read_register">
        <source-position filename="../src/arvfakecamera.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvfakecamera.c"
               line="151">true if the read succeeded, false otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="147">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="148">the register address</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="149">the register value</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_control_channel_privilege"
              c:identifier="arv_fake_camera_set_control_channel_privilege">
        <source-position filename="../src/arvfakecamera.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="privilege" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fill_pattern"
              c:identifier="arv_fake_camera_set_fill_pattern">
        <doc xml:space="preserve"
             filename="../src/arvfakecamera.c"
             line="708">Sets the fill pattern callback for custom test images.</doc>
        <source-position filename="../src/arvfakecamera.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="710">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="fill_pattern_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="711">callback for image filling</doc>
            <type name="FakeCameraFillPattern"
                  c:type="ArvFakeCameraFillPattern"/>
          </parameter>
          <parameter name="fill_pattern_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvfakecamera.c"
                 line="712">image filling user data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_inet_address"
              c:identifier="arv_fake_camera_set_inet_address">
        <source-position filename="../src/arvfakecamera.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger_frequency"
              c:identifier="arv_fake_camera_set_trigger_frequency">
        <source-position filename="../src/arvfakecamera.h" line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_for_next_frame"
              c:identifier="arv_fake_camera_wait_for_next_frame">
        <source-position filename="../src/arvfakecamera.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="write_memory" c:identifier="arv_fake_camera_write_memory">
        <source-position filename="../src/arvfakecamera.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register"
              c:identifier="arv_fake_camera_write_register">
        <source-position filename="../src/arvfakecamera.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="camera" transfer-ownership="none">
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </instance-parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FakeCameraClass"
            c:type="ArvFakeCameraClass"
            glib:is-gtype-struct-for="FakeCamera">
      <source-position filename="../src/arvfakecamera.h" line="88"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="FakeCameraFillPattern" c:type="ArvFakeCameraFillPattern">
      <source-position filename="../src/arvfakecamera.h" line="90"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
        <parameter name="fill_pattern_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="exposure_time_us" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="gain" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="pixel_format" transfer-ownership="none">
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </parameter>
      </parameters>
    </callback>
    <class name="FakeDevice"
           c:symbol-prefix="fake_device"
           c:type="ArvFakeDevice"
           parent="Device"
           glib:type-name="ArvFakeDevice"
           glib:get-type="arv_fake_device_get_type"
           glib:type-struct="FakeDeviceClass">
      <source-position filename="../src/arvfakedevice.h" line="36"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="arv_fake_device_new"
                   version="0.8.0"
                   throws="1">
        <source-position filename="../src/arvfakedevice.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvfakedevice.c"
               line="139">a newly created #ArvDevice simulating a real device</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakedevice.c"
                 line="136">fake device serial number</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fake_camera"
              c:identifier="arv_fake_device_get_fake_camera"
              version="0.8.0">
        <source-position filename="../src/arvfakedevice.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvfakedevice.c"
               line="119">the #ArvFakeCamera used by this device instance.</doc>
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvfakedevice.c"
                 line="117">a fake device</doc>
            <type name="FakeDevice" c:type="ArvFakeDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="serial-number"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="FakeDeviceClass"
            c:type="ArvFakeDeviceClass"
            glib:is-gtype-struct-for="FakeDevice">
      <source-position filename="../src/arvfakedevice.h" line="36"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <class name="FakeInterface"
           c:symbol-prefix="fake_interface"
           c:type="ArvFakeInterface"
           parent="Interface"
           glib:type-name="ArvFakeInterface"
           glib:get-type="arv_fake_interface_get_type"
           glib:type-struct="FakeInterfaceClass">
      <source-position filename="../src/arvfakeinterface.h" line="36"/>
      <function name="get_instance"
                c:identifier="arv_fake_interface_get_instance">
        <doc xml:space="preserve"
             filename="../src/arvfakeinterface.c"
             line="84">Gets the unique instance of the fake interface.</doc>
        <source-position filename="../src/arvfakeinterface.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvfakeinterface.c"
               line="89">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
    </class>
    <record name="FakeInterfaceClass"
            c:type="ArvFakeInterfaceClass"
            glib:is-gtype-struct-for="FakeInterface">
      <source-position filename="../src/arvfakeinterface.h" line="36"/>
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <class name="FakeStream"
           c:symbol-prefix="fake_stream"
           c:type="ArvFakeStream"
           parent="Stream"
           glib:type-name="ArvFakeStream"
           glib:get-type="arv_fake_stream_get_type"
           glib:type-struct="FakeStreamClass">
      <source-position filename="../src/arvfakestream.h" line="35"/>
      <implements name="Gio.Initable"/>
    </class>
    <record name="FakeStreamClass"
            c:type="ArvFakeStreamClass"
            glib:is-gtype-struct-for="FakeStream">
      <source-position filename="../src/arvfakestream.h" line="35"/>
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <callback name="FrameCallback" c:type="ArvFrameCallback">
      <source-position filename="../src/arvbuffer.h" line="91"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="GV_FAKE_CAMERA_DEFAULT_INTERFACE"
              value="lo"
              c:type="ARV_GV_FAKE_CAMERA_DEFAULT_INTERFACE">
      <source-position filename="../src/arvgvfakecamera.h" line="35"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GV_FAKE_CAMERA_DEFAULT_SERIAL_NUMBER"
              value="GV01"
              c:type="ARV_GV_FAKE_CAMERA_DEFAULT_SERIAL_NUMBER">
      <source-position filename="../src/arvgvfakecamera.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <class name="Gc"
           c:symbol-prefix="gc"
           c:type="ArvGc"
           parent="DomDocument"
           glib:type-name="ArvGc"
           glib:get-type="arv_gc_get_type"
           glib:type-struct="GcClass">
      <doc xml:space="preserve"
           filename="../src/arvgc.c"
           line="23">#ArvGc implements the root document for the storage of the Genicam feature
nodes. It builds the node tree by parsing an xml file in the Genicam
standard format. See http://www.genicam.org.</doc>
      <source-position filename="../src/arvgc.h" line="89"/>
      <constructor name="new" c:identifier="arv_gc_new">
        <source-position filename="../src/arvgc.h" line="91"/>
        <return-value transfer-ownership="full">
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </parameter>
          <parameter name="xml"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="size_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="p_value_indexed_node_new"
                   c:identifier="arv_gc_p_value_indexed_node_new">
        <source-position filename="../src/arvgcvalueindexednode.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <function name="invalidator_has_changed"
                c:identifier="arv_gc_invalidator_has_changed">
        <source-position filename="../src/arvgcinvalidatornode.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="self" transfer-ownership="none">
            <type name="GcInvalidatorNode" c:type="ArvGcInvalidatorNode*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_buffer" c:identifier="arv_gc_get_buffer">
        <doc xml:space="preserve"
             filename="../src/arvgc.c"
             line="407">Retrieves the binded buffer.</doc>
        <source-position filename="../src/arvgc.h" line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgc.c"
               line="413">a #ArvBuffer.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgc.c"
                 line="409">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device" c:identifier="arv_gc_get_device">
        <doc xml:space="preserve"
             filename="../src/arvgc.c"
             line="291">Retrieves the device handled by this genicam interface. The device is used for register access.</doc>
        <source-position filename="../src/arvgc.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgc.c"
               line="297">a #ArvDevice.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgc.c"
                 line="293">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node" c:identifier="arv_gc_get_node">
        <doc xml:space="preserve"
             filename="../src/arvgc.c"
             line="272">Retrieves a genicam node by name.</doc>
        <source-position filename="../src/arvgc.h" line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgc.c"
               line="279">a #ArvGcNode, null if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgc.c"
                 line="274">a #ArvGc object</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgc.c"
                 line="275">node name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_range_check_policy"
              c:identifier="arv_gc_get_range_check_policy">
        <source-position filename="../src/arvgc.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="RangeCheckPolicy" c:type="ArvRangeCheckPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_register_cache_policy"
              c:identifier="arv_gc_get_register_cache_policy">
        <source-position filename="../src/arvgc.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="RegisterCachePolicy" c:type="ArvRegisterCachePolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="register_feature_node"
              c:identifier="arv_gc_register_feature_node">
        <source-position filename="../src/arvgc.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer" c:identifier="arv_gc_set_buffer">
        <source-position filename="../src/arvgc.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_node_data"
              c:identifier="arv_gc_set_default_node_data"
              introspectable="0">
        <source-position filename="../src/arvgc.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="node_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_range_check_policy"
              c:identifier="arv_gc_set_range_check_policy">
        <source-position filename="../src/arvgc.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="RangeCheckPolicy" c:type="ArvRangeCheckPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_register_cache_policy"
              c:identifier="arv_gc_set_register_cache_policy">
        <source-position filename="../src/arvgc.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <type name="RegisterCachePolicy" c:type="ArvRegisterCachePolicy"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <enumeration name="GcAccessMode"
                 glib:type-name="ArvGcAccessMode"
                 glib:get-type="arv_gc_access_mode_get_type"
                 c:type="ArvGcAccessMode">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="50">Specifies access mode for feature nodes and registers.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_ACCESS_MODE_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="52">undefined access mode</doc>
      </member>
      <member name="ro"
              value="0"
              c:identifier="ARV_GC_ACCESS_MODE_RO"
              glib:nick="ro">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="53">read-only access</doc>
      </member>
      <member name="wo"
              value="1"
              c:identifier="ARV_GC_ACCESS_MODE_WO"
              glib:nick="wo">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="54">write-only access</doc>
      </member>
      <member name="rw"
              value="2"
              c:identifier="ARV_GC_ACCESS_MODE_RW"
              glib:nick="rw">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="55">read and write access</doc>
      </member>
    </enumeration>
    <class name="GcBoolean"
           c:symbol-prefix="gc_boolean"
           c:type="ArvGcBoolean"
           parent="GcFeatureNode"
           glib:type-name="ArvGcBoolean"
           glib:get-type="arv_gc_boolean_get_type"
           glib:type-struct="GcBooleanClass">
      <source-position filename="../src/arvgcboolean.h" line="37"/>
      <constructor name="new" c:identifier="arv_gc_boolean_new">
        <source-position filename="../src/arvgcboolean.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value"
              c:identifier="arv_gc_boolean_get_value"
              shadowed-by="get_value_gi"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvgcboolean.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcboolean.c"
               line="136">the feature value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_boolean" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcboolean.c"
                 line="133">a #ArvGcBoolean</doc>
            <type name="GcBoolean" c:type="ArvGcBoolean*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_gi"
              c:identifier="arv_gc_boolean_get_value_gi"
              shadows="get_value"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcboolean.c"
             line="171">Get the feature value.</doc>
        <source-position filename="../src/arvgcboolean.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_boolean" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcboolean.c"
                 line="173">a #ArvGcBoolean</doc>
            <type name="GcBoolean" c:type="ArvGcBoolean*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvgcboolean.c"
                 line="174">feature value</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_boolean_set_value"
              throws="1">
        <source-position filename="../src/arvgcboolean.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_boolean" transfer-ownership="none">
            <type name="GcBoolean" c:type="ArvGcBoolean*"/>
          </instance-parameter>
          <parameter name="v_boolean" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="GcBooleanClass"
            c:type="ArvGcBooleanClass"
            glib:is-gtype-struct-for="GcBoolean">
      <source-position filename="../src/arvgcboolean.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <enumeration name="GcCachable"
                 glib:type-name="ArvGcCachable"
                 glib:get-type="arv_gc_cachable_get_type"
                 c:type="ArvGcCachable">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="67">Specifies caching mode for register values.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_CACHABLE_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="69">undefined cache mode</doc>
      </member>
      <member name="no_cache"
              value="0"
              c:identifier="ARV_GC_CACHABLE_NO_CACHE"
              glib:nick="no-cache">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="70">no value caching</doc>
      </member>
      <member name="write_through"
              value="1"
              c:identifier="ARV_GC_CACHABLE_WRITE_THROUGH"
              glib:nick="write-through">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="71">write-through cache mode</doc>
      </member>
      <member name="write_around"
              value="2"
              c:identifier="ARV_GC_CACHABLE_WRITE_AROUND"
              glib:nick="write-around">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="72">write-around cache mode</doc>
      </member>
    </enumeration>
    <class name="GcCategory"
           c:symbol-prefix="gc_category"
           c:type="ArvGcCategory"
           parent="GcFeatureNode"
           glib:type-name="ArvGcCategory"
           glib:get-type="arv_gc_category_get_type"
           glib:type-struct="GcCategoryClass">
      <source-position filename="../src/arvgccategory.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_category_new">
        <source-position filename="../src/arvgccategory.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_features" c:identifier="arv_gc_category_get_features">
        <doc xml:space="preserve"
             filename="../src/arvgccategory.c"
             line="73">Get a list of strings with the name of the features listed in the given category node.</doc>
        <source-position filename="../src/arvgccategory.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgccategory.c"
               line="79">a list of strings.</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgccategory.c"
                 line="75">a #ArvGcCategory</doc>
            <type name="GcCategory" c:type="ArvGcCategory*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="GcCategoryClass"
            c:type="ArvGcCategoryClass"
            glib:is-gtype-struct-for="GcCategory">
      <source-position filename="../src/arvgccategory.h" line="36"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <record name="GcClass" c:type="ArvGcClass" glib:is-gtype-struct-for="Gc">
      <source-position filename="../src/arvgc.h" line="89"/>
      <field name="parent_class">
        <type name="DomDocumentClass" c:type="ArvDomDocumentClass"/>
      </field>
    </record>
    <class name="GcCommand"
           c:symbol-prefix="gc_command"
           c:type="ArvGcCommand"
           parent="GcFeatureNode"
           glib:type-name="ArvGcCommand"
           glib:get-type="arv_gc_command_get_type"
           glib:type-struct="GcCommandClass">
      <source-position filename="../src/arvgccommand.h" line="37"/>
      <constructor name="new" c:identifier="arv_gc_command_new">
        <source-position filename="../src/arvgccommand.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="execute" c:identifier="arv_gc_command_execute" throws="1">
        <source-position filename="../src/arvgccommand.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_command" transfer-ownership="none">
            <type name="GcCommand" c:type="ArvGcCommand*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="GcCommandClass"
            c:type="ArvGcCommandClass"
            glib:is-gtype-struct-for="GcCommand">
      <source-position filename="../src/arvgccommand.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcConverter"
           c:symbol-prefix="gc_converter"
           c:type="ArvGcConverter"
           parent="GcFeatureNode"
           abstract="1"
           glib:type-name="ArvGcConverter"
           glib:get-type="arv_gc_converter_get_type"
           glib:type-struct="GcConverterClass">
      <source-position filename="../src/arvgcconverter.h" line="40"/>
      <field name="parent_instance">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
    </class>
    <record name="GcConverterClass"
            c:type="ArvGcConverterClass"
            glib:is-gtype-struct-for="GcConverter">
      <source-position filename="../src/arvgcconverter.h" line="40"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcConverterNode"
           c:symbol-prefix="gc_converter_node"
           c:type="ArvGcConverterNode"
           parent="GcConverter"
           glib:type-name="ArvGcConverterNode"
           glib:get-type="arv_gc_converter_node_get_type"
           glib:type-struct="GcConverterNodeClass">
      <source-position filename="../src/arvgcconverternode.h" line="35"/>
      <implements name="GcFloat"/>
      <constructor name="new" c:identifier="arv_gc_converter_node_new">
        <source-position filename="../src/arvgcconverternode.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcConverterNodeClass"
            c:type="ArvGcConverterNodeClass"
            glib:is-gtype-struct-for="GcConverterNode">
      <source-position filename="../src/arvgcconverternode.h" line="35"/>
      <field name="parent_class">
        <type name="GcConverterClass" c:type="ArvGcConverterClass"/>
      </field>
    </record>
    <enumeration name="GcDisplayNotation"
                 version="0.8.0"
                 glib:type-name="ArvGcDisplayNotation"
                 glib:get-type="arv_gc_display_notation_get_type"
                 c:type="ArvGcDisplayNotation">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="161">Number display notations for showing numbers in user interfaces.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_DISPLAY_NOTATION_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="163">undefined number notation</doc>
      </member>
      <member name="automatic"
              value="0"
              c:identifier="ARV_GC_DISPLAY_NOTATION_AUTOMATIC"
              glib:nick="automatic">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="164">automatically detect whether to use fixed or scientific number notation</doc>
      </member>
      <member name="fixed"
              value="1"
              c:identifier="ARV_GC_DISPLAY_NOTATION_FIXED"
              glib:nick="fixed">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="165">used fixed (i.e. decimal) notation for displaying numbers</doc>
      </member>
      <member name="scientific"
              value="2"
              c:identifier="ARV_GC_DISPLAY_NOTATION_SCIENTIFIC"
              glib:nick="scientific">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="166">use scientific notation for displaying numbers</doc>
      </member>
    </enumeration>
    <class name="GcEnumEntry"
           c:symbol-prefix="gc_enum_entry"
           c:type="ArvGcEnumEntry"
           parent="GcFeatureNode"
           glib:type-name="ArvGcEnumEntry"
           glib:get-type="arv_gc_enum_entry_get_type"
           glib:type-struct="GcEnumEntryClass">
      <source-position filename="../src/arvgcenumentry.h" line="37"/>
      <constructor name="new" c:identifier="arv_gc_enum_entry_new">
        <source-position filename="../src/arvgcenumentry.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value"
              c:identifier="arv_gc_enum_entry_get_value"
              throws="1">
        <source-position filename="../src/arvgcenumentry.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="GcEnumEntry" c:type="ArvGcEnumEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="GcEnumEntryClass"
            c:type="ArvGcEnumEntryClass"
            glib:is-gtype-struct-for="GcEnumEntry">
      <source-position filename="../src/arvgcenumentry.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcEnumeration"
           c:symbol-prefix="gc_enumeration"
           c:type="ArvGcEnumeration"
           parent="GcFeatureNode"
           glib:type-name="ArvGcEnumeration"
           glib:get-type="arv_gc_enumeration_get_type"
           glib:type-struct="GcEnumerationClass">
      <source-position filename="../src/arvgcenumeration.h" line="37"/>
      <implements name="GcInteger"/>
      <implements name="GcSelector"/>
      <implements name="GcString"/>
      <constructor name="new" c:identifier="arv_gc_enumeration_new">
        <source-position filename="../src/arvgcenumeration.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="dup_available_display_names"
              c:identifier="arv_gc_enumeration_dup_available_display_names"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcenumeration.c"
             line="423">Create an array of display names of all available entries.</doc>
        <source-position filename="../src/arvgcenumeration.h" line="49"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvgcenumeration.c"
               line="431">an newly created array of const strings, which must freed after use using g_free,
%NULL on error.</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="425">an #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="426">placeholder for the number of values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_int_values"
              c:identifier="arv_gc_enumeration_dup_available_int_values"
              version="0.8.0"
              throws="1">
        <source-position filename="../src/arvgcenumeration.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcenumeration.c"
               line="248">a newly allocated array of 64 bit integers, to be freed after use using g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="244">a #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="245">the number of values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_available_string_values"
              c:identifier="arv_gc_enumeration_dup_available_string_values"
              version="0.8.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcenumeration.c"
             line="403">Create an array of all available values of @enumeration, as strings.</doc>
        <source-position filename="../src/arvgcenumeration.h" line="48"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../src/arvgcenumeration.c"
               line="411">an newly created array of const strings, which must freed after use using g_free,
%NULL on error.</doc>
          <array length="0" zero-terminated="0" c:type="const char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="405">an #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="n_values"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="406">placeholder for the number of values</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entries" c:identifier="arv_gc_enumeration_get_entries">
        <source-position filename="../src/arvgcenumeration.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcenumeration.c"
               line="506">the list of enumeration entry nodes.</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="GcFeatureNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcenumeration.c"
                 line="504">a #ArvGcEnumeration</doc>
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_int_value"
              c:identifier="arv_gc_enumeration_get_int_value"
              throws="1">
        <source-position filename="../src/arvgcenumeration.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string_value"
              c:identifier="arv_gc_enumeration_get_string_value"
              throws="1">
        <source-position filename="../src/arvgcenumeration.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_int_value"
              c:identifier="arv_gc_enumeration_set_int_value"
              throws="1">
        <source-position filename="../src/arvgcenumeration.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_value"
              c:identifier="arv_gc_enumeration_set_string_value"
              throws="1">
        <source-position filename="../src/arvgcenumeration.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="enumeration" transfer-ownership="none">
            <type name="GcEnumeration" c:type="ArvGcEnumeration*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="GcEnumerationClass"
            c:type="ArvGcEnumerationClass"
            glib:is-gtype-struct-for="GcEnumeration">
      <source-position filename="../src/arvgcenumeration.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <enumeration name="GcError"
                 glib:type-name="ArvGcError"
                 glib:get-type="arv_gc_error_get_type"
                 c:type="ArvGcError"
                 glib:error-domain="arv-gc-error-quark">
      <member name="property_not_defined"
              value="0"
              c:identifier="ARV_GC_ERROR_PROPERTY_NOT_DEFINED"
              glib:nick="property-not-defined">
      </member>
      <member name="pvalue_not_defined"
              value="1"
              c:identifier="ARV_GC_ERROR_PVALUE_NOT_DEFINED"
              glib:nick="pvalue-not-defined">
      </member>
      <member name="invalid_pvalue"
              value="2"
              c:identifier="ARV_GC_ERROR_INVALID_PVALUE"
              glib:nick="invalid-pvalue">
      </member>
      <member name="empty_enumeration"
              value="3"
              c:identifier="ARV_GC_ERROR_EMPTY_ENUMERATION"
              glib:nick="empty-enumeration">
      </member>
      <member name="out_of_range"
              value="4"
              c:identifier="ARV_GC_ERROR_OUT_OF_RANGE"
              glib:nick="out-of-range">
      </member>
      <member name="no_device_set"
              value="5"
              c:identifier="ARV_GC_ERROR_NO_DEVICE_SET"
              glib:nick="no-device-set">
      </member>
      <member name="no_event_implementation"
              value="6"
              c:identifier="ARV_GC_ERROR_NO_EVENT_IMPLEMENTATION"
              glib:nick="no-event-implementation">
      </member>
      <member name="node_not_found"
              value="7"
              c:identifier="ARV_GC_ERROR_NODE_NOT_FOUND"
              glib:nick="node-not-found">
      </member>
      <member name="enum_entry_not_found"
              value="8"
              c:identifier="ARV_GC_ERROR_ENUM_ENTRY_NOT_FOUND"
              glib:nick="enum-entry-not-found">
      </member>
      <member name="invalid_length"
              value="9"
              c:identifier="ARV_GC_ERROR_INVALID_LENGTH"
              glib:nick="invalid-length">
      </member>
      <member name="read_only"
              value="10"
              c:identifier="ARV_GC_ERROR_READ_ONLY"
              glib:nick="read-only">
      </member>
      <member name="set_from_string_undefined"
              value="11"
              c:identifier="ARV_GC_ERROR_SET_FROM_STRING_UNDEFINED"
              glib:nick="set-from-string-undefined">
      </member>
      <member name="get_as_string_undefined"
              value="12"
              c:identifier="ARV_GC_ERROR_GET_AS_STRING_UNDEFINED"
              glib:nick="get-as-string-undefined">
      </member>
      <member name="invalid_bit_range"
              value="13"
              c:identifier="ARV_GC_ERROR_INVALID_BIT_RANGE"
              glib:nick="invalid-bit-range">
      </member>
      <function name="quark" c:identifier="arv_gc_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <class name="GcFeatureNode"
           c:symbol-prefix="gc_feature_node"
           c:type="ArvGcFeatureNode"
           parent="GcNode"
           abstract="1"
           glib:type-name="ArvGcFeatureNode"
           glib:get-type="arv_gc_feature_node_get_type"
           glib:type-struct="GcFeatureNodeClass">
      <doc xml:space="preserve"
           filename="../src/arvgcfeaturenode.c"
           line="23">#ArvGcFeatureNode provides a base class for the implementation of the different
types of Genicam feature node (Group, Integer, Float, Enumeration...).</doc>
      <source-position filename="../src/arvgcfeaturenode.h" line="44"/>
      <virtual-method name="get_access_mode">
        <source-position filename="../src/arvgcfeaturenode.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_linked_feature" introspectable="0">
        <source-position filename="../src/arvgcfeaturenode.h" line="42"/>
        <return-value>
          <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_actual_access_mode"
              c:identifier="arv_gc_feature_node_get_actual_access_mode"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfeaturenode.c"
             line="391">Gets feature node allowed access mode. This is a combination of Genicam ImposedAccessMode and
AccessMode properties of underlying features and registers.</doc>
        <source-position filename="../src/arvgcfeaturenode.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfeaturenode.c"
               line="398">Access mode as #ArvGcAccessMode</doc>
          <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="393">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="arv_gc_feature_node_get_description">
        <source-position filename="../src/arvgcfeaturenode.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="arv_gc_feature_node_get_display_name">
        <source-position filename="../src/arvgcfeaturenode.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_imposed_access_mode"
              c:identifier="arv_gc_feature_node_get_imposed_access_mode"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfeaturenode.c"
             line="364">Gets feature node imposed access mode property.

&lt;warning&gt;&lt;para&gt;Note that this function will not give the actual access mode. Please use
#arv_gc_feature_node_get_actual_access_mode to get an access mode combined from imposed access
mode and underlying register access mode properties.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvgcfeaturenode.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfeaturenode.c"
               line="374">Access mode as #ArvGcAccessMode</doc>
          <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="366">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="arv_gc_feature_node_get_name">
        <source-position filename="../src/arvgcfeaturenode.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name_space"
              c:identifier="arv_gc_feature_node_get_name_space"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfeaturenode.c"
             line="225">Get feature name space.</doc>
        <source-position filename="../src/arvgcfeaturenode.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfeaturenode.c"
               line="231">Name space value as #ArvGcNameSpace.</doc>
          <type name="GcNameSpace" c:type="ArvGcNameSpace"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="227">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip"
              c:identifier="arv_gc_feature_node_get_tooltip">
        <source-position filename="../src/arvgcfeaturenode.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value_as_string"
              c:identifier="arv_gc_feature_node_get_value_as_string"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcfeaturenode.c"
             line="455">Retrieve the node value a string.

&lt;warning&gt;&lt;para&gt;Please note the string content is still owned by the @node object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvgcfeaturenode.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfeaturenode.c"
               line="464">a string representation of the node value, %NULL if not applicable.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="457">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="arv_gc_feature_node_get_visibility">
        <source-position filename="../src/arvgcfeaturenode.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="GcVisibility" c:type="ArvGcVisibility"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_available"
              c:identifier="arv_gc_feature_node_is_available"
              throws="1">
        <source-position filename="../src/arvgcfeaturenode.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_implemented"
              c:identifier="arv_gc_feature_node_is_implemented"
              throws="1">
        <source-position filename="../src/arvgcfeaturenode.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_locked"
              c:identifier="arv_gc_feature_node_is_locked"
              throws="1">
        <source-position filename="../src/arvgcfeaturenode.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value_from_string"
              c:identifier="arv_gc_feature_node_set_value_from_string"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcfeaturenode.c"
             line="424">Set the node value using a string representation of the value. May not be applicable to every node type, but safe.</doc>
        <source-position filename="../src/arvgcfeaturenode.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_feature_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="426">a #ArvGcFeatureNode</doc>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfeaturenode.c"
                 line="427">new node value, as string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
    </class>
    <record name="GcFeatureNodeClass"
            c:type="ArvGcFeatureNodeClass"
            glib:is-gtype-struct-for="GcFeatureNode">
      <source-position filename="../src/arvgcfeaturenode.h" line="44"/>
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
      <field name="get_linked_feature" introspectable="0">
        <callback name="get_linked_feature" introspectable="0">
          <source-position filename="../src/arvgcfeaturenode.h" line="42"/>
          <return-value>
            <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
          </return-value>
          <parameters>
            <parameter name="gc_feature_node" transfer-ownership="none">
              <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_access_mode">
        <callback name="get_access_mode">
          <source-position filename="../src/arvgcfeaturenode.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
          </return-value>
          <parameters>
            <parameter name="gc_feature_node" transfer-ownership="none">
              <type name="GcFeatureNode" c:type="ArvGcFeatureNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="GcFloat"
               c:symbol-prefix="gc_float"
               c:type="ArvGcFloat"
               glib:type-name="ArvGcFloat"
               glib:get-type="arv_gc_float_get_type"
               glib:type-struct="GcFloatInterface">
      <source-position filename="../src/arvgcfloat.h" line="52"/>
      <virtual-method name="get_display_notation"
                      invoker="get_display_notation"
                      version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="200">Get number display notation.</doc>
        <source-position filename="../src/arvgcfloat.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="206">Number display notation as #ArvGcDisplayNotation.</doc>
          <type name="GcDisplayNotation" c:type="ArvGcDisplayNotation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="202">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_display_precision"
                      invoker="get_display_precision"
                      version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="226">Gets number of digits to show in user interface. This number should always be positive and represent
total number of digits on left and right side of decimal.</doc>
        <source-position filename="../src/arvgcfloat.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="233">Number of digits to show.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="228">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_inc" invoker="get_inc" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_representation" invoker="get_representation">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="161">Get number representation format.</doc>
        <source-position filename="../src/arvgcfloat.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="167">Number representation format as #ArvGcRepresentation.</doc>
          <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="163">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit">
        <source-position filename="../src/arvgcfloat.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_display_notation"
              c:identifier="arv_gc_float_get_display_notation"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="200">Get number display notation.</doc>
        <source-position filename="../src/arvgcfloat.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="206">Number display notation as #ArvGcDisplayNotation.</doc>
          <type name="GcDisplayNotation" c:type="ArvGcDisplayNotation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="202">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_precision"
              c:identifier="arv_gc_float_get_display_precision"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="226">Gets number of digits to show in user interface. This number should always be positive and represent
total number of digits on left and right side of decimal.</doc>
        <source-position filename="../src/arvgcfloat.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="233">Number of digits to show.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="228">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inc" c:identifier="arv_gc_float_get_inc" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="arv_gc_float_get_max" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="arv_gc_float_get_min" throws="1">
        <source-position filename="../src/arvgcfloat.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_representation"
              c:identifier="arv_gc_float_get_representation">
        <doc xml:space="preserve"
             filename="../src/arvgcfloat.c"
             line="161">Get number representation format.</doc>
        <source-position filename="../src/arvgcfloat.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcfloat.c"
               line="167">Number representation format as #ArvGcRepresentation.</doc>
          <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="163">a #ArvGcFloat</doc>
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit" c:identifier="arv_gc_float_get_unit">
        <source-position filename="../src/arvgcfloat.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_float_get_value"
              throws="1">
        <source-position filename="../src/arvgcfloat.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="impose_max"
              c:identifier="arv_gc_float_impose_max"
              throws="1">
        <source-position filename="../src/arvgcfloat.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min"
              c:identifier="arv_gc_float_impose_min"
              throws="1">
        <source-position filename="../src/arvgcfloat.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_float_set_value"
              throws="1">
        <source-position filename="../src/arvgcfloat.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_float" transfer-ownership="none">
            <type name="GcFloat" c:type="ArvGcFloat*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcFloatInterface"
            c:type="ArvGcFloatInterface"
            glib:is-gtype-struct-for="GcFloat">
      <source-position filename="../src/arvgcfloat.h" line="52"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_representation">
        <callback name="get_representation">
          <source-position filename="../src/arvgcfloat.h" line="46"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="167">Number representation format as #ArvGcRepresentation.</doc>
            <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcfloat.c"
                   line="163">a #ArvGcFloat</doc>
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_display_notation">
        <callback name="get_display_notation">
          <source-position filename="../src/arvgcfloat.h" line="47"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="206">Number display notation as #ArvGcDisplayNotation.</doc>
            <type name="GcDisplayNotation" c:type="ArvGcDisplayNotation"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcfloat.c"
                   line="202">a #ArvGcFloat</doc>
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_display_precision">
        <callback name="get_display_precision">
          <source-position filename="../src/arvgcfloat.h" line="48"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcfloat.c"
                 line="233">Number of digits to show.</doc>
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcfloat.c"
                   line="228">a #ArvGcFloat</doc>
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit">
          <source-position filename="../src/arvgcfloat.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max" throws="1">
          <source-position filename="../src/arvgcfloat.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcFloatNode"
           c:symbol-prefix="gc_float_node"
           c:type="ArvGcFloatNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcFloatNode"
           glib:get-type="arv_gc_float_node_get_type"
           glib:type-struct="GcFloatNodeClass">
      <source-position filename="../src/arvgcfloatnode.h" line="37"/>
      <implements name="GcFloat"/>
      <constructor name="new" c:identifier="arv_gc_float_node_new">
        <source-position filename="../src/arvgcfloatnode.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcFloatNodeClass"
            c:type="ArvGcFloatNodeClass"
            glib:is-gtype-struct-for="GcFloatNode">
      <source-position filename="../src/arvgcfloatnode.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcFloatRegNode"
           c:symbol-prefix="gc_float_reg_node"
           c:type="ArvGcFloatRegNode"
           parent="GcRegisterNode"
           glib:type-name="ArvGcFloatRegNode"
           glib:get-type="arv_gc_float_reg_node_get_type"
           glib:type-struct="GcFloatRegNodeClass">
      <source-position filename="../src/arvgcfloatregnode.h" line="39"/>
      <implements name="GcFloat"/>
      <implements name="GcRegister"/>
      <constructor name="new"
                   c:identifier="arv_gc_float_reg_node_new"
                   version="0.8.0">
        <source-position filename="../src/arvgcfloatregnode.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcfloatregnode.c"
               line="261">a new FloatReg node</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcRegisterNode" c:type="ArvGcRegisterNode"/>
      </field>
    </class>
    <record name="GcFloatRegNodeClass"
            c:type="ArvGcFloatRegNodeClass"
            glib:is-gtype-struct-for="GcFloatRegNode">
      <source-position filename="../src/arvgcfloatregnode.h" line="39"/>
      <field name="parent_class">
        <type name="GcRegisterNodeClass" c:type="ArvGcRegisterNodeClass"/>
      </field>
    </record>
    <class name="GcGroupNode"
           c:symbol-prefix="gc_group_node"
           c:type="ArvGcGroupNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcGroupNode"
           glib:get-type="arv_gc_group_node_get_type"
           glib:type-struct="GcGroupNodeClass">
      <source-position filename="../src/arvgcgroupnode.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_group_node_new">
        <source-position filename="../src/arvgcgroupnode.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcGroupNodeClass"
            c:type="ArvGcGroupNodeClass"
            glib:is-gtype-struct-for="GcGroupNode">
      <source-position filename="../src/arvgcgroupnode.h" line="36"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcIndexNode"
           c:symbol-prefix="gc_index_node"
           c:type="ArvGcIndexNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcIndexNode"
           glib:get-type="arv_gc_index_node_get_type"
           glib:type-struct="GcIndexNodeClass">
      <source-position filename="../src/arvgcindexnode.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_index_node_new">
        <source-position filename="../src/arvgcindexnode.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_index"
              c:identifier="arv_gc_index_node_get_index"
              throws="1">
        <source-position filename="../src/arvgcindexnode.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="index_node" transfer-ownership="none">
            <type name="GcIndexNode" c:type="ArvGcIndexNode*"/>
          </instance-parameter>
          <parameter name="default_offset" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="GcIndexNodeClass"
            c:type="ArvGcIndexNodeClass"
            glib:is-gtype-struct-for="GcIndexNode">
      <source-position filename="../src/arvgcindexnode.h" line="36"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <class name="GcIntConverterNode"
           c:symbol-prefix="gc_int_converter_node"
           c:type="ArvGcIntConverterNode"
           parent="GcConverter"
           glib:type-name="ArvGcIntConverterNode"
           glib:get-type="arv_gc_int_converter_node_get_type"
           glib:type-struct="GcIntConverterNodeClass">
      <source-position filename="../src/arvgcintconverternode.h" line="35"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_int_converter_node_new">
        <source-position filename="../src/arvgcintconverternode.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcIntConverterNodeClass"
            c:type="ArvGcIntConverterNodeClass"
            glib:is-gtype-struct-for="GcIntConverterNode">
      <source-position filename="../src/arvgcintconverternode.h" line="35"/>
      <field name="parent_class">
        <type name="GcConverterClass" c:type="ArvGcConverterClass"/>
      </field>
    </record>
    <class name="GcIntRegNode"
           c:symbol-prefix="gc_int_reg_node"
           c:type="ArvGcIntRegNode"
           parent="GcRegisterNode"
           glib:type-name="ArvGcIntRegNode"
           glib:get-type="arv_gc_int_reg_node_get_type"
           glib:type-struct="GcIntRegNodeClass">
      <source-position filename="../src/arvgcintregnode.h" line="39"/>
      <implements name="GcInteger"/>
      <implements name="GcRegister"/>
      <implements name="GcSelector"/>
      <constructor name="new"
                   c:identifier="arv_gc_int_reg_node_new"
                   version="0.8.0">
        <source-position filename="../src/arvgcintregnode.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcintregnode.c"
               line="209">a new IntReg node</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcRegisterNode" c:type="ArvGcRegisterNode"/>
      </field>
    </class>
    <record name="GcIntRegNodeClass"
            c:type="ArvGcIntRegNodeClass"
            glib:is-gtype-struct-for="GcIntRegNode">
      <source-position filename="../src/arvgcintregnode.h" line="39"/>
      <field name="parent_class">
        <type name="GcRegisterNodeClass" c:type="ArvGcRegisterNodeClass"/>
      </field>
    </record>
    <class name="GcIntSwissKnifeNode"
           c:symbol-prefix="gc_int_swiss_knife_node"
           c:type="ArvGcIntSwissKnifeNode"
           parent="GcSwissKnife"
           glib:type-name="ArvGcIntSwissKnifeNode"
           glib:get-type="arv_gc_int_swiss_knife_node_get_type"
           glib:type-struct="GcIntSwissKnifeNodeClass">
      <source-position filename="../src/arvgcintswissknifenode.h" line="39"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_int_swiss_knife_node_new">
        <source-position filename="../src/arvgcintswissknifenode.h" line="41"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcSwissKnife" c:type="ArvGcSwissKnife"/>
      </field>
    </class>
    <record name="GcIntSwissKnifeNodeClass"
            c:type="ArvGcIntSwissKnifeNodeClass"
            glib:is-gtype-struct-for="GcIntSwissKnifeNode">
      <source-position filename="../src/arvgcintswissknifenode.h" line="39"/>
      <field name="parent_class">
        <type name="GcSwissKnifeClass" c:type="ArvGcSwissKnifeClass"/>
      </field>
    </record>
    <interface name="GcInteger"
               c:symbol-prefix="gc_integer"
               c:type="ArvGcInteger"
               glib:type-name="ArvGcInteger"
               glib:get-type="arv_gc_integer_get_type"
               glib:type-struct="GcIntegerInterface">
      <source-position filename="../src/arvgcinteger.h" line="50"/>
      <virtual-method name="get_inc" invoker="get_inc" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_representation" invoker="get_representation">
        <doc xml:space="preserve"
             filename="../src/arvgcinteger.c"
             line="160">Get number representation format.</doc>
        <source-position filename="../src/arvgcinteger.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcinteger.c"
               line="166">Number representation format as #ArvGcRepresentation.</doc>
          <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcinteger.c"
                 line="162">a #ArvGcInteger</doc>
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit">
        <source-position filename="../src/arvgcinteger.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_inc" c:identifier="arv_gc_integer_get_inc" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max" c:identifier="arv_gc_integer_get_max" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_min" c:identifier="arv_gc_integer_get_min" throws="1">
        <source-position filename="../src/arvgcinteger.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_representation"
              c:identifier="arv_gc_integer_get_representation">
        <doc xml:space="preserve"
             filename="../src/arvgcinteger.c"
             line="160">Get number representation format.</doc>
        <source-position filename="../src/arvgcinteger.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcinteger.c"
               line="166">Number representation format as #ArvGcRepresentation.</doc>
          <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcinteger.c"
                 line="162">a #ArvGcInteger</doc>
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit" c:identifier="arv_gc_integer_get_unit">
        <source-position filename="../src/arvgcinteger.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_integer_get_value"
              throws="1">
        <source-position filename="../src/arvgcinteger.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="impose_max"
              c:identifier="arv_gc_integer_impose_max"
              throws="1">
        <source-position filename="../src/arvgcinteger.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min"
              c:identifier="arv_gc_integer_impose_min"
              throws="1">
        <source-position filename="../src/arvgcinteger.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_integer_set_value"
              throws="1">
        <source-position filename="../src/arvgcinteger.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_integer" transfer-ownership="none">
            <type name="GcInteger" c:type="ArvGcInteger*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcIntegerInterface"
            c:type="ArvGcIntegerInterface"
            glib:is-gtype-struct-for="GcInteger">
      <source-position filename="../src/arvgcinteger.h" line="50"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_representation">
        <callback name="get_representation">
          <source-position filename="../src/arvgcinteger.h" line="46"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcinteger.c"
                 line="166">Number representation format as #ArvGcRepresentation.</doc>
            <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcinteger.c"
                   line="162">a #ArvGcInteger</doc>
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit">
          <source-position filename="../src/arvgcinteger.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max" throws="1">
          <source-position filename="../src/arvgcinteger.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcIntegerNode"
           c:symbol-prefix="gc_integer_node"
           c:type="ArvGcIntegerNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcIntegerNode"
           glib:get-type="arv_gc_integer_node_get_type"
           glib:type-struct="GcIntegerNodeClass">
      <source-position filename="../src/arvgcintegernode.h" line="37"/>
      <implements name="GcInteger"/>
      <implements name="GcSelector"/>
      <constructor name="new" c:identifier="arv_gc_integer_node_new">
        <source-position filename="../src/arvgcintegernode.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcIntegerNodeClass"
            c:type="ArvGcIntegerNodeClass"
            glib:is-gtype-struct-for="GcIntegerNode">
      <source-position filename="../src/arvgcintegernode.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcInvalidatorNode"
           c:symbol-prefix="gc_invalidator_node"
           c:type="ArvGcInvalidatorNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcInvalidatorNode"
           glib:get-type="arv_gc_invalidator_node_get_type"
           glib:type-struct="GcInvalidatorNodeClass">
      <source-position filename="../src/arvgcinvalidatornode.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_invalidator_node_new">
        <source-position filename="../src/arvgcinvalidatornode.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcInvalidatorNodeClass"
            c:type="ArvGcInvalidatorNodeClass"
            glib:is-gtype-struct-for="GcInvalidatorNode">
      <source-position filename="../src/arvgcinvalidatornode.h" line="36"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <enumeration name="GcIsLinear"
                 glib:type-name="ArvGcIsLinear"
                 glib:get-type="arv_gc_is_linear_get_type"
                 c:type="ArvGcIsLinear">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="100">Describes relationship between TO and FROM variables in Converter feature nodes.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_IS_LINEAR_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="102">undefined relationship between variables</doc>
      </member>
      <member name="no"
              value="0"
              c:identifier="ARV_GC_IS_LINEAR_NO"
              glib:nick="no">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="103">non-linear relationship between variables</doc>
      </member>
      <member name="yes"
              value="1"
              c:identifier="ARV_GC_IS_LINEAR_YES"
              glib:nick="yes">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="104">linear relationship between variables</doc>
      </member>
    </enumeration>
    <class name="GcMaskedIntRegNode"
           c:symbol-prefix="gc_masked_int_reg_node"
           c:type="ArvGcMaskedIntRegNode"
           parent="GcRegisterNode"
           glib:type-name="ArvGcMaskedIntRegNode"
           glib:get-type="arv_gc_masked_int_reg_node_get_type"
           glib:type-struct="GcMaskedIntRegNodeClass">
      <source-position filename="../src/arvgcmaskedintregnode.h" line="39"/>
      <implements name="GcInteger"/>
      <implements name="GcRegister"/>
      <implements name="GcSelector"/>
      <constructor name="new"
                   c:identifier="arv_gc_masked_int_reg_node_new"
                   version="0.8.0">
        <source-position filename="../src/arvgcmaskedintregnode.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcmaskedintregnode.c"
               line="220">a new MaskedIntReg node</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcRegisterNode" c:type="ArvGcRegisterNode"/>
      </field>
    </class>
    <record name="GcMaskedIntRegNodeClass"
            c:type="ArvGcMaskedIntRegNodeClass"
            glib:is-gtype-struct-for="GcMaskedIntRegNode">
      <source-position filename="../src/arvgcmaskedintregnode.h" line="39"/>
      <field name="parent_class">
        <type name="GcRegisterNodeClass" c:type="ArvGcRegisterNodeClass"/>
      </field>
    </record>
    <enumeration name="GcNameSpace"
                 glib:type-name="ArvGcNameSpace"
                 glib:get-type="arv_gc_name_space_get_type"
                 c:type="ArvGcNameSpace">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="34">Specifies feature node or register name space type. Standard name space features are listed in
Genicam materials. Any other vendor-specific features should use custom name space type.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_NAME_SPACE_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="36">undefined name space</doc>
      </member>
      <member name="standard"
              value="0"
              c:identifier="ARV_GC_NAME_SPACE_STANDARD"
              glib:nick="standard">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="37">Genicam standardized name space</doc>
      </member>
      <member name="custom"
              value="1"
              c:identifier="ARV_GC_NAME_SPACE_CUSTOM"
              glib:nick="custom">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="38">non-standardized name space</doc>
      </member>
    </enumeration>
    <class name="GcNode"
           c:symbol-prefix="gc_node"
           c:type="ArvGcNode"
           parent="DomElement"
           abstract="1"
           glib:type-name="ArvGcNode"
           glib:get-type="arv_gc_node_get_type"
           glib:type-struct="GcNodeClass">
      <doc xml:space="preserve"
           filename="../src/arvgcnode.c"
           line="23">#ArvGcNode provides a base class for the implementation of the different
types of Genicam nodes.</doc>
      <source-position filename="../src/arvgcnode.h" line="40"/>
      <method name="get_genicam" c:identifier="arv_gc_node_get_genicam">
        <doc xml:space="preserve"
             filename="../src/arvgcnode.c"
             line="45">Retrieves the parent genicam document of @gc_node.</doc>
        <source-position filename="../src/arvgcnode.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcnode.c"
               line="51">the parent #ArvGc</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcnode.c"
                 line="47">a #ArvGcNode</doc>
            <type name="GcNode" c:type="ArvGcNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="DomElement" c:type="ArvDomElement"/>
      </field>
    </class>
    <record name="GcNodeClass"
            c:type="ArvGcNodeClass"
            glib:is-gtype-struct-for="GcNode">
      <source-position filename="../src/arvgcnode.h" line="40"/>
      <field name="parent_class">
        <type name="DomElementClass" c:type="ArvDomElementClass"/>
      </field>
    </record>
    <class name="GcPort"
           c:symbol-prefix="gc_port"
           c:type="ArvGcPort"
           parent="GcFeatureNode"
           glib:type-name="ArvGcPort"
           glib:get-type="arv_gc_port_get_type"
           glib:type-struct="GcPortClass">
      <source-position filename="../src/arvgcport.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_port_new">
        <source-position filename="../src/arvgcport.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="read" c:identifier="arv_gc_port_read" throws="1">
        <source-position filename="../src/arvgcport.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="GcPort" c:type="ArvGcPort*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="arv_gc_port_write" throws="1">
        <source-position filename="../src/arvgcport.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="port" transfer-ownership="none">
            <type name="GcPort" c:type="ArvGcPort*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="GcPortClass"
            c:type="ArvGcPortClass"
            glib:is-gtype-struct-for="GcPort">
      <source-position filename="../src/arvgcport.h" line="36"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcPropertyNode"
           c:symbol-prefix="gc_property_node"
           c:type="ArvGcPropertyNode"
           parent="GcNode"
           glib:type-name="ArvGcPropertyNode"
           glib:get-type="arv_gc_property_node_get_type"
           glib:type-struct="GcPropertyNodeClass">
      <doc xml:space="preserve"
           filename="../src/arvgcpropertynode.c"
           line="23">#ArvGcPropertyNode provides a base class for the implementation of the different
types of Genicam property nodes (Value, pValue, Endianness...).</doc>
      <source-position filename="../src/arvgcpropertynode.h" line="102"/>
      <constructor name="new_access_mode"
                   c:identifier="arv_gc_property_node_new_access_mode">
        <source-position filename="../src/arvgcpropertynode.h" line="140"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_address"
                   c:identifier="arv_gc_property_node_new_address">
        <source-position filename="../src/arvgcpropertynode.h" line="107"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_bit" c:identifier="arv_gc_property_node_new_bit">
        <source-position filename="../src/arvgcpropertynode.h" line="148"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_cachable"
                   c:identifier="arv_gc_property_node_new_cachable">
        <source-position filename="../src/arvgcpropertynode.h" line="142"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_chunk_id"
                   c:identifier="arv_gc_property_node_new_chunk_id">
        <source-position filename="../src/arvgcpropertynode.h" line="151"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_command_value"
                   c:identifier="arv_gc_property_node_new_command_value">
        <source-position filename="../src/arvgcpropertynode.h" line="149"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_constant"
                   c:identifier="arv_gc_property_node_new_constant">
        <source-position filename="../src/arvgcpropertynode.h" line="139"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_description"
                   c:identifier="arv_gc_property_node_new_description">
        <source-position filename="../src/arvgcpropertynode.h" line="109"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_display_name"
                   c:identifier="arv_gc_property_node_new_display_name">
        <source-position filename="../src/arvgcpropertynode.h" line="112"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_display_notation"
                   c:identifier="arv_gc_property_node_new_display_notation">
        <source-position filename="../src/arvgcpropertynode.h" line="122"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_display_precision"
                   c:identifier="arv_gc_property_node_new_display_precision">
        <source-position filename="../src/arvgcpropertynode.h" line="123"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_endianness"
                   c:identifier="arv_gc_property_node_new_endianness">
        <source-position filename="../src/arvgcpropertynode.h" line="144"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_event_id"
                   c:identifier="arv_gc_property_node_new_event_id">
        <source-position filename="../src/arvgcpropertynode.h" line="152"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_expression"
                   c:identifier="arv_gc_property_node_new_expression">
        <source-position filename="../src/arvgcpropertynode.h" line="138"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula"
                   c:identifier="arv_gc_property_node_new_formula">
        <source-position filename="../src/arvgcpropertynode.h" line="135"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula_from"
                   c:identifier="arv_gc_property_node_new_formula_from">
        <source-position filename="../src/arvgcpropertynode.h" line="137"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_formula_to"
                   c:identifier="arv_gc_property_node_new_formula_to">
        <source-position filename="../src/arvgcpropertynode.h" line="136"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_imposed_access_mode"
                   c:identifier="arv_gc_property_node_new_imposed_access_mode">
        <source-position filename="../src/arvgcpropertynode.h" line="141"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_increment"
                   c:identifier="arv_gc_property_node_new_increment">
        <source-position filename="../src/arvgcpropertynode.h" line="118"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_is_linear"
                   c:identifier="arv_gc_property_node_new_is_linear">
        <source-position filename="../src/arvgcpropertynode.h" line="120"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_length"
                   c:identifier="arv_gc_property_node_new_length">
        <source-position filename="../src/arvgcpropertynode.h" line="131"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_lsb" c:identifier="arv_gc_property_node_new_lsb">
        <source-position filename="../src/arvgcpropertynode.h" line="146"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_maximum"
                   c:identifier="arv_gc_property_node_new_maximum">
        <source-position filename="../src/arvgcpropertynode.h" line="115"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_minimum"
                   c:identifier="arv_gc_property_node_new_minimum">
        <source-position filename="../src/arvgcpropertynode.h" line="113"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_msb" c:identifier="arv_gc_property_node_new_msb">
        <source-position filename="../src/arvgcpropertynode.h" line="147"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_off_value"
                   c:identifier="arv_gc_property_node_new_off_value">
        <source-position filename="../src/arvgcpropertynode.h" line="126"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_on_value"
                   c:identifier="arv_gc_property_node_new_on_value">
        <source-position filename="../src/arvgcpropertynode.h" line="125"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_address"
                   c:identifier="arv_gc_property_node_new_p_address">
        <source-position filename="../src/arvgcpropertynode.h" line="108"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_command_value"
                   c:identifier="arv_gc_property_node_new_p_command_value">
        <source-position filename="../src/arvgcpropertynode.h" line="150"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_feature"
                   c:identifier="arv_gc_property_node_new_p_feature">
        <source-position filename="../src/arvgcpropertynode.h" line="104"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_increment"
                   c:identifier="arv_gc_property_node_new_p_increment">
        <source-position filename="../src/arvgcpropertynode.h" line="119"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_available"
                   c:identifier="arv_gc_property_node_new_p_is_available">
        <source-position filename="../src/arvgcpropertynode.h" line="128"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_implemented"
                   c:identifier="arv_gc_property_node_new_p_is_implemented">
        <source-position filename="../src/arvgcpropertynode.h" line="127"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_is_locked"
                   c:identifier="arv_gc_property_node_new_p_is_locked">
        <source-position filename="../src/arvgcpropertynode.h" line="129"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_length"
                   c:identifier="arv_gc_property_node_new_p_length">
        <source-position filename="../src/arvgcpropertynode.h" line="132"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_maximum"
                   c:identifier="arv_gc_property_node_new_p_maximum">
        <source-position filename="../src/arvgcpropertynode.h" line="116"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_minimum"
                   c:identifier="arv_gc_property_node_new_p_minimum">
        <source-position filename="../src/arvgcpropertynode.h" line="114"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_port"
                   c:identifier="arv_gc_property_node_new_p_port">
        <source-position filename="../src/arvgcpropertynode.h" line="133"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_selected"
                   c:identifier="arv_gc_property_node_new_p_selected">
        <source-position filename="../src/arvgcpropertynode.h" line="130"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_value"
                   c:identifier="arv_gc_property_node_new_p_value">
        <source-position filename="../src/arvgcpropertynode.h" line="106"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_value_default"
                   c:identifier="arv_gc_property_node_new_p_value_default">
        <source-position filename="../src/arvgcpropertynode.h" line="154"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_p_variable"
                   c:identifier="arv_gc_property_node_new_p_variable">
        <source-position filename="../src/arvgcpropertynode.h" line="134"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_polling_time"
                   c:identifier="arv_gc_property_node_new_polling_time">
        <source-position filename="../src/arvgcpropertynode.h" line="143"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_representation"
                   c:identifier="arv_gc_property_node_new_representation">
        <source-position filename="../src/arvgcpropertynode.h" line="121"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_sign"
                   c:identifier="arv_gc_property_node_new_sign">
        <source-position filename="../src/arvgcpropertynode.h" line="145"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_slope"
                   c:identifier="arv_gc_property_node_new_slope">
        <source-position filename="../src/arvgcpropertynode.h" line="117"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_tooltip"
                   c:identifier="arv_gc_property_node_new_tooltip">
        <source-position filename="../src/arvgcpropertynode.h" line="111"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_unit"
                   c:identifier="arv_gc_property_node_new_unit">
        <source-position filename="../src/arvgcpropertynode.h" line="124"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_value"
                   c:identifier="arv_gc_property_node_new_value">
        <source-position filename="../src/arvgcpropertynode.h" line="105"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_value_default"
                   c:identifier="arv_gc_property_node_new_value_default">
        <source-position filename="../src/arvgcpropertynode.h" line="153"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_visibility"
                   c:identifier="arv_gc_property_node_new_visibility">
        <source-position filename="../src/arvgcpropertynode.h" line="110"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_access_mode"
              c:identifier="arv_gc_property_node_get_access_mode">
        <source-position filename="../src/arvgcpropertynode.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cachable"
              c:identifier="arv_gc_property_node_get_cachable">
        <source-position filename="../src/arvgcpropertynode.h" line="169"/>
        <return-value transfer-ownership="none">
          <type name="GcCachable" c:type="ArvGcCachable"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcCachable" c:type="ArvGcCachable"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display_notation"
              c:identifier="arv_gc_property_node_get_display_notation">
        <source-position filename="../src/arvgcpropertynode.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="GcDisplayNotation" c:type="ArvGcDisplayNotation"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcDisplayNotation" c:type="ArvGcDisplayNotation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display_precision"
              c:identifier="arv_gc_property_node_get_display_precision">
        <source-position filename="../src/arvgcpropertynode.h" line="174"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double"
              c:identifier="arv_gc_property_node_get_double"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_endianness"
              c:identifier="arv_gc_property_node_get_endianness">
        <source-position filename="../src/arvgcpropertynode.h" line="165"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64"
              c:identifier="arv_gc_property_node_get_int64"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="160"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_linked_node"
              c:identifier="arv_gc_property_node_get_linked_node">
        <source-position filename="../src/arvgcpropertynode.h" line="176"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcpropertynode.c"
               line="486">the #ArvGcNode which @node points to, %NULL if the property is not a pointer.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcpropertynode.c"
                 line="484">a #ArvGcPropertyNode</doc>
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_lsb" c:identifier="arv_gc_property_node_get_lsb">
        <source-position filename="../src/arvgcpropertynode.h" line="167"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_msb" c:identifier="arv_gc_property_node_get_msb">
        <source-position filename="../src/arvgcpropertynode.h" line="168"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="arv_gc_property_node_get_name"
              version="0.6.0">
        <source-position filename="../src/arvgcpropertynode.h" line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcpropertynode.c"
               line="290">node Name property value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcpropertynode.c"
                 line="288">a #ArvGcPropertyNode</doc>
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_type"
              c:identifier="arv_gc_property_node_get_node_type">
        <source-position filename="../src/arvgcpropertynode.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="GcPropertyNodeType" c:type="ArvGcPropertyNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_representation"
              c:identifier="arv_gc_property_node_get_representation">
        <source-position filename="../src/arvgcpropertynode.h" line="172"/>
        <return-value transfer-ownership="none">
          <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcRepresentation" c:type="ArvGcRepresentation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sign" c:identifier="arv_gc_property_node_get_sign">
        <source-position filename="../src/arvgcpropertynode.h" line="166"/>
        <return-value transfer-ownership="none">
          <type name="GcSignedness" c:type="ArvGcSignedness"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcSignedness" c:type="ArvGcSignedness"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="arv_gc_property_node_get_string"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visibility"
              c:identifier="arv_gc_property_node_get_visibility">
        <source-position filename="../src/arvgcpropertynode.h" line="171"/>
        <return-value transfer-ownership="none">
          <type name="GcVisibility" c:type="ArvGcVisibility"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="GcVisibility" c:type="ArvGcVisibility"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double"
              c:identifier="arv_gc_property_node_set_double"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64"
              c:identifier="arv_gc_property_node_set_int64"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string"
              c:identifier="arv_gc_property_node_set_string"
              throws="1">
        <source-position filename="../src/arvgcpropertynode.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="GcPropertyNode" c:type="ArvGcPropertyNode*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="node-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GcPropertyNodeType"/>
      </property>
      <field name="parent_instance">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
    </class>
    <record name="GcPropertyNodeClass"
            c:type="ArvGcPropertyNodeClass"
            glib:is-gtype-struct-for="GcPropertyNode">
      <source-position filename="../src/arvgcpropertynode.h" line="102"/>
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <enumeration name="GcPropertyNodeType"
                 glib:type-name="ArvGcPropertyNodeType"
                 glib:get-type="arv_gc_property_node_type_get_type"
                 c:type="ArvGcPropertyNodeType">
      <member name="unknown"
              value="0"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_UNKNOWN"
              glib:nick="unknown">
      </member>
      <member name="value"
              value="1"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_VALUE"
              glib:nick="value">
      </member>
      <member name="address"
              value="2"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ADDRESS"
              glib:nick="address">
      </member>
      <member name="description"
              value="3"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DESCRIPTION"
              glib:nick="description">
      </member>
      <member name="visibility"
              value="4"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_VISIBILITY"
              glib:nick="visibility">
      </member>
      <member name="tooltip"
              value="5"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_TOOLTIP"
              glib:nick="tooltip">
      </member>
      <member name="display_name"
              value="6"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DISPLAY_NAME"
              glib:nick="display-name">
      </member>
      <member name="minimum"
              value="7"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MINIMUM"
              glib:nick="minimum">
      </member>
      <member name="maximum"
              value="8"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MAXIMUM"
              glib:nick="maximum">
      </member>
      <member name="slope"
              value="9"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_SLOPE"
              glib:nick="slope">
      </member>
      <member name="increment"
              value="10"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_INCREMENT"
              glib:nick="increment">
      </member>
      <member name="is_linear"
              value="11"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_IS_LINEAR"
              glib:nick="is-linear">
      </member>
      <member name="representation"
              value="12"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_REPRESENTATION"
              glib:nick="representation">
      </member>
      <member name="display_notation"
              value="13"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DISPLAY_NOTATION"
              glib:nick="display-notation">
      </member>
      <member name="display_precision"
              value="14"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_DISPLAY_PRECISION"
              glib:nick="display-precision">
      </member>
      <member name="unit"
              value="15"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_UNIT"
              glib:nick="unit">
      </member>
      <member name="on_value"
              value="16"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ON_VALUE"
              glib:nick="on-value">
      </member>
      <member name="off_value"
              value="17"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_OFF_VALUE"
              glib:nick="off-value">
      </member>
      <member name="length"
              value="18"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_LENGTH"
              glib:nick="length">
      </member>
      <member name="formula"
              value="19"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA"
              glib:nick="formula">
      </member>
      <member name="formula_to"
              value="20"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA_TO"
              glib:nick="formula-to">
      </member>
      <member name="formula_from"
              value="21"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_FORMULA_FROM"
              glib:nick="formula-from">
      </member>
      <member name="expression"
              value="22"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_EXPRESSION"
              glib:nick="expression">
      </member>
      <member name="constant"
              value="23"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CONSTANT"
              glib:nick="constant">
      </member>
      <member name="access_mode"
              value="24"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ACCESS_MODE"
              glib:nick="access-mode">
      </member>
      <member name="imposed_access_mode"
              value="25"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_IMPOSED_ACCESS_MODE"
              glib:nick="imposed-access-mode">
      </member>
      <member name="cachable"
              value="26"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CACHABLE"
              glib:nick="cachable">
      </member>
      <member name="polling_time"
              value="27"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_POLLING_TIME"
              glib:nick="polling-time">
      </member>
      <member name="endianness"
              value="28"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_ENDIANNESS"
              glib:nick="endianness">
      </member>
      <member name="sign"
              value="29"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_SIGN"
              glib:nick="sign">
      </member>
      <member name="lsb"
              value="30"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_LSB"
              glib:nick="lsb">
      </member>
      <member name="msb"
              value="31"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_MSB"
              glib:nick="msb">
      </member>
      <member name="bit"
              value="32"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_BIT"
              glib:nick="bit">
      </member>
      <member name="command_value"
              value="33"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_COMMAND_VALUE"
              glib:nick="command-value">
      </member>
      <member name="chunk_id"
              value="34"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_CHUNK_ID"
              glib:nick="chunk-id">
      </member>
      <member name="event_id"
              value="35"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_EVENT_ID"
              glib:nick="event-id">
      </member>
      <member name="value_indexed"
              value="36"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_VALUE_INDEXED"
              glib:nick="value-indexed">
      </member>
      <member name="value_default"
              value="37"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_VALUE_DEFAULT"
              glib:nick="value-default">
      </member>
      <member name="p_unknonw"
              value="1000"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_UNKNONW"
              glib:nick="p-unknonw">
      </member>
      <member name="p_feature"
              value="1001"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_FEATURE"
              glib:nick="p-feature">
      </member>
      <member name="p_value"
              value="1002"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VALUE"
              glib:nick="p-value">
      </member>
      <member name="p_address"
              value="1003"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_ADDRESS"
              glib:nick="p-address">
      </member>
      <member name="p_is_implemented"
              value="1004"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_IMPLEMENTED"
              glib:nick="p-is-implemented">
      </member>
      <member name="p_is_locked"
              value="1005"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_LOCKED"
              glib:nick="p-is-locked">
      </member>
      <member name="p_is_available"
              value="1006"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_IS_AVAILABLE"
              glib:nick="p-is-available">
      </member>
      <member name="p_selected"
              value="1007"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_SELECTED"
              glib:nick="p-selected">
      </member>
      <member name="p_minimum"
              value="1008"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_MINIMUM"
              glib:nick="p-minimum">
      </member>
      <member name="p_maximum"
              value="1009"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_MAXIMUM"
              glib:nick="p-maximum">
      </member>
      <member name="p_increment"
              value="1010"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INCREMENT"
              glib:nick="p-increment">
      </member>
      <member name="p_index"
              value="1011"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INDEX"
              glib:nick="p-index">
      </member>
      <member name="p_length"
              value="1012"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_LENGTH"
              glib:nick="p-length">
      </member>
      <member name="p_port"
              value="1013"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_PORT"
              glib:nick="p-port">
      </member>
      <member name="p_variable"
              value="1014"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VARIABLE"
              glib:nick="p-variable">
      </member>
      <member name="p_invalidator"
              value="1015"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_INVALIDATOR"
              glib:nick="p-invalidator">
      </member>
      <member name="p_command_value"
              value="1016"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_COMMAND_VALUE"
              glib:nick="p-command-value">
      </member>
      <member name="p_value_indexed"
              value="1017"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VALUE_INDEXED"
              glib:nick="p-value-indexed">
      </member>
      <member name="p_value_default"
              value="1018"
              c:identifier="ARV_GC_PROPERTY_NODE_TYPE_P_VALUE_DEFAULT"
              glib:nick="p-value-default">
      </member>
    </enumeration>
    <interface name="GcRegister"
               c:symbol-prefix="gc_register"
               c:type="ArvGcRegister"
               glib:type-name="ArvGcRegister"
               glib:get-type="arv_gc_register_get_type"
               glib:type-struct="GcRegisterInterface">
      <source-position filename="../src/arvgcregister.h" line="44"/>
      <virtual-method name="get" invoker="get" throws="1">
        <source-position filename="../src/arvgcregister.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_address" invoker="get_address" throws="1">
        <source-position filename="../src/arvgcregister.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length" throws="1">
        <source-position filename="../src/arvgcregister.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set" invoker="set" throws="1">
        <source-position filename="../src/arvgcregister.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get" c:identifier="arv_gc_register_get" throws="1">
        <source-position filename="../src/arvgcregister.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_address"
              c:identifier="arv_gc_register_get_address"
              throws="1">
        <source-position filename="../src/arvgcregister.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="arv_gc_register_get_length"
              throws="1">
        <source-position filename="../src/arvgcregister.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="arv_gc_register_set" throws="1">
        <source-position filename="../src/arvgcregister.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_register" transfer-ownership="none">
            <type name="GcRegister" c:type="ArvGcRegister*"/>
          </instance-parameter>
          <parameter name="buffer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <class name="GcRegisterDescriptionNode"
           c:symbol-prefix="gc_register_description_node"
           c:type="ArvGcRegisterDescriptionNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcRegisterDescriptionNode"
           glib:get-type="arv_gc_register_description_node_get_type"
           glib:type-struct="GcRegisterDescriptionNodeClass">
      <source-position filename="../src/arvgcregisterdescriptionnode.h"
                       line="36"/>
      <constructor name="new"
                   c:identifier="arv_gc_register_description_node_new">
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="check_schema_version"
              c:identifier="arv_gc_register_description_node_check_schema_version"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="140">Checks if the Genicam document version is higher or equal to the given version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="149">True if document version is higher or equal than the given version.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="142">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
          <parameter name="required_major" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="143">required major version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="required_minor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="144">required minor version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="required_subminor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="145">required sub minor version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="compare_schema_version"
              c:identifier="arv_gc_register_description_node_compare_schema_version"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="100">Compare the Genicam document version to the given version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="109">-1 if document version is lower than the given version, 0 if equal and 1 if greater.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="102">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
          <parameter name="major" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="103">major version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="minor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="104">minor version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="subminor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="105">sub minor version number</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_major_version"
              c:identifier="arv_gc_register_description_node_get_major_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="201">Gets Genicam document major version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="207">Major version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="203">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minor_version"
              c:identifier="arv_gc_register_description_node_get_minor_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="220">Gets Genicam document minor version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="226">Minor version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="222">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model_name"
              c:identifier="arv_gc_register_description_node_get_model_name"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="163">Gets camera model name for given Genicam document.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="169">Model name string.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="165">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema_major_version"
              c:identifier="arv_gc_register_description_node_get_schema_major_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="258">Gets Genicam document schema major version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="264">Schema major version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="260">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema_minor_version"
              c:identifier="arv_gc_register_description_node_get_schema_minor_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="277">Gets Genicam document schema minor version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="283">Schema minor version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="279">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_schema_subminor_version"
              c:identifier="arv_gc_register_description_node_get_schema_subminor_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="296">Gets Genicam document schema sub minor version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="302">Schema sub minor version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="298">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subminor_version"
              c:identifier="arv_gc_register_description_node_get_subminor_version"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="239">Gets Genicam document sub minor version.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="245">Sub minor version.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="241">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_name"
              c:identifier="arv_gc_register_description_node_get_vendor_name"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgcregisterdescriptionnode.c"
             line="182">Gets camera vendor name for given Genicam document.</doc>
        <source-position filename="../src/arvgcregisterdescriptionnode.h"
                         line="49"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcregisterdescriptionnode.c"
               line="188">Vendor name string.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcregisterdescriptionnode.c"
                 line="184">a #ArvGcRegisterDescriptionNode</doc>
            <type name="GcRegisterDescriptionNode"
                  c:type="ArvGcRegisterDescriptionNode*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="GcRegisterDescriptionNodeClass"
            c:type="ArvGcRegisterDescriptionNodeClass"
            glib:is-gtype-struct-for="GcRegisterDescriptionNode">
      <source-position filename="../src/arvgcregisterdescriptionnode.h"
                       line="36"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <record name="GcRegisterInterface"
            c:type="ArvGcRegisterInterface"
            glib:is-gtype-struct-for="GcRegister">
      <source-position filename="../src/arvgcregister.h" line="44"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get">
        <callback name="get" throws="1">
          <source-position filename="../src/arvgcregister.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="void*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set">
        <callback name="set" throws="1">
          <source-position filename="../src/arvgcregister.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
            <parameter name="buffer"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="void*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_address">
        <callback name="get_address" throws="1">
          <source-position filename="../src/arvgcregister.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length" throws="1">
          <source-position filename="../src/arvgcregister.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_register" transfer-ownership="none">
              <type name="GcRegister" c:type="ArvGcRegister*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcRegisterNode"
           c:symbol-prefix="gc_register_node"
           c:type="ArvGcRegisterNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcRegisterNode"
           glib:get-type="arv_gc_register_node_get_type"
           glib:type-struct="GcRegisterNodeClass">
      <source-position filename="../src/arvgcregisternode.h" line="42"/>
      <implements name="GcRegister"/>
      <constructor name="new" c:identifier="arv_gc_register_node_new">
        <source-position filename="../src/arvgcregisternode.h" line="44"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
    </class>
    <record name="GcRegisterNodeClass"
            c:type="ArvGcRegisterNodeClass"
            glib:is-gtype-struct-for="GcRegisterNode">
      <source-position filename="../src/arvgcregisternode.h" line="42"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
      <field name="default_cachable">
        <type name="GcCachable" c:type="ArvGcCachable"/>
      </field>
    </record>
    <enumeration name="GcRepresentation"
                 version="0.8.0"
                 glib:type-name="ArvGcRepresentation"
                 glib:get-type="arv_gc_representation_get_type"
                 c:type="ArvGcRepresentation">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="134">Number representation formats.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_REPRESENTATION_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="136">undefined representation</doc>
      </member>
      <member name="linear"
              value="0"
              c:identifier="ARV_GC_REPRESENTATION_LINEAR"
              glib:nick="linear">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="137">number presented on linear scale (e.g. on a linear slider)</doc>
      </member>
      <member name="logarithmic"
              value="1"
              c:identifier="ARV_GC_REPRESENTATION_LOGARITHMIC"
              glib:nick="logarithmic">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="138">number presented on logarithmic scale (e.g. on a logarithmic slider)</doc>
      </member>
      <member name="boolean"
              value="2"
              c:identifier="ARV_GC_REPRESENTATION_BOOLEAN"
              glib:nick="boolean">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="139">binary choice (e.g. a checkbox)</doc>
      </member>
      <member name="pure_number"
              value="3"
              c:identifier="ARV_GC_REPRESENTATION_PURE_NUMBER"
              glib:nick="pure-number">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="140">number presented in an editable field (e.g. a spinbox)</doc>
      </member>
      <member name="hex_number"
              value="4"
              c:identifier="ARV_GC_REPRESENTATION_HEX_NUMBER"
              glib:nick="hex-number">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="141">number presented in hexadecimal format</doc>
      </member>
      <member name="ipv4_address"
              value="5"
              c:identifier="ARV_GC_REPRESENTATION_IPV4_ADDRESS"
              glib:nick="ipv4-address">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="142">IPv4 address</doc>
      </member>
      <member name="mac_address"
              value="6"
              c:identifier="ARV_GC_REPRESENTATION_MAC_ADDRESS"
              glib:nick="mac-address">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="143">MAC address</doc>
      </member>
    </enumeration>
    <interface name="GcSelector"
               c:symbol-prefix="gc_selector"
               c:type="ArvGcSelector"
               glib:type-name="ArvGcSelector"
               glib:get-type="arv_gc_selector_get_type"
               glib:type-struct="GcSelectorInterface">
      <source-position filename="../src/arvgcselector.h" line="41"/>
      <virtual-method name="get_selected_features"
                      invoker="get_selected_features"
                      version="0.8.0">
        <source-position filename="../src/arvgcselector.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcselector.c"
               line="60">a list of selected #ArvGcFeatureNode</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="GcFeatureNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="gc_selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcselector.c"
                 line="58">a #ArvGcSelector</doc>
            <type name="GcSelector" c:type="ArvGcSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_selected_features"
              c:identifier="arv_gc_selector_get_selected_features"
              version="0.8.0">
        <source-position filename="../src/arvgcselector.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcselector.c"
               line="60">a list of selected #ArvGcFeatureNode</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="GcFeatureNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="gc_selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcselector.c"
                 line="58">a #ArvGcSelector</doc>
            <type name="GcSelector" c:type="ArvGcSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_selector"
              c:identifier="arv_gc_selector_is_selector"
              version="0.8.0">
        <source-position filename="../src/arvgcselector.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcselector.c"
               line="43">%TRUE if this node is a selector, i.e. it has pSelected childs.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcselector.c"
                 line="41">a #ArvGcSelector</doc>
            <type name="GcSelector" c:type="ArvGcSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcSelectorInterface"
            c:type="ArvGcSelectorInterface"
            glib:is-gtype-struct-for="GcSelector">
      <source-position filename="../src/arvgcselector.h" line="41"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_selected_features">
        <callback name="get_selected_features">
          <source-position filename="../src/arvgcselector.h" line="40"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcselector.c"
                 line="60">a list of selected #ArvGcFeatureNode</doc>
            <type name="GLib.SList" c:type="const GSList*">
              <type name="GcFeatureNode"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="gc_selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcselector.c"
                   line="58">a #ArvGcSelector</doc>
              <type name="GcSelector" c:type="ArvGcSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="GcSignedness"
                 glib:type-name="ArvGcSignedness"
                 glib:get-type="arv_gc_signedness_get_type"
                 c:type="ArvGcSignedness">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="83">Specifies signedness of integer registers. Per standard Genicam internally uses signed 64-bit
signed integers for representing all integer registers. Therefore unsigned 64-bit integers are
not available.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_SIGNEDNESS_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="85">undefined sign</doc>
      </member>
      <member name="signed"
              value="0"
              c:identifier="ARV_GC_SIGNEDNESS_SIGNED"
              glib:nick="signed">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="86">signed integer</doc>
      </member>
      <member name="unsigned"
              value="1"
              c:identifier="ARV_GC_SIGNEDNESS_UNSIGNED"
              glib:nick="unsigned">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="87">unsigned integer</doc>
      </member>
    </enumeration>
    <interface name="GcString"
               c:symbol-prefix="gc_string"
               c:type="ArvGcString"
               glib:type-name="ArvGcString"
               glib:get-type="arv_gc_string_get_type"
               glib:type-struct="GcStringInterface">
      <source-position filename="../src/arvgcstring.h" line="43"/>
      <virtual-method name="get_max_length"
                      invoker="get_max_length"
                      throws="1">
        <source-position filename="../src/arvgcstring.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcstring.c"
               line="80">the maximum length @gc_string can store, excluding the NULL terminal character.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="77">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value" throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcstring.c"
             line="38">&lt;warning&gt;&lt;para&gt;Please note the string content is still owned by the @gc_string object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvgcstring.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcstring.c"
               line="45">the string value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="40">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value" throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcstring.c"
             line="57">Set @value as the new @gc_string value.</doc>
        <source-position filename="../src/arvgcstring.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="59">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="60">new string value</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_max_length"
              c:identifier="arv_gc_string_get_max_length"
              throws="1">
        <source-position filename="../src/arvgcstring.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcstring.c"
               line="80">the maximum length @gc_string can store, excluding the NULL terminal character.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="77">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="arv_gc_string_get_value"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcstring.c"
             line="38">&lt;warning&gt;&lt;para&gt;Please note the string content is still owned by the @gc_string object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <source-position filename="../src/arvgcstring.h" line="45"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgcstring.c"
               line="45">the string value.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="40">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value"
              c:identifier="arv_gc_string_set_value"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgcstring.c"
             line="57">Set @value as the new @gc_string value.</doc>
        <source-position filename="../src/arvgcstring.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gc_string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="59">an object implementing #ArvGcString</doc>
            <type name="GcString" c:type="ArvGcString*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="60">new string value</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcStringInterface"
            c:type="ArvGcStringInterface"
            glib:is-gtype-struct-for="GcString">
      <source-position filename="../src/arvgcstring.h" line="43"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value" throws="1">
          <source-position filename="../src/arvgcstring.h" line="40"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="45">the string value.</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcstring.c"
                   line="40">an object implementing #ArvGcString</doc>
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value" throws="1">
          <source-position filename="../src/arvgcstring.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcstring.c"
                   line="59">an object implementing #ArvGcString</doc>
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcstring.c"
                   line="60">new string value</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max_length">
        <callback name="get_max_length" throws="1">
          <source-position filename="../src/arvgcstring.h" line="42"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgcstring.c"
                 line="80">the maximum length @gc_string can store, excluding the NULL terminal character.</doc>
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvgcstring.c"
                   line="77">an object implementing #ArvGcString</doc>
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcStringRegNode"
           c:symbol-prefix="gc_string_reg_node"
           c:type="ArvGcStringRegNode"
           parent="GcRegisterNode"
           glib:type-name="ArvGcStringRegNode"
           glib:get-type="arv_gc_string_reg_node_get_type"
           glib:type-struct="GcStringRegNodeClass">
      <source-position filename="../src/arvgcstringregnode.h" line="39"/>
      <implements name="GcRegister"/>
      <implements name="GcString"/>
      <constructor name="new"
                   c:identifier="arv_gc_string_reg_node_new"
                   version="0.8.0">
        <source-position filename="../src/arvgcstringregnode.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcstringregnode.c"
               line="111">a new StringReg node</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcRegisterNode" c:type="ArvGcRegisterNode"/>
      </field>
    </class>
    <record name="GcStringRegNodeClass"
            c:type="ArvGcStringRegNodeClass"
            glib:is-gtype-struct-for="GcStringRegNode">
      <source-position filename="../src/arvgcstringregnode.h" line="39"/>
      <field name="parent_class">
        <type name="GcRegisterNodeClass" c:type="ArvGcRegisterNodeClass"/>
      </field>
    </record>
    <class name="GcStructEntryNode"
           c:symbol-prefix="gc_struct_entry_node"
           c:type="ArvGcStructEntryNode"
           parent="GcFeatureNode"
           glib:type-name="ArvGcStructEntryNode"
           glib:get-type="arv_gc_struct_entry_node_get_type"
           glib:type-struct="GcStructEntryNodeClass">
      <source-position filename="../src/arvgcstructentrynode.h" line="37"/>
      <implements name="GcInteger"/>
      <implements name="GcRegister"/>
      <constructor name="new" c:identifier="arv_gc_struct_entry_node_new">
        <source-position filename="../src/arvgcstructentrynode.h" line="39"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcstructentrynode.c"
               line="122">a newly created #ArvGcStructEntryNode.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="GcStructEntryNodeClass"
            c:type="ArvGcStructEntryNodeClass"
            glib:is-gtype-struct-for="GcStructEntryNode">
      <source-position filename="../src/arvgcstructentrynode.h" line="37"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcStructRegNode"
           c:symbol-prefix="gc_struct_reg_node"
           c:type="ArvGcStructRegNode"
           parent="GcRegisterNode"
           glib:type-name="ArvGcStructRegNode"
           glib:get-type="arv_gc_struct_reg_node_get_type"
           glib:type-struct="GcStructRegNodeClass">
      <source-position filename="../src/arvgcstructregnode.h" line="39"/>
      <implements name="GcRegister"/>
      <constructor name="new"
                   c:identifier="arv_gc_struct_reg_node_new"
                   version="0.8.0">
        <source-position filename="../src/arvgcstructregnode.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgcstructregnode.c"
               line="38">a new StructReg #ArvGcNode</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcRegisterNode" c:type="ArvGcRegisterNode"/>
      </field>
    </class>
    <record name="GcStructRegNodeClass"
            c:type="ArvGcStructRegNodeClass"
            glib:is-gtype-struct-for="GcStructRegNode">
      <source-position filename="../src/arvgcstructregnode.h" line="39"/>
      <field name="parent_class">
        <type name="GcRegisterNodeClass" c:type="ArvGcRegisterNodeClass"/>
      </field>
    </record>
    <class name="GcSwissKnife"
           c:symbol-prefix="gc_swiss_knife"
           c:type="ArvGcSwissKnife"
           parent="GcFeatureNode"
           abstract="1"
           glib:type-name="ArvGcSwissKnife"
           glib:get-type="arv_gc_swiss_knife_get_type"
           glib:type-struct="GcSwissKnifeClass">
      <source-position filename="../src/arvgcswissknife.h" line="41"/>
      <field name="parent_instance">
        <type name="GcFeatureNode" c:type="ArvGcFeatureNode"/>
      </field>
    </class>
    <record name="GcSwissKnifeClass"
            c:type="ArvGcSwissKnifeClass"
            glib:is-gtype-struct-for="GcSwissKnife">
      <source-position filename="../src/arvgcswissknife.h" line="41"/>
      <field name="parent_class">
        <type name="GcFeatureNodeClass" c:type="ArvGcFeatureNodeClass"/>
      </field>
    </record>
    <class name="GcSwissKnifeNode"
           c:symbol-prefix="gc_swiss_knife_node"
           c:type="ArvGcSwissKnifeNode"
           parent="GcSwissKnife"
           glib:type-name="ArvGcSwissKnifeNode"
           glib:get-type="arv_gc_swiss_knife_node_get_type"
           glib:type-struct="GcSwissKnifeNodeClass">
      <source-position filename="../src/arvgcswissknifenode.h" line="39"/>
      <implements name="GcFloat"/>
      <constructor name="new" c:identifier="arv_gc_swiss_knife_node_new">
        <source-position filename="../src/arvgcswissknifenode.h" line="41"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="GcSwissKnife" c:type="ArvGcSwissKnife"/>
      </field>
    </class>
    <record name="GcSwissKnifeNodeClass"
            c:type="ArvGcSwissKnifeNodeClass"
            glib:is-gtype-struct-for="GcSwissKnifeNode">
      <source-position filename="../src/arvgcswissknifenode.h" line="39"/>
      <field name="parent_class">
        <type name="GcSwissKnifeClass" c:type="ArvGcSwissKnifeClass"/>
      </field>
    </record>
    <class name="GcValueIndexedNode"
           c:symbol-prefix="gc_value_indexed_node"
           c:type="ArvGcValueIndexedNode"
           parent="GcPropertyNode"
           glib:type-name="ArvGcValueIndexedNode"
           glib:get-type="arv_gc_value_indexed_node_get_type"
           glib:type-struct="GcValueIndexedNodeClass">
      <source-position filename="../src/arvgcvalueindexednode.h" line="36"/>
      <constructor name="new" c:identifier="arv_gc_value_indexed_node_new">
        <source-position filename="../src/arvgcvalueindexednode.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_index"
              c:identifier="arv_gc_value_indexed_node_get_index">
        <source-position filename="../src/arvgcvalueindexednode.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="value_indexed_node"
                              transfer-ownership="none">
            <type name="GcValueIndexedNode" c:type="ArvGcValueIndexedNode*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="GcValueIndexedNodeClass"
            c:type="ArvGcValueIndexedNodeClass"
            glib:is-gtype-struct-for="GcValueIndexedNode">
      <source-position filename="../src/arvgcvalueindexednode.h" line="36"/>
      <field name="parent_class">
        <type name="GcPropertyNodeClass" c:type="ArvGcPropertyNodeClass"/>
      </field>
    </record>
    <enumeration name="GcVisibility"
                 glib:type-name="ArvGcVisibility"
                 glib:get-type="arv_gc_visibility_get_type"
                 c:type="ArvGcVisibility">
      <doc xml:space="preserve"
           filename="../src/arvgcenums.h"
           line="115">Specifies feature node recommended visibility in user interfaces.</doc>
      <member name="undefined"
              value="-1"
              c:identifier="ARV_GC_VISIBILITY_UNDEFINED"
              glib:nick="undefined">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="117">undefined feature visibility level</doc>
      </member>
      <member name="invisible"
              value="0"
              c:identifier="ARV_GC_VISIBILITY_INVISIBLE"
              glib:nick="invisible">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="118">feature should be not be visible in user interface</doc>
      </member>
      <member name="guru"
              value="1"
              c:identifier="ARV_GC_VISIBILITY_GURU"
              glib:nick="guru">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="119">very advanced feature to be shown to very experienced users</doc>
      </member>
      <member name="expert"
              value="2"
              c:identifier="ARV_GC_VISIBILITY_EXPERT"
              glib:nick="expert">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="120">advanced feature to be shown to expert users</doc>
      </member>
      <member name="beginner"
              value="3"
              c:identifier="ARV_GC_VISIBILITY_BEGINNER"
              glib:nick="beginner">
        <doc xml:space="preserve"
             filename="../src/arvgcenums.h"
             line="121">basic feature to be shown to all users</doc>
      </member>
    </enumeration>
    <class name="GvDevice"
           c:symbol-prefix="gv_device"
           c:type="ArvGvDevice"
           parent="Device"
           glib:type-name="ArvGvDevice"
           glib:get-type="arv_gv_device_get_type"
           glib:type-struct="GvDeviceClass">
      <source-position filename="../src/arvgvdevice.h" line="57"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="arv_gv_device_new"
                   version="0.8.0"
                   throws="1">
        <source-position filename="../src/arvgvdevice.h" line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="1285">a newly created #ArvDevice using GigE protocol</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="interface_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1281">address of the interface connected to the device</doc>
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="device_address" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1282">device address</doc>
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="auto_packet_size"
              c:identifier="arv_gv_device_auto_packet_size"
              version="0.6.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.c"
             line="681">Automatically determine the biggest packet size that can be used data streaming, and set GevSCPSPacketSize value
accordingly. This function relies on the GevSCPSFireTestPacket feature.</doc>
        <source-position filename="../src/arvgvdevice.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="689">The automatic packet size, in bytes, or the current one if GevSCPSFireTestPacket is not supported.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="683">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_address"
              c:identifier="arv_gv_device_get_device_address"
              version="0.2.0">
        <source-position filename="../src/arvgvdevice.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="1478">the device IP address.</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1476">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface_address"
              c:identifier="arv_gv_device_get_interface_address"
              version="0.2.0">
        <source-position filename="../src/arvgvdevice.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="1462">the device host interface IP address.</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1460">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_packet_size"
              c:identifier="arv_gv_device_get_packet_size"
              throws="1">
        <source-position filename="../src/arvgvdevice.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stream_options"
              c:identifier="arv_gv_device_get_stream_options"
              version="0.6.0">
        <source-position filename="../src/arvgvdevice.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="1244">options for stream creation</doc>
          <type name="GvStreamOption" c:type="ArvGvStreamOption"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1242">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timestamp_tick_frequency"
              c:identifier="arv_gv_device_get_timestamp_tick_frequency"
              throws="1">
        <source-position filename="../src/arvgvdevice.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_controller"
              c:identifier="arv_gv_device_is_controller"
              version="0.8.0">
        <source-position filename="../src/arvgvdevice.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="728">value indicating whether the ArvGvDevice has control access to the camera</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="726">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="leave_control"
              c:identifier="arv_gv_device_leave_control"
              version="0.8.3"
              throws="1">
        <source-position filename="../src/arvgvdevice.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="453">whether the control was successfully relinquished</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="450">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_packet_size"
              c:identifier="arv_gv_device_set_packet_size"
              throws="1">
        <source-position filename="../src/arvgvdevice.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_packet_size_adjustment"
              c:identifier="arv_gv_device_set_packet_size_adjustment"
              version="0.8.3">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.c"
             line="700">Sets the option for the packet size adjustment happening at stream object creation. See
arv_gv_device_auto_packet_size() for a description of the packet adjustment feature. The default behaviour is
@ARV_GV_PACKET_SIZE_ADJUSTEMENT_ON_FAILURE_ONCE, which means the packet size is adjusted if the current packet size
check fails, and only the first time arv_device_create_stream() is successfully called during @gv_device instance
life.</doc>
        <source-position filename="../src/arvgvdevice.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="702">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
          <parameter name="adjustment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="703">a #ArvGvPacketSizeAdjustment option</doc>
            <type name="GvPacketSizeAdjustment"
                  c:type="ArvGvPacketSizeAdjustment"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stream_options"
              c:identifier="arv_gv_device_set_stream_options"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.c"
             line="1259">Sets the option used during stream creation. It must be called before arv_device_create_stream().</doc>
        <source-position filename="../src/arvgvdevice.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1261">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="1262">options for stream creation</doc>
            <type name="GvStreamOption" c:type="ArvGvStreamOption"/>
          </parameter>
        </parameters>
      </method>
      <method name="take_control"
              c:identifier="arv_gv_device_take_control"
              version="0.8.3"
              throws="1">
        <source-position filename="../src/arvgvdevice.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvdevice.c"
               line="424">whether the control was successfully acquired</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvdevice.c"
                 line="421">a #ArvGvDevice</doc>
            <type name="GvDevice" c:type="ArvGvDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="device-address"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gio.InetAddress"/>
      </property>
      <property name="interface-address"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gio.InetAddress"/>
      </property>
      <property name="packet-size-adjustment"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="GvPacketSizeAdjustment"/>
      </property>
    </class>
    <record name="GvDeviceClass"
            c:type="ArvGvDeviceClass"
            glib:is-gtype-struct-for="GvDevice">
      <source-position filename="../src/arvgvdevice.h" line="57"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <class name="GvFakeCamera"
           c:symbol-prefix="gv_fake_camera"
           c:type="ArvGvFakeCamera"
           parent="GObject.Object"
           glib:type-name="ArvGvFakeCamera"
           glib:get-type="arv_gv_fake_camera_get_type"
           glib:type-struct="GvFakeCameraClass">
      <doc xml:space="preserve"
           filename="../src/arvgvfakecamera.c"
           line="32">#ArvGvFakeCamera is a class that simulates a real GigEVision camera.</doc>
      <source-position filename="../src/arvgvfakecamera.h" line="38"/>
      <constructor name="new"
                   c:identifier="arv_gv_fake_camera_new"
                   version="0.8.0">
        <source-position filename="../src/arvgvfakecamera.h" line="40"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgvfakecamera.c"
               line="628">a new #ArvGvFakeCamera</doc>
          <type name="GvFakeCamera" c:type="ArvGvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="interface_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="625">listening network interface ('lo' by default)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="serial_number"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="626">fake device serial number ('GV01' by default)</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="arv_gv_fake_camera_new_full"
                   version="0.8.0">
        <source-position filename="../src/arvgvfakecamera.h" line="41"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvgvfakecamera.c"
               line="606">a new #ArvGvFakeCamera</doc>
          <type name="GvFakeCamera" c:type="ArvGvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="interface_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="602">listening network interface, default is lo</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="serial_number"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="603">fake device serial number, default is GV01</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="genicam_filename"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="604">path to alternative genicam data</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fake_camera"
              c:identifier="arv_gv_fake_camera_get_fake_camera"
              version="0.8.0">
        <doc xml:space="preserve"
             filename="../src/arvgvfakecamera.c"
             line="667">Retrieves the underlying #ArvFakeCamera object owned by @gv_fake_camera.</doc>
        <source-position filename="../src/arvgvfakecamera.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvfakecamera.c"
               line="673">underlying fake camera object.</doc>
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_fake_camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="669">a #ArvGvFakeCamera</doc>
            <type name="GvFakeCamera" c:type="ArvGvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_running"
              c:identifier="arv_gv_fake_camera_is_running"
              version="0.8.0">
        <source-position filename="../src/arvgvfakecamera.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvfakecamera.c"
               line="690">%TRUE if the fake camera is correctly listening on the GVCP port</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_fake_camera" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvfakecamera.c"
                 line="688">a #ArvGvFakeCamera</doc>
            <type name="GvFakeCamera" c:type="ArvGvFakeCamera*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="genicam-filename"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="gvsp-lost-ratio"
                readable="0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="interface-name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="serial-number"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="GvFakeCameraClass"
            c:type="ArvGvFakeCameraClass"
            glib:is-gtype-struct-for="GvFakeCamera">
      <source-position filename="../src/arvgvfakecamera.h" line="38"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="GvInterface"
           c:symbol-prefix="gv_interface"
           c:type="ArvGvInterface"
           parent="Interface"
           glib:type-name="ArvGvInterface"
           glib:get-type="arv_gv_interface_get_type"
           glib:type-struct="GvInterfaceClass">
      <source-position filename="../src/arvgvinterface.h" line="36"/>
      <function name="get_instance"
                c:identifier="arv_gv_interface_get_instance">
        <doc xml:space="preserve"
             filename="../src/arvgvinterface.c"
             line="686">Gets the unique instance of the GV interface.</doc>
        <source-position filename="../src/arvgvinterface.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvgvinterface.c"
               line="691">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
    </class>
    <record name="GvInterfaceClass"
            c:type="ArvGvInterfaceClass"
            glib:is-gtype-struct-for="GvInterface">
      <source-position filename="../src/arvgvinterface.h" line="36"/>
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <enumeration name="GvPacketSizeAdjustment"
                 glib:type-name="ArvGvPacketSizeAdjustment"
                 glib:get-type="arv_gv_packet_size_adjustment_get_type"
                 c:type="ArvGvPacketSizeAdjustment">
      <member name="never"
              value="0"
              c:identifier="ARV_GV_PACKET_SIZE_ADJUSTMENT_NEVER"
              glib:nick="never">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.h"
             line="39">never adjust packet size</doc>
      </member>
      <member name="on_failure_once"
              value="1"
              c:identifier="ARV_GV_PACKET_SIZE_ADJUSTMENT_ON_FAILURE_ONCE"
              glib:nick="on-failure-once">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.h"
             line="40">adjust packet size if test packet check fails the with current
packet size, only on the first stream creation</doc>
      </member>
      <member name="on_failure"
              value="2"
              c:identifier="ARV_GV_PACKET_SIZE_ADJUSTMENT_ON_FAILURE"
              glib:nick="on-failure">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.h"
             line="42">adjust packet size if test packet check fails with current packet size</doc>
      </member>
      <member name="once"
              value="3"
              c:identifier="ARV_GV_PACKET_SIZE_ADJUSTMENT_ONCE"
              glib:nick="once">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.h"
             line="43">adjust packet size on the first stream creation</doc>
      </member>
      <member name="always"
              value="4"
              c:identifier="ARV_GV_PACKET_SIZE_ADJUSTMENT_ALWAYS"
              glib:nick="always">
        <doc xml:space="preserve"
             filename="../src/arvgvdevice.h"
             line="44">always adjust the stream packet size</doc>
      </member>
    </enumeration>
    <class name="GvStream"
           c:symbol-prefix="gv_stream"
           c:type="ArvGvStream"
           parent="Stream"
           glib:type-name="ArvGvStream"
           glib:get-type="arv_gv_stream_get_type"
           glib:type-struct="GvStreamClass">
      <source-position filename="../src/arvgvstream.h" line="69"/>
      <implements name="Gio.Initable"/>
      <method name="get_port" c:identifier="arv_gv_stream_get_port">
        <source-position filename="../src/arvgvstream.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_stream" transfer-ownership="none">
            <type name="GvStream" c:type="ArvGvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_statistics"
              c:identifier="arv_gv_stream_get_statistics">
        <source-position filename="../src/arvgvstream.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gv_stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvgvstream.c"
                 line="1214">a #ArvGvStream</doc>
            <type name="GvStream" c:type="ArvGvStream*"/>
          </instance-parameter>
          <parameter name="n_resent_packets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_missing_packets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <property name="frame-retention" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="packet-request-ratio"
                writable="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="packet-resend" writable="1" transfer-ownership="none">
        <type name="GvStreamPacketResend"/>
      </property>
      <property name="packet-timeout" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="socket-buffer" writable="1" transfer-ownership="none">
        <type name="GvStreamSocketBuffer"/>
      </property>
      <property name="socket-buffer-size"
                writable="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="GvStreamClass"
            c:type="ArvGvStreamClass"
            glib:is-gtype-struct-for="GvStream">
      <source-position filename="../src/arvgvstream.h" line="69"/>
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <enumeration name="GvStreamOption"
                 glib:type-name="ArvGvStreamOption"
                 glib:get-type="arv_gv_stream_option_get_type"
                 c:type="ArvGvStreamOption">
      <member name="none"
              value="0"
              c:identifier="ARV_GV_STREAM_OPTION_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="37">no option specified</doc>
      </member>
      <member name="packet_socket_disabled"
              value="1"
              c:identifier="ARV_GV_STREAM_OPTION_PACKET_SOCKET_DISABLED"
              glib:nick="packet-socket-disabled">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="38">use of packet socket is disabled</doc>
      </member>
    </enumeration>
    <enumeration name="GvStreamPacketResend"
                 glib:type-name="ArvGvStreamPacketResend"
                 glib:get-type="arv_gv_stream_packet_resend_get_type"
                 c:type="ArvGvStreamPacketResend">
      <member name="never"
              value="0"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_NEVER"
              glib:nick="never">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="59">never request a packet resend</doc>
      </member>
      <member name="always"
              value="1"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_ALWAYS"
              glib:nick="always">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="60">request a packet resend if a packet was missing</doc>
      </member>
    </enumeration>
    <enumeration name="GvStreamSocketBuffer"
                 glib:type-name="ArvGvStreamSocketBuffer"
                 glib:get-type="arv_gv_stream_socket_buffer_get_type"
                 c:type="ArvGvStreamSocketBuffer">
      <member name="fixed"
              value="0"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_FIXED"
              glib:nick="fixed">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="48">socket buffer is set to a given fixed value</doc>
      </member>
      <member name="auto"
              value="1"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_AUTO"
              glib:nick="auto">
        <doc xml:space="preserve"
             filename="../src/arvgvstream.h"
             line="49">sockect buffer is set with respect to the payload size</doc>
      </member>
    </enumeration>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="ArvInterface"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvInterface"
           glib:get-type="arv_interface_get_type"
           glib:type-struct="InterfaceClass">
      <doc xml:space="preserve"
           filename="../src/arvinterface.c"
           line="23">#ArvInterface is an abstract base class for camera discovery. It maintains a
list of the available devices and helps to instantiate the corresponding
#ArvDevice objects. If the user already knows the device id of the device, he should
not worry about this class and just use arv_camera_new() or
arv_open_device().</doc>
      <source-position filename="../src/arvinterface.h" line="45"/>
      <virtual-method name="open_device"
                      invoker="open_device"
                      version="0.2.0"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="317">Creates a new #ArvDevice object corresponding to the given device id string.
The first available device is returned if @device_id is %NULL.</doc>
        <source-position filename="../src/arvinterface.h" line="42"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="326">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="319">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="320">device unique id</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_device_list" introspectable="0">
        <source-position filename="../src/arvinterface.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_ids" transfer-ownership="none">
            <array name="GLib.Array" c:type="GArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_device_address"
              c:identifier="arv_interface_get_device_address"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="176">queries the device address (IP address in the case of an ethernet camera). Useful
for constructing manual connections to devices using @arv_gv_device_new

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="187">the device address</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="178">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="179">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="arv_interface_get_device_id"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="118">Queries the unique device id corresponding to index.  Prior to this
call the arv_interface_update_device_list() function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="126">a unique device id</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="120">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="121">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_model"
              c:identifier="arv_interface_get_device_model"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="235">Queries the device model.

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="245">the device model, NULL on error</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="237">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="238">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_physical_id"
              c:identifier="arv_interface_get_device_physical_id"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="145">Queries the physical device id corresponding to index such
as the MAC address for Ethernet based devices, bus id for PCI,
USB or Firewire based devices.

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="157">a physical device id</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="147">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="148">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_protocol"
              c:identifier="arv_interface_get_device_protocol"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="293">Queries the device protocol. Possible values are 'USB3Vision', 'GigEVision'
and 'Fake'.

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="304">the device protocol as a string, NULL on error</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="295">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="296">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_serial_nbr"
              c:identifier="arv_interface_get_device_serial_nbr"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="264">Queries the device serial.

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="274">the device serial, NULL on error</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="266">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="267">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_vendor"
              c:identifier="arv_interface_get_device_vendor"
              version="0.6.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="206">Queries the device vendor.

Prior to this call the arv_interface_update_device_list()
function must be called.</doc>
        <source-position filename="../src/arvinterface.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="216">the device vendor, NULL on error</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="208">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="209">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_devices"
              c:identifier="arv_interface_get_n_devices"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="94">Queries the number of available devices on this interface. Prior to this
call the @arv_interface_update_device_list function must be called. The list content will not
change until the next call of the update function.</doc>
        <source-position filename="../src/arvinterface.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="102">the number of available devices</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="96">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open_device"
              c:identifier="arv_interface_open_device"
              version="0.2.0"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="317">Creates a new #ArvDevice object corresponding to the given device id string.
The first available device is returned if @device_id is %NULL.</doc>
        <source-position filename="../src/arvinterface.h" line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvinterface.c"
               line="326">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="319">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
          <parameter name="device_id"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="320">device unique id</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_device_list"
              c:identifier="arv_interface_update_device_list"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvinterface.c"
             line="71">Updates the internal list of available devices. This may change the
connection between a list index and a device ID.</doc>
        <source-position filename="../src/arvinterface.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="73">a #ArvInterface</doc>
            <type name="Interface" c:type="ArvInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="InterfaceClass"
            c:type="ArvInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <source-position filename="../src/arvinterface.h" line="45"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="update_device_list" introspectable="0">
        <callback name="update_device_list" introspectable="0">
          <source-position filename="../src/arvinterface.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_ids" transfer-ownership="none">
              <array name="GLib.Array" c:type="GArray*">
                <type name="gpointer" c:type="gpointer"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_device">
        <callback name="open_device" throws="1">
          <source-position filename="../src/arvinterface.h" line="42"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvinterface.c"
                 line="326">a new #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvinterface.c"
                   line="319">a #ArvInterface</doc>
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_id"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvinterface.c"
                   line="320">device unique id</doc>
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="protocol">
        <type name="utf8" c:type="const char*"/>
      </field>
    </record>
    <constant name="PIXEL_FORMAT_BAYER_BG_10"
              value="17825807"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_10">
      <source-position filename="../src/arvenums.h" line="131"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_10P"
              value="17432658"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_10P">
      <source-position filename="../src/arvenums.h" line="143"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_10_PACKED"
              value="17563689"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_10_PACKED">
      <source-position filename="../src/arvenums.h" line="161"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_12"
              value="17825811"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_12">
      <source-position filename="../src/arvenums.h" line="136"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_12P"
              value="17563731"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_12P">
      <source-position filename="../src/arvenums.h" line="148"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_12_PACKED"
              value="17563693"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_12_PACKED">
      <source-position filename="../src/arvenums.h" line="156"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_16"
              value="17825841"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_16">
      <source-position filename="../src/arvenums.h" line="141"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_BG_8"
              value="17301515"
              c:type="ARV_PIXEL_FORMAT_BAYER_BG_8">
      <source-position filename="../src/arvenums.h" line="126"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_10"
              value="17825806"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_10">
      <source-position filename="../src/arvenums.h" line="130"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_10P"
              value="17432660"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_10P">
      <source-position filename="../src/arvenums.h" line="144"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_10_PACKED"
              value="17563688"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_10_PACKED">
      <source-position filename="../src/arvenums.h" line="160"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_12"
              value="17825810"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_12">
      <source-position filename="../src/arvenums.h" line="135"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_12P"
              value="17563733"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_12P">
      <source-position filename="../src/arvenums.h" line="149"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_12_PACKED"
              value="17563692"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_12_PACKED">
      <source-position filename="../src/arvenums.h" line="155"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_16"
              value="17825840"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_16">
      <source-position filename="../src/arvenums.h" line="140"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GB_8"
              value="17301514"
              c:type="ARV_PIXEL_FORMAT_BAYER_GB_8">
      <source-position filename="../src/arvenums.h" line="125"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_10"
              value="17825804"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_10">
      <source-position filename="../src/arvenums.h" line="128"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_10P"
              value="17432662"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_10P">
      <source-position filename="../src/arvenums.h" line="145"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_10_PACKED"
              value="17563686"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_10_PACKED">
      <source-position filename="../src/arvenums.h" line="158"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_12"
              value="17825808"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_12">
      <source-position filename="../src/arvenums.h" line="133"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_12P"
              value="17563735"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_12P">
      <source-position filename="../src/arvenums.h" line="150"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_12_PACKED"
              value="17563690"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_12_PACKED">
      <source-position filename="../src/arvenums.h" line="153"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_16"
              value="17825838"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_16">
      <source-position filename="../src/arvenums.h" line="138"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_GR_8"
              value="17301512"
              c:type="ARV_PIXEL_FORMAT_BAYER_GR_8">
      <source-position filename="../src/arvenums.h" line="123"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_10"
              value="17825805"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_10">
      <source-position filename="../src/arvenums.h" line="129"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_10P"
              value="17432664"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_10P">
      <source-position filename="../src/arvenums.h" line="146"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_10_PACKED"
              value="17563687"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_10_PACKED">
      <source-position filename="../src/arvenums.h" line="159"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_12"
              value="17825809"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_12">
      <source-position filename="../src/arvenums.h" line="134"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_12P"
              value="17563737"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_12P">
      <source-position filename="../src/arvenums.h" line="151"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_12_PACKED"
              value="17563691"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_12_PACKED">
      <source-position filename="../src/arvenums.h" line="154"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_16"
              value="17825839"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_16">
      <source-position filename="../src/arvenums.h" line="139"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BAYER_RG_8"
              value="17301513"
              c:type="ARV_PIXEL_FORMAT_BAYER_RG_8">
      <source-position filename="../src/arvenums.h" line="124"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGRA_8_PACKED"
              value="35651607"
              c:type="ARV_PIXEL_FORMAT_BGRA_8_PACKED">
      <source-position filename="../src/arvenums.h" line="169"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_10_PACKED"
              value="36700185"
              c:type="ARV_PIXEL_FORMAT_BGR_10_PACKED">
      <source-position filename="../src/arvenums.h" line="172"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_12_PACKED"
              value="36700187"
              c:type="ARV_PIXEL_FORMAT_BGR_12_PACKED">
      <source-position filename="../src/arvenums.h" line="175"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_BGR_8_PACKED"
              value="35127317"
              c:type="ARV_PIXEL_FORMAT_BGR_8_PACKED">
      <source-position filename="../src/arvenums.h" line="166"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <function-macro name="PIXEL_FORMAT_BIT_PER_PIXEL"
                    c:identifier="ARV_PIXEL_FORMAT_BIT_PER_PIXEL"
                    introspectable="0">
      <source-position filename="../src/arvenums.h" line="106"/>
      <parameters>
        <parameter name="pixel_format">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED"
              value="2165047300"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED">
      <source-position filename="../src/arvenums.h" line="197"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_BG_16"
              value="2165309449"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_16">
      <source-position filename="../src/arvenums.h" line="202"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED"
              value="2165047299"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED">
      <source-position filename="../src/arvenums.h" line="196"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GB_16"
              value="2165309448"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_16">
      <source-position filename="../src/arvenums.h" line="201"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED"
              value="2165047297"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED">
      <source-position filename="../src/arvenums.h" line="194"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_GR_16"
              value="2165309446"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_16">
      <source-position filename="../src/arvenums.h" line="199"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED"
              value="2165047298"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED">
      <source-position filename="../src/arvenums.h" line="195"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_BAYER_RG_16"
              value="2165309447"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_16">
      <source-position filename="../src/arvenums.h" line="200"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_CUSTOM_YUV_422_YUYV_PACKED"
              value="2182086661"
              c:type="ARV_PIXEL_FORMAT_CUSTOM_YUV_422_YUYV_PACKED">
      <source-position filename="../src/arvenums.h" line="198"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_10"
              value="17825795"
              c:type="ARV_PIXEL_FORMAT_MONO_10">
      <source-position filename="../src/arvenums.h" line="113"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_10_PACKED"
              value="17563652"
              c:type="ARV_PIXEL_FORMAT_MONO_10_PACKED">
      <source-position filename="../src/arvenums.h" line="114"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_12"
              value="17825797"
              c:type="ARV_PIXEL_FORMAT_MONO_12">
      <source-position filename="../src/arvenums.h" line="116"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_12_PACKED"
              value="17563654"
              c:type="ARV_PIXEL_FORMAT_MONO_12_PACKED">
      <source-position filename="../src/arvenums.h" line="117"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_14"
              value="17825829"
              c:type="ARV_PIXEL_FORMAT_MONO_14">
      <source-position filename="../src/arvenums.h" line="119"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_16"
              value="17825799"
              c:type="ARV_PIXEL_FORMAT_MONO_16">
      <source-position filename="../src/arvenums.h" line="121"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_8"
              value="17301505"
              c:type="ARV_PIXEL_FORMAT_MONO_8">
      <source-position filename="../src/arvenums.h" line="110"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_MONO_8_SIGNED"
              value="17301506"
              c:type="ARV_PIXEL_FORMAT_MONO_8_SIGNED">
      <source-position filename="../src/arvenums.h" line="111"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGBA_8_PACKED"
              value="35651606"
              c:type="ARV_PIXEL_FORMAT_RGBA_8_PACKED">
      <source-position filename="../src/arvenums.h" line="168"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_10_PACKED"
              value="36700184"
              c:type="ARV_PIXEL_FORMAT_RGB_10_PACKED">
      <source-position filename="../src/arvenums.h" line="171"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_10_PLANAR"
              value="36700194"
              c:type="ARV_PIXEL_FORMAT_RGB_10_PLANAR">
      <source-position filename="../src/arvenums.h" line="182"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_12_PACKED"
              value="36700186"
              c:type="ARV_PIXEL_FORMAT_RGB_12_PACKED">
      <source-position filename="../src/arvenums.h" line="174"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_12_PLANAR"
              value="36700195"
              c:type="ARV_PIXEL_FORMAT_RGB_12_PLANAR">
      <source-position filename="../src/arvenums.h" line="183"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_16_PLANAR"
              value="36700196"
              c:type="ARV_PIXEL_FORMAT_RGB_16_PLANAR">
      <source-position filename="../src/arvenums.h" line="184"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_8_PACKED"
              value="35127316"
              c:type="ARV_PIXEL_FORMAT_RGB_8_PACKED">
      <source-position filename="../src/arvenums.h" line="165"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_RGB_8_PLANAR"
              value="35127329"
              c:type="ARV_PIXEL_FORMAT_RGB_8_PLANAR">
      <source-position filename="../src/arvenums.h" line="181"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_411_PACKED"
              value="34340894"
              c:type="ARV_PIXEL_FORMAT_YUV_411_PACKED">
      <source-position filename="../src/arvenums.h" line="177"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_422_PACKED"
              value="34603039"
              c:type="ARV_PIXEL_FORMAT_YUV_422_PACKED">
      <source-position filename="../src/arvenums.h" line="178"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_422_YUYV_PACKED"
              value="34603058"
              c:type="ARV_PIXEL_FORMAT_YUV_422_YUYV_PACKED">
      <source-position filename="../src/arvenums.h" line="186"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <constant name="PIXEL_FORMAT_YUV_444_PACKED"
              value="35127328"
              c:type="ARV_PIXEL_FORMAT_YUV_444_PACKED">
      <source-position filename="../src/arvenums.h" line="179"/>
      <type name="PixelFormat" c:type="ArvPixelFormat"/>
    </constant>
    <enumeration name="RangeCheckPolicy"
                 version="0.8.6"
                 glib:type-name="ArvRangeCheckPolicy"
                 glib:get-type="arv_range_check_policy_get_type"
                 c:type="ArvRangeCheckPolicy">
      <member name="disable"
              value="0"
              c:identifier="ARV_RANGE_CHECK_POLICY_DISABLE"
              glib:nick="disable">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="75">never check if float or integer node value is in min/max range</doc>
      </member>
      <member name="enable"
              value="1"
              c:identifier="ARV_RANGE_CHECK_POLICY_ENABLE"
              glib:nick="enable">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="76">always check if if float or integer node is in min/max range</doc>
      </member>
      <member name="default"
              value="0"
              c:identifier="ARV_RANGE_CHECK_POLICY_DEFAULT"
              glib:nick="default">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="77">default range check policy</doc>
      </member>
    </enumeration>
    <enumeration name="RegisterCachePolicy"
                 version="0.8.0"
                 glib:type-name="ArvRegisterCachePolicy"
                 glib:get-type="arv_register_cache_policy_get_type"
                 c:type="ArvRegisterCachePolicy">
      <member name="disable"
              value="0"
              c:identifier="ARV_REGISTER_CACHE_POLICY_DISABLE"
              glib:nick="disable">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="58">disable register caching</doc>
      </member>
      <member name="enable"
              value="1"
              c:identifier="ARV_REGISTER_CACHE_POLICY_ENABLE"
              glib:nick="enable">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="59">enable register caching</doc>
      </member>
      <member name="debug"
              value="2"
              c:identifier="ARV_REGISTER_CACHE_POLICY_DEBUG"
              glib:nick="debug">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="60">enable register caching, but read the acual register value for comparison</doc>
      </member>
      <member name="default"
              value="0"
              c:identifier="ARV_REGISTER_CACHE_POLICY_DEFAULT"
              glib:nick="default">
        <doc xml:space="preserve"
             filename="../src/arvgc.h"
             line="61">default cache policy</doc>
      </member>
    </enumeration>
    <class name="Stream"
           c:symbol-prefix="stream"
           c:type="ArvStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvStream"
           glib:get-type="arv_stream_get_type"
           glib:type-struct="StreamClass">
      <doc xml:space="preserve"
           filename="../src/arvstream.c"
           line="23">#ArvStream provides an abstract base class for the implementation of video
stream reception threads. The interface between the reception thread and the
main thread is done using asynchronous queues, containing #ArvBuffer
objects.</doc>
      <source-position filename="../src/arvstream.h" line="64"/>
      <implements name="Gio.Initable"/>
      <virtual-method name="get_statistics"
                      invoker="get_statistics"
                      version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="321">An accessor to the stream statistics.</doc>
        <source-position filename="../src/arvstream.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="323">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="324">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="325">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="326">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_buffer">
        <source-position filename="../src/arvstream.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_thread"
                      invoker="start_thread"
                      version="0.6.2">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="239">Start the stream receiving thread. The thread is automatically started when
the #ArvStream object is instantiated, so this function is only useful if
the thread was stopped using @arv_stream_stop_thread.</doc>
        <source-position filename="../src/arvstream.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="241">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_thread">
        <source-position filename="../src/arvstream.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_emit_signals"
              c:identifier="arv_stream_get_emit_signals"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="386">Check if stream will emit its signals.</doc>
        <source-position filename="../src/arvstream.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvstream.c"
               line="392">%TRUE if @stream is emiting its signals.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="388">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_buffers"
              c:identifier="arv_stream_get_n_buffers"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="209">An accessor to the stream buffer queue lengths.</doc>
        <source-position filename="../src/arvstream.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="211">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_input_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="212">input queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="n_output_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="213">output queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_statistics"
              c:identifier="arv_stream_get_statistics"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="321">An accessor to the stream statistics.</doc>
        <source-position filename="../src/arvstream.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="323">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="324">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="325">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="326">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_buffer"
              c:identifier="arv_stream_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="97">Pops a buffer from the output queue of @stream. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This function blocks until a buffer is available.

This method is thread safe.</doc>
        <source-position filename="../src/arvstream.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvstream.c"
               line="107">a #ArvBuffer</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="99">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_buffer"
              c:identifier="arv_stream_push_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="73">Pushes a #ArvBuffer to the @stream thread. The @stream takes ownership of @buffer,
and will free all the buffers still in its queues when destroyed.

This method is thread safe.</doc>
        <source-position filename="../src/arvstream.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="75">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="76">buffer to push</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_emit_signals"
              c:identifier="arv_stream_set_emit_signals"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="360">Make @stream emit signals. This option is
by default disabled because signal emission is expensive and unneeded when
the application prefers to operate in pull mode.</doc>
        <source-position filename="../src/arvstream.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="362">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="emit_signals" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="363">the new state</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_thread"
              c:identifier="arv_stream_start_thread"
              version="0.6.2">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="239">Start the stream receiving thread. The thread is automatically started when
the #ArvStream object is instantiated, so this function is only useful if
the thread was stopped using @arv_stream_stop_thread.</doc>
        <source-position filename="../src/arvstream.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="241">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop_thread"
              c:identifier="arv_stream_stop_thread"
              version="0.6.2">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="263">Stop the stream receiving thread, and optionally delete all the #ArvBuffer
stored in the stream object queues. Main use of this function is to be able
to quickly change an acquisition parameter that changes the payload size,
without deleting/recreating the stream object.</doc>
        <source-position filename="../src/arvstream.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvstream.c"
               line="273">the number of deleted buffers if @delete_buffers == %TRUE, 0 otherwise.</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="265">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="delete_buffers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="266">enable buffer deletion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="timeout_pop_buffer"
              c:identifier="arv_stream_timeout_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="147">Pops a buffer from the output queue of @stream, waiting no more than @timeout. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.

This method is thread safe.</doc>
        <source-position filename="../src/arvstream.h" line="71"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvstream.c"
               line="157">a #ArvBuffer, NULL if no buffer is available until the timeout occurs.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="149">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="150">timeout, in µs</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_pop_buffer"
              c:identifier="arv_stream_try_pop_buffer"
              version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="122">Pops a buffer from the output queue of @stream. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This is the non blocking version of pop_buffer.

This method is thread safe.</doc>
        <source-position filename="../src/arvstream.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvstream.c"
               line="132">a #ArvBuffer, NULL if no buffer is available.</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvstream.c"
                 line="124">a #ArvStream</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="callback"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="callback-data"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="device"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Device"/>
      </property>
      <property name="emit-signals" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="new-buffer" when="last" version="0.2.0">
        <doc xml:space="preserve"
             filename="../src/arvstream.c"
             line="541">Signal that a new buffer is available.

This signal is emited from the stream receive thread and only when the
"emit-signals" property is %TRUE.

The new buffer can be retrieved with arv_stream_pop_buffer().

Note that this signal is only emited when the "emit-signals" property is
set to %TRUE, which it is not by default for performance reasons.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <callback name="StreamCallback" c:type="ArvStreamCallback">
      <source-position filename="../src/arvstream.h" line="66"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="0">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="StreamCallbackType" c:type="ArvStreamCallbackType"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="StreamCallbackType"
                 glib:type-name="ArvStreamCallbackType"
                 glib:get-type="arv_stream_callback_type_get_type"
                 c:type="ArvStreamCallbackType">
      <doc xml:space="preserve"
           filename="../src/arvstream.h"
           line="34">Describes when the stream callback is called.</doc>
      <member name="init"
              value="0"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_INIT"
              glib:nick="init">
        <doc xml:space="preserve"
             filename="../src/arvstream.h"
             line="36">thread initialization, happens once</doc>
      </member>
      <member name="exit"
              value="1"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_EXIT"
              glib:nick="exit">
        <doc xml:space="preserve"
             filename="../src/arvstream.h"
             line="37">thread end, happens once</doc>
      </member>
      <member name="start_buffer"
              value="2"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_START_BUFFER"
              glib:nick="start-buffer">
        <doc xml:space="preserve"
             filename="../src/arvstream.h"
             line="38">buffer filling start, happens at each frame</doc>
      </member>
      <member name="buffer_done"
              value="3"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_BUFFER_DONE"
              glib:nick="buffer-done">
        <doc xml:space="preserve"
             filename="../src/arvstream.h"
             line="39">buffer filled, happens at each frame</doc>
      </member>
    </enumeration>
    <record name="StreamClass"
            c:type="ArvStreamClass"
            glib:is-gtype-struct-for="Stream">
      <source-position filename="../src/arvstream.h" line="64"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="start_thread">
        <callback name="start_thread">
          <source-position filename="../src/arvstream.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvstream.c"
                   line="241">a #ArvStream</doc>
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_thread">
        <callback name="stop_thread">
          <source-position filename="../src/arvstream.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_statistics">
        <callback name="get_statistics">
          <source-position filename="../src/arvstream.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/arvstream.c"
                   line="323">a #ArvStream</doc>
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
            <parameter name="n_completed_buffers"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvstream.c"
                   line="324">number of complete received buffers</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_failures"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvstream.c"
                   line="325">number of reception failures</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_underruns"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../src/arvstream.c"
                   line="326">number of input buffer underruns</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_buffer">
        <callback name="new_buffer">
          <source-position filename="../src/arvstream.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="UvDevice"
           c:symbol-prefix="uv_device"
           c:type="ArvUvDevice"
           parent="Device"
           glib:type-name="ArvUvDevice"
           glib:get-type="arv_uv_device_get_type"
           glib:type-struct="UvDeviceClass">
      <source-position filename="../src/arvuvdevice.h" line="36"/>
      <implements name="Gio.Initable"/>
      <constructor name="new"
                   c:identifier="arv_uv_device_new"
                   version="0.8.0"
                   throws="1">
        <source-position filename="../src/arvuvdevice.h" line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/arvuvdevice.c"
               line="726">a newly created #ArvDevice using USB3 based protocol</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="vendor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvuvdevice.c"
                 line="721">USB3 vendor string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="product" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvuvdevice.c"
                 line="722">USB3 product string</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="serial_number" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/arvuvdevice.c"
                 line="723">device serial number</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="product"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="serial-number"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="vendor"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="UvDeviceClass"
            c:type="ArvUvDeviceClass"
            glib:is-gtype-struct-for="UvDevice">
      <source-position filename="../src/arvuvdevice.h" line="36"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <class name="UvInterface"
           c:symbol-prefix="uv_interface"
           c:type="ArvUvInterface"
           parent="Interface"
           glib:type-name="ArvUvInterface"
           glib:get-type="arv_uv_interface_get_type"
           glib:type-struct="UvInterfaceClass">
      <source-position filename="../src/arvuvinterface.h" line="36"/>
      <function name="get_instance"
                c:identifier="arv_uv_interface_get_instance">
        <doc xml:space="preserve"
             filename="../src/arvuvinterface.c"
             line="346">Gets the unique instance of the GV interface.</doc>
        <source-position filename="../src/arvuvinterface.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvuvinterface.c"
               line="351">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
    </class>
    <record name="UvInterfaceClass"
            c:type="ArvUvInterfaceClass"
            glib:is-gtype-struct-for="UvInterface">
      <source-position filename="../src/arvuvinterface.h" line="36"/>
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <class name="UvStream"
           c:symbol-prefix="uv_stream"
           c:type="ArvUvStream"
           parent="Stream"
           glib:type-name="ArvUvStream"
           glib:get-type="arv_uv_stream_get_type"
           glib:type-struct="UvStreamClass">
      <source-position filename="../src/arvuvstream.h" line="36"/>
      <implements name="Gio.Initable"/>
    </class>
    <record name="UvStreamClass"
            c:type="ArvUvStreamClass"
            glib:is-gtype-struct-for="UvStream">
      <source-position filename="../src/arvuvstream.h" line="36"/>
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <class name="XmlSchema"
           c:symbol-prefix="xml_schema"
           c:type="ArvXmlSchema"
           parent="GObject.Object"
           glib:type-name="ArvXmlSchema"
           glib:get-type="arv_xml_schema_get_type"
           glib:type-struct="XmlSchemaClass">
      <source-position filename="../src/arvxmlschema.h" line="50"/>
      <constructor name="new_from_file"
                   c:identifier="arv_xml_schema_new_from_file">
        <source-position filename="../src/arvxmlschema.h" line="52"/>
        <return-value transfer-ownership="full">
          <type name="XmlSchema" c:type="ArvXmlSchema*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_path"
                   c:identifier="arv_xml_schema_new_from_path">
        <source-position filename="../src/arvxmlschema.h" line="53"/>
        <return-value transfer-ownership="full">
          <type name="XmlSchema" c:type="ArvXmlSchema*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="validate"
              c:identifier="arv_xml_schema_validate"
              throws="1">
        <source-position filename="../src/arvxmlschema.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="schema" transfer-ownership="none">
            <type name="XmlSchema" c:type="ArvXmlSchema*"/>
          </instance-parameter>
          <parameter name="xml"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="size_t"/>
          </parameter>
          <parameter name="line" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="XmlSchemaClass"
            c:type="ArvXmlSchemaClass"
            glib:is-gtype-struct-for="XmlSchema">
      <source-position filename="../src/arvxmlschema.h" line="50"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="XmlSchemaError"
                 glib:type-name="ArvXmlSchemaError"
                 glib:get-type="arv_xml_schema_error_get_type"
                 c:type="ArvXmlSchemaError"
                 glib:error-domain="arv-xml-schema-error-quark">
      <member name="structure"
              value="0"
              c:identifier="ARV_XML_SCHEMA_ERROR_INVALID_STRUCTURE"
              glib:nick="structure">
        <doc xml:space="preserve"
             filename="../src/arvxmlschema.h"
             line="42">invalid structure</doc>
      </member>
      <function name="quark" c:identifier="arv_xml_schema_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="Zip" c:type="ArvZip" disguised="1">
      <source-position filename="../src/arvtypes.h" line="98"/>
    </record>
    <record name="ZipFile" c:type="ArvZipFile" disguised="1">
      <source-position filename="../src/arvtypes.h" line="99"/>
    </record>
    <function name="acquisition_mode_from_string"
              c:identifier="arv_acquisition_mode_from_string"
              moved-to="AcquisitionMode.from_string">
      <source-position filename="../src/arvenums.h" line="64"/>
      <return-value transfer-ownership="none">
        <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="acquisition_mode_to_string"
              c:identifier="arv_acquisition_mode_to_string"
              moved-to="AcquisitionMode.to_string">
      <source-position filename="../src/arvenums.h" line="63"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="arv">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="38">This module contans a set of APIs that allows to list and enable/disable the available interfaces,
and list and instantiate devices.</doc>
    </docsection>
    <function name="auto_from_string"
              c:identifier="arv_auto_from_string"
              moved-to="Auto.from_string">
      <source-position filename="../src/arvenums.h" line="48"/>
      <return-value transfer-ownership="none">
        <type name="Auto" c:type="ArvAuto"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_to_string"
              c:identifier="arv_auto_to_string"
              moved-to="Auto.to_string">
      <source-position filename="../src/arvenums.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="Auto" c:type="ArvAuto"/>
        </parameter>
      </parameters>
    </function>
    <function name="chunk_parser_error_quark"
              c:identifier="arv_chunk_parser_error_quark"
              moved-to="ChunkParserError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="debug_enable" c:identifier="arv_debug_enable">
      <doc xml:space="preserve"
           filename="../src/arvdebug.c"
           line="236">Configures the debug output using a configuration string consisting of a comma separated list of debug categories or category/debug level pair. This function overwrites the configuration done by ARV_DEBUG environment variable.
For example, enabling debug level 3 of the gvcp category and default debug level of category genicam is done using:

&lt;informalexample&gt;&lt;programlisting&gt;
arv_debug_enable ("gvcp:3,genicam");
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
      <source-position filename="../src/arvdebug.h" line="34"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category_selection" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdebug.c"
               line="238">debug category configuration string</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="device_error_quark"
              c:identifier="arv_device_error_quark"
              moved-to="DeviceError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="disable_interface" c:identifier="arv_disable_interface">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="131">Disable an interface by name. By default, all interfaces are enabled, except 'Fake'.</doc>
      <source-position filename="../src/arvsystem.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="interface_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="133">name of the interface</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dom_implementation_add_document_type"
              c:identifier="arv_dom_implementation_add_document_type">
      <source-position filename="../src/arvdomimplementation.h" line="40"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="qualified_name" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="document_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="dom_implementation_cleanup"
              c:identifier="arv_dom_implementation_cleanup">
      <source-position filename="../src/arvdomimplementation.h" line="43"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="dom_implementation_create_document"
              c:identifier="arv_dom_implementation_create_document">
      <doc xml:space="preserve"
           filename="../src/arvdomimplementation.c"
           line="46">Create a new DOM document. Currently, only @qualified_name is used.</doc>
      <source-position filename="../src/arvdomimplementation.h" line="38"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../src/arvdomimplementation.c"
             line="53">a new #ArvDomDocument, NULL on error:</doc>
        <type name="DomDocument" c:type="ArvDomDocument*"/>
      </return-value>
      <parameters>
        <parameter name="namespace_uri" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomimplementation.c"
               line="48">namespace URI</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="qualified_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvdomimplementation.c"
               line="49">qualified name</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="enable_interface" c:identifier="arv_enable_interface">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="108">Enable an interface by name. By default, all interfaces are enabled, except 'Fake'.</doc>
      <source-position filename="../src/arvsystem.h" line="36"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="interface_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="110">name of the interface</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="exposure_mode_from_string"
              c:identifier="arv_exposure_mode_from_string"
              moved-to="ExposureMode.from_string">
      <source-position filename="../src/arvenums.h" line="88"/>
      <return-value transfer-ownership="none">
        <type name="ExposureMode" c:type="ArvExposureMode"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="exposure_mode_to_string"
              c:identifier="arv_exposure_mode_to_string"
              moved-to="ExposureMode.to_string">
      <source-position filename="../src/arvenums.h" line="87"/>
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="ExposureMode" c:type="ArvExposureMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="gc_error_quark"
              c:identifier="arv_gc_error_quark"
              moved-to="GcError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="get_device_address"
              c:identifier="arv_get_device_address"
              version="0.6.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="344">The index of a device may change after a call to arv_update_device_list().</doc>
      <source-position filename="../src/arvsystem.h" line="43"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="350">The address of the device corresponding to @index as a string.</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="346">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_id"
              c:identifier="arv_get_device_id"
              version="0.2.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="244">Queries the unique device id corresponding to index.  Prior to this
call the arv_update_device_list() function must be called.</doc>
      <source-position filename="../src/arvsystem.h" line="41"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="251">a unique device id</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="246">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_model"
              c:identifier="arv_get_device_model"
              version="0.6.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="304">Queries the device model.

Prior to this call the arv_update_device_list()
function must be called.</doc>
      <source-position filename="../src/arvsystem.h" line="45"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="313">the device model, NULL on error</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="306">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_physical_id"
              c:identifier="arv_get_device_physical_id"
              version="0.2.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="262">Queries the physical device id corresponding to index such
as the MAC address for Ethernet based devices, bus id for PCI,
USB or Firewire based devices.

Prior to this call the arv_update_device_list()
function must be called.</doc>
      <source-position filename="../src/arvsystem.h" line="42"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="273">a physical device id</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="264">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_protocol"
              c:identifier="arv_get_device_protocol"
              version="0.6.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="361">The index of a device may change after a call to arv_update_device_list().</doc>
      <source-position filename="../src/arvsystem.h" line="47"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="367">The device protocol as a string.</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="363">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_serial_nbr"
              c:identifier="arv_get_device_serial_nbr"
              version="0.6.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="324">Queries the device serial.

Prior to this call the arv_update_device_list()
function must be called.</doc>
      <source-position filename="../src/arvsystem.h" line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="333">the device serial, NULL on error</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="326">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_vendor"
              c:identifier="arv_get_device_vendor"
              version="0.6.0">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="284">Queries the device vendor.

Prior to this call the arv_update_device_list()
function must be called.</doc>
      <source-position filename="../src/arvsystem.h" line="44"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="293">the device vendor, NULL on error</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="286">device index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_interface_id" c:identifier="arv_get_interface_id">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="89">Retrieves the interface identifier. Possible values are 'Fake', 'USB3Vision'
and 'GigEVision'.</doc>
      <source-position filename="../src/arvsystem.h" line="35"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="96">The interfae identifier string.</doc>
        <type name="utf8" c:type="const char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="91">interface index</doc>
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_n_devices" c:identifier="arv_get_n_devices">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="179">Retrieves the number of currently online devices. This value is valid until
the next call to arv_update_device_list().</doc>
      <source-position filename="../src/arvsystem.h" line="40"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="185">The number of currently online devices.</doc>
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="get_n_interfaces" c:identifier="arv_get_n_interfaces">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="74">Gets the number of available interfaces, including the disabled ones.</doc>
      <source-position filename="../src/arvsystem.h" line="34"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="79">The number of available interfaces.</doc>
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="make_thread_high_priority"
              c:identifier="arv_make_thread_high_priority"
              version="0.4.0">
      <source-position filename="../src/arvrealtime.h" line="35"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvrealtime.c"
             line="288">%TRUE on success.

Try to set current thread nice level to high priority, using rtkit.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="nice_level" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvrealtime.c"
               line="286">new nice level</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="make_thread_realtime"
              c:identifier="arv_make_thread_realtime"
              version="0.4.0">
      <source-position filename="../src/arvrealtime.h" line="34"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/arvrealtime.c"
             line="232">%TRUE on success.

Try to make current thread realtime. It first try to use sched_setscheduler,
and if it fails, use rtkit.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/arvrealtime.c"
               line="230">realtime priority</doc>
          <type name="gint" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <function name="open_device"
              c:identifier="arv_open_device"
              version="0.8.0"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="378">Open a device corresponding to the given identifier. A %NULL string makes
this function return the first available device.</doc>
      <source-position filename="../src/arvsystem.h" line="49"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../src/arvsystem.c"
             line="386">A new #ArvDevice instance.</doc>
        <type name="Device" c:type="ArvDevice*"/>
      </return-value>
      <parameters>
        <parameter name="device_id"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../src/arvsystem.c"
               line="380">a device identifier string</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_fake_camera_genicam_filename"
              c:identifier="arv_set_fake_camera_genicam_filename">
      <source-position filename="../src/arvfakecamera.h" line="35"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="shutdown" c:identifier="arv_shutdown">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="428">Frees a number of ressources allocated by Aravis that would be otherwise
reported as memory leak by tools like Valgrind. The call to this function is
optional if you don't intend to check for memory leaks.</doc>
      <source-position filename="../src/arvsystem.h" line="51"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="update_device_list" c:identifier="arv_update_device_list">
      <doc xml:space="preserve"
           filename="../src/arvsystem.c"
           line="154">Updates the list of currently online devices.</doc>
      <source-position filename="../src/arvsystem.h" line="39"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="xml_schema_error_quark"
              c:identifier="arv_xml_schema_error_quark"
              moved-to="XmlSchemaError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
